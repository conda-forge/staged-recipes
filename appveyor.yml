skip_commits:
  message: /^Merge pull request /

environment:

  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script interpreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C obvci_appveyor_python_build_env.cmd"

  # Workaround for https://github.com/conda/conda-build/issues/636
  PYTHONIOENCODING: "UTF-8"

  matrix:
    # Note: Because we have to separate the py2 and py3 components due to compiler version, we have a race condition for non-python packages.
    # Not sure how to resolve this, but maybe we should be tracking the VS version in the build string anyway?
    - TARGET_ARCH: "x86"
      CONDA_PY: "27"
      PY_CONDITION: "python >=2.7,<3"
      CONDA_INSTALL_LOCN: "C:\\Miniconda"
    - TARGET_ARCH: "x86"
      CONDA_PY: "35"
      PY_CONDITION: "python >=3.5,<3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35"
    - TARGET_ARCH: "x86"
      CONDA_PY: "36"
      PY_CONDITION: "python >=3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35"
    - TARGET_ARCH: "x64"
      CONDA_PY: "27"
      PY_CONDITION: "python >=2.7,<3"
      CONDA_INSTALL_LOCN: "C:\\Miniconda-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "35"
      PY_CONDITION: "python >=3.5,<3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "36"
      PY_CONDITION: "python >=3.6"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"

artifacts:
    # Store built conda packages as artifacts
    - path: 'conda_packages\*.bz2'

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

install:
    # If there is a newer build queued for the same PR, cancel this one.
    # The AppVeyor 'rollout builds' option is supposed to serve the same
    # purpose but it is problematic because it tends to cancel builds pushed
    # directly to master instead of just PR builds (or the converse).
    # credits: JuliaLang developers.
    - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

    # Find the recipes from master in this PR and remove them.
    - cmd: echo Finding recipes merged in master and removing them.
    - cmd: cd recipes
    - cmd: |
             for /f "tokens=*" %%a in ('git ls-tree --name-only master -- .') do rmdir /s /q %%a && echo Removing recipe: %%a
    - cmd: cd ..

    # Set the CONDA_NPY, although it has no impact on the actual build. We need this because of a test within conda-build.
    - cmd: set CONDA_NPY=19

    # Remove cygwin (and therefore the git that comes with it).
    - cmd: rmdir C:\cygwin /s /q

    # Use the pre-installed Miniconda for the desired arch
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: conda config --add channels conda-forge
    - cmd: conda config --set show_channel_urls true
    - cmd: conda update --yes --quiet conda

    - cmd: conda install --yes --quiet obvious-ci conda-build-all
    - cmd: conda install --yes --quiet conda-forge-build-setup
    - cmd: run_conda_forge_build_setup

# Skip .NET project specific build phase.
build: off

test_script:
    - '%CMD_IN_ENV% conda-build-all recipes --matrix-conditions "numpy >=1.11" "%PY_CONDITION%" "r-base >=3.3.2"'
    # copy any newly created conda packages into the conda_packages dir
    - cmd: mkdir conda_packages
    # Uncomment the following two lines to make any conda packages created
    # available as build artifacts in AppVeyor
    #- cmd: 'copy /Y C:\Miniconda\conda-bld\win-32\*.bz2 conda_packages || cmd /c "exit /b 0"'
    #- cmd: 'copy /Y C:\Miniconda-x64\conda-bld\win-64\*.bz2 conda_packages || cmd /c "exit /b 0"'
