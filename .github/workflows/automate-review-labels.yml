  name: 'Automated review labels'

  on:
    issue_comment:
      types: [created]
    pull_request_review:
      types: [submitted]
    pull_request_review_comment:
      types: [created]

  jobs:
    add-review-team-label:
      name: 'When pinged, label a PR with review team'
      if: >
        github.event.issue
        && github.event.issue.pull_request
        && !contains(github.event.issue.labels.*.name, 'review-requested')
      runs-on: ubuntu-latest
      steps:
        - name: add-labels
          uses: actions/github-script@v6
          with:
            script: |
              const teams = [
                '@conda-forge/staged-recipes',
                '@conda-forge/help-c-cpp',
                '@conda-forge/help-cdts',
                '@conda-forge/help-go',
                '@conda-forge/help-java',
                '@conda-forge/help-julia',
                '@conda-forge/help-nodejs',
                '@conda-forge/help-perl',
                '@conda-forge/help-python',
                '@conda-forge/help-python-c',
                '@conda-forge/help-r',
                '@conda-forge/help-ruby'
              ];
              for (const team of teams) {
                  let text = context.payload.comment.body;
                  const regex = new RegExp(team + '[^\-]|' + team + '$');
                  let result = regex.test(text);
                  if (result) {
                      label = team.replace("@conda-forge/help-", "");
                      label_no_staged = label.replace("@conda-forge/", "");
                      github.rest.issues.addLabels({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          labels: [label_no_staged, 'review-requested']
                      })
                      github.rest.issues.removeLabel({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          name: ['Awaiting author contribution']
                      });
                      // TODO: Maybe use GitHub API to request review / assign team
                  }
              }

    remove-review-requested-label:
      name: 'When reviewed, remove review-requested label'
      if: >
        (
          github.event.issue
          && github.event.issue.pull_request
          && (github.event.sender.login != github.event.issue.user.login)
          && contains(github.event.issue.labels.*.name, 'review-requested')
        ) || (
          github.event.pull_request
          && (github.event.sender.login != github.event.pull_request.user.login)
          && contains(github.event.pull_request.labels.*.name, 'review-requested')
        )
      runs-on: ubuntu-latest
      steps:
        - name: check-membership
          uses: actions/github-script@v6
          with:
            github-token: ${{ secrets.GH_TOKEN }}
            script: |
              // This step is separate from the labeling step because it uses a token
              // with different permissions. If it is combined with the following step,
              // then the labeling actions are marked as being completed by whomever
              // created the token.
              const membership_response = github.rest.teams.getMembershipForUserInOrg({
                  org: 'conda-forge',
                  team_slug: 'staged-recipes',
                  username: '${{ github.event.sender.login }}'
              });
              membership_response.then(function(result) {
                 console.log(result);
                 if (result.data.state == 'active'){
                   return;
                 } else {
                   throw new Error('Reviewer not active member of conda-forge/staged-recipes');
                 }
              });
        - name: swap-labels
          if: ${{ success() }}
          uses: actions/github-script@v6
          with:
            script: |
              github.rest.issues.removeLabel({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: ['review-requested']
              });
              github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: ['Awaiting author contribution']
              });
