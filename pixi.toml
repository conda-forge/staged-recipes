[project]
name = "staged-recipes"
description = "The entry point to conda-forge"
version = "0.1.0"
authors = ["@conda-forge/core"]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64", "win-64"] # , "win-arm64"]

[feature.python.dependencies]
python = "3.12.*"

[feature.build.dependencies]
conda = ">=24.9.2"
conda-libmamba-solver = ">=24.9.0"
conda-build = ">=24.9"
conda-index = ">=0.3.0"
conda-forge-ci-setup = ">=4.9.3,<5.0"
conda-forge-pinning = "*"
frozendict = "*"
networkx = "2.4.*"
rattler-build-conda-compat = ">=1.2.0,<2.0.0a0"

[feature.linux]
# The linux feature runs on every platform that can run Docker.
platforms = ["linux-64", "linux-aarch64", "osx-64", "osx-arm64", "win-64"]
[feature.linux.tasks]
build-linux = { cmd = "python build-locally.py", env = { BUILD_LOCALLY_FILTER = "linux*" } }

# The osx env will run conda-build directly on the machine.
[feature.osx]
platforms = ["osx-64", "osx-arm64"]
[feature.osx.tasks]
build-osx = { cmd = "python build-locally.py", env = { BUILD_LOCALLY_FILTER = "osx*", OSX_SDK_DIR = "$PIXI_PROJECT_ROOT/.pixi/macOS-SDKs", MINIFORGE_HOME = "$CONDA_PREFIX", CONDA_BLD_PATH = "$PIXI_PROJECT_ROOT/build_artifacts" } }

# The windows env will run conda-build directly on the machine.
[feature.win]
platforms = ["win-64"] # , "win-arm64"]
[feature.win.tasks]
build-win = { cmd = "python build-locally.py", env = { BUILD_LOCALLY_FILTER = "win*", MINIFORGE_HOME = "$CONDA_PREFIX", CONDA_BLD_PATH = "$PIXI_PROJECT_ROOT/build_artifacts" } }

[environments]
# linux only needs Python to run build-locally.py. Everything else happens in Docker.
linux = ["linux", "python"]
# osx and win do run natively on the machine, so we need the build deps too
osx = ["osx", "python", "build"]
win = ["win", "python", "build"]
build = ["python", "build"]
