# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 13 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "mod2t" %}
{% set version = "2018.01.13" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/sjneph/modwt/archive/28e9f479c737836ffc870199f2468e30659ab38d.zip
  sha256: 1b64f34020ef4275d6f6f304f9477e081a3242e1337d5fa1d6854d1adffb2f32

build:
  number: 0

requirements:
  build:
    - {{ compiler('cxx') }}
  host:
    - zlib
    - cmake
  run:
    - zlib

test:
  commands:
    - modwt --help

about:
  home: https://github.com/sjneph/modwt
  license: BSD
  summary: 'Scalable Maximal Overlap Discrete Wavelet Tranform (MODWT)'

  # The remaining entries in this section are optional, but recommended
  description: |
    An efficient implementation of the the Maximal Overlap Discrete Wavelet Tranform (MODWT).
    See D. B. Percival and A. T. Walden (2000), Wavelet Methods for Time Series Analysis.
    Cambridge, England: Cambridge University Press. This is not the usual discrete wavelet transform found in,
    for example, gsl but an extended set of algorithms designed to overcome some problems with the usual discrete wavelet transform.

    See http://faculty.washington.edu/dbp/PDFFILES/4-Lund-A4.pdf for an overview and comparison to the regular discrete transform..
  doc_url: https://github.com/sjneph/modwt
  dev_url: https://github.com/sjneph/modwt

extra:
  recipe-maintainers:
    - visze
