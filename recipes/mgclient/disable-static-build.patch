--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -50,28 +50,6 @@ else()
     find_package(OpenSSL REQUIRED)
     include(GenerateExportHeader)

-    add_library(mgclient-static STATIC ${mgclient_src_files})
-
-    generate_export_header(mgclient-static
-            BASE_NAME "mgclient"
-            EXPORT_FILE_NAME "mgclient-export.h")
-
-    set_target_properties(mgclient-static PROPERTIES
-            OUTPUT_NAME mgclient)
-    target_compile_definitions(mgclient-static PUBLIC MGCLIENT_STATIC_DEFINE)
-    target_include_directories(mgclient-static
-            PRIVATE
-            "${PROJECT_SOURCE_DIR}/src"
-            PUBLIC
-            "${PROJECT_SOURCE_DIR}/include"
-            "${CMAKE_CURRENT_BINARY_DIR}"
-            "${OPENSSL_INCLUDE_DIR}")
-    target_link_libraries(mgclient-static
-            PRIVATE
-            ${OPENSSL_LIBRARIES} project_options project_c_warnings)
-
-    if(MGCLIENT_ON_WINDOWS)
-        target_link_libraries(mgclient-static PUBLIC ws2_32 crypt32 gdi32)
-    endif()
-
     add_library(mgclient-shared SHARED ${mgclient_src_files})

     generate_export_header(mgclient-shared
@@ -84,6 +62,7 @@ else()
     set_target_properties(mgclient-shared PROPERTIES
             OUTPUT_NAME mgclient
             SOVERSION ${mgclient_SOVERSION})
+    target_compile_definitions(mgclient-shared PUBLIC MGCLIENT_STATIC_DEFINE)
@@ -106,7 +84,7 @@ else()

     include(GNUInstallDirs)

-    install(TARGETS mgclient-static mgclient-shared
+    install(TARGETS mgclient-shared
           ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
           LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
           RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR})
