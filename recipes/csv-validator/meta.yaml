{% set name = "csv-validator" %}
{% set version = "1.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/digital-preservation/csv-validator/releases/download/{{ version }}/csv-validator-distribution-{{ version }}-bin.zip
  sha256: 1942afa04f004bec01e51a5177443888c6fdfb54b46589b26e82f1f60e4c5060

# TODO: Update build field
build:
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

# TODO: Update requirements field
requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx', 'fortran', among others
    - {{ compiler('jdk') }}
    # this is necessary for all compiled recipes
    - {{ stdlib('c') }}
  host:
    - python
    - pip
    - setuptools
  run:
    - python

# TODO: Update test field
test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - simplejson
    - simplejson.tests
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/digital-preservation/csv-validator
  summary: 'A Validation Tool and APIs for validating CSV (Comma Separated Value) files by using CSV Schema <https://github.com/digital-preservation/csv-schema>.'
  description: |
    The CSV Validator will take a CSV Schema file and a CSV file, 
    verify that the CSV Schema itself is syntactically correct 
    and then assert that each rule in the CSV Schema holds true for the CSV file. 
    The Validator is predominantly written in Scala 2.13 
    and runs on any platform with a Java Virtual Machine (JVM).
  license: MPL-2.0
  license_family: MPL
  license_file: LICENSE
  doc_url: http://digital-preservation.github.io/csv-validator

extra:
  recipe-maintainers:
    - thomasphung
