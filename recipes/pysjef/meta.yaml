{% set name = "pysjef" %}
{% set version = "0.2.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://gitlab.com/molpro/{{ name }}/-/archive/{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: 0968dcf253c614b15f344b243bedd05dab7898eea09fdaa09131c301f5b3fa44

build:
  number: 0
  skip: true  # [win]
  script: "CONDA_PREFIX=${PREFIX} bash build.sh"

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake >=3.14
  host:
    - python
    - pip
    - boost-cpp >=1.71
    - pugixml
    - cython >=0.24
    - regex
  run:
    - boost-cpp >=1.71
    - python
    - ipython
    - pugixml
    - lxml >=4.0
    - numpy >=1.12
    - regex
    - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.12") }}  # [osx and x86_64]

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
 imports:
    - pysjef
    - pysjef.project


about:
  home: https://molpro.gitlab.io/pysjef
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Python Simple Job Execution Framework (pysjef) is a python extension of sjef <https://molpro.gitlab.io/sjef>.'
  # The remaining entries in this section are optional, but recommended.
  description: |
    sjef allows for simple execution of programs on local or remote servers, and pysjef exposes the following features:

    Management of project bundles.
    Launching and monitoring of jobs
    Editing and viewing of input and output files
    Support for marked-up output (currently only XML, soon to include JSON)
    Maintenance of a recent project list
    Support for multiple software packages
    Additional features of pysjef include:

    Parsing of structured output (e.g. XML) and bringing the whole tree into class objects
    Grouping of projects in a tree hierarchy allowing for more complicated workflows
    Representation of project collections, individual projects and structured output as a single tree
    Processing of the project tree by selecting groups of nodes, accessing specific attributes, and creating sub-trees
  doc_url: https://molpro.gitlab.io/pysjef
  dev_url: https://gitlab.com/molpro/pysjef

extra:
  recipe-maintainers:
    - pjknowles
