{% set name = "openvino" %}
{% set version = "2022.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - path: ../../../{{ name }}
    folder: openvino_sources
  # - url: https://github.com/openvinotoolkit/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  #   fn: {{ version }}.tar.gz
  #   sha256: 5522f3113924325499f15cd8a3fe47a42dfa127a6b76c1921b51cf3c3f2a6aa6
  # - git_url: https://github.com/openvinotoolkit/{{ name }}.git
  #   git_rev: {{ version }}
  #   git_depth: 1
  # - git_url: https://github.com/openvinotoolkit/{{ name }}_contrib.git
  #   folder: openvino_sources/src/plugins

build:
  number: 0

requirements:
  build:
    # build
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - git
    - cmake >=3.13
    - ccache
    - ninja # [win]
    - make  # [not win]
    - pkg-config # to find zlib and libusb
    # python
    - python >=3.6
    - cython >=0.29
    - sysroot_linux-64 =2.17 # [linux and x86_64]
  host:
    - libgcc-ng # [linux]
    - libstdcxx-ng # [linux]
    # core
    - tbb-devel >=2021.5
    - pugixml # static version is provided
    # myriad
    - libusb >=1.0.24
    # samples
    - zlib
    - nlohmann_json
    - opencv
    - gflags
  # TODO: fix to enable openvino meta-package
  # run:
  #   - libopenvino
  #   - libopenvino-plugins
  #   - libopenvino-dev

outputs:
  - name: libopenvino
    version: {{ version }}
    script: install.sh
    about:
      summary: OpenVINO Core Runtime library
    build:
      run_exports:
        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}
    requirements:
      host:
        # - libgcc-ng # [linux]
        # - libstdcxx-ng # [linux]
        - tbb >=2021.5
        - libhwloc >=2.5 # starting from this version hwloc supports Apple Silicon
      run:
        - tbb >=2021.5 # TBB does not provide 'run_exports'
    test:
      source_files:
        - openvino_sources/bin/intel64/Release/ieUnitTests
      commands:
        {% set openvino_libs = [] %}
        {{ openvino_libs.append("") or "" }}
        {{ openvino_libs.append("_c") or "" }}
        {{ openvino_libs.append("_ir_frontend") or "" }}
        {{ openvino_libs.append("_paddle_frontend") or "" }}
        {{ openvino_libs.append("_onnx_frontend") or "" }}
        {% for openvino_lib in openvino_libs %}
        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version }}       # [unix]
        - test -f $PREFIX/lib/openvino{{ openvino_lib }}${SHLIB_EXT}                        # [win]
        {% endfor %}
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PREFIX/lib                               # [unix]
        - export PATH=$PATH:$PREFIX/lib                                                     # [win]
        - openvino_sources/bin/intel64/Release/ieUnitTests --gtest_filter=-*ExtensionTests*

  - name: libopenvino-plugins
    version: {{ version }}
    script: install_plugins.sh
    about:
      summary: OpenVINO Inference Plugins
    build:
      run_exports:
        - {{ pin_subpackage('libopenvino-plugins', max_pin='x.x.x') }}
    requirements:
      run:
      - libopenvino
      - khronos-opencl-icd-loader # [win or osx]
    test:
      commands:
        {% set openvino_plugin_libs = [] %}
        {{ openvino_plugin_libs.append("intel_cpu") or "" }}
        {{ openvino_plugin_libs.append("intel_gpu") or "" }}
        {{ openvino_plugin_libs.append("intel_gna") or "" }}
        {{ openvino_plugin_libs.append("intel_myriad") or "" }}
        {{ openvino_plugin_libs.append("auto") or "" }}
        {{ openvino_plugin_libs.append("auto_batch") or "" }}
        {{ openvino_plugin_libs.append("hetero") or "" }}
        {% for openvino_plugin_lib in openvino_plugin_libs %}
        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_{{ openvino_plugin_lib }}_plugin${SHLIB_EXT} # [unix]
        - test -f $PREFIX/lib/openvino-{{ version }}/openvino_{{ openvino_plugin_lib }}_plugin${SHLIB_EXT}    # [win]
        {% endfor %}

  - name: libopenvino-dev
    version: {{ version }}
    script: install_dev.sh
    about:
      summary: OpenVINO Runtime Development files
    build:
      overlinking_ignore_patterns:
        - 
    requirements:
      - libopenvino
      - libopenvino-plugins
      - tbb-devel >=2021.5 # TODO: we don't want to have a dependency on TBB cmake !!!!
    test:
      requires:
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - ninja  # [win]
        - make   # [not win]
        - cmake >=3.13
        - zlib
        - nlohmann_json
        - opencv
        - gflags
      source_files:
        - openvino_sources/samples
        - openvino_sources/thirdparty/cnpy
      commands:
        - mkdir -p openvino_sources/samples/cpp/thirdparty
        - cp -R openvino_sources/thirdparty/cnpy openvino_sources/samples/cpp/thirdparty/cnpy
        - cmake -S openvino_sources/samples/cpp -B samples_cpp_build
        - cmake --build samples_cpp_build --parallel $CPU_COUNT
        - samples_cpp_build/intel64/hello_query_device

about:
  home: https://github.com/openvinotoolkit/openvino
  summary: 'Intel® Distribution of OpenVINO™ Toolkit'
  description: |
    Intel® Distribution of OpenVINO™ toolkit is an open-source toolkit for
    optimizing and deploying AI inference. It can be used to develop
    applications and solutions based on deep learning tasks, such as:
    emulation of human vision, automatic speech recognition, natural
    language processing, recommendation systems, etc. It provides
    high-performance and rich deployment options, from edge to cloud
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - licensing/third-party-programs.txt
    - licensing/onednn_third-party-programs.txt
    - licensing/runtime-third-party-programs.txt
    - licensing/tbb_third-party-programs.txt
  doc_url: https://docs.openvino.ai/latest/index.html
  dev_url: https://github.com/openvinotoolkit/openvino

extra:
  recipe-maintainers:
    - ilya-lavrenov
