{% set name = "openvino" %}
{% set version = "2022.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  path: ../../../openvino
  # url: https://github.com/openvinotoolkit/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  # fn: {{ version }}.tar.gz
  # sha256: 5522f3113924325499f15cd8a3fe47a42dfa127a6b76c1921b51cf3c3f2a6aa6

build:
  number: 0

requirements:
  build:
    # build
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - git
    - cmake >=3.13
    - ccache
    - ninja # [win]
    - make  # [not win]
    # python
    - python >=3.6
    - cython
    # common
    # - gflags # compile tool
    # cpu
    - sysroot_linux-64 =2.17
    # myriad
    - pkg-config
  host:
    # - gflags # compile tool
    - tbb >=2021.5
    - pugixml # static version is provided
    # myriad
    - libusb
  run:
    # - gflags # compile tool
    - tbb >=2021.5
    - libusb

test:
  files:
    - bin/intel64/Release/ieUnitTests
  commands:
     # are they running?
    - bin/intel64/Release/ieUnitTests

outputs:
  - name: libopenvino
    version: {{ version }}
    script: install.sh
    about:
      summary: OpenVINO Core Runtime library
    test:
      source_files:
        - bin/intel64/Release/ieUnitTests
      commands:
        {% set openvino_libs = [] %}
        {{ openvino_libs.append("") or "" }}
        {{ openvino_libs.append("_c") or "" }}
        {{ openvino_libs.append("_ir_frontend") or "" }}
        {{ openvino_libs.append("_paddle_frontend") or "" }}
        {{ openvino_libs.append("_onnx_frontend") or "" }}
        {% for openvino_lib in openvino_libs %}
        - test -f $PREFIX/runtime/lib/intel64/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version }} # [unix]
        {% endfor %}
        - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PREFIX/runtime/lib/intel64 # [unix]
        - bin/intel64/Release/ieUnitTests --gtest_filter=-*ExtensionTests* # [unix]

  - name: libopenvino-dev
    version: {{ version }}
    script: install_dev.sh
    about:
      summary: OpenVINO Runtime Development files
    requirements:
      run:
        - {{ pin_subpackage('libopenvino', exact=True) }} # dev package is for specific version of openvino
    test:
      requires:
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - ninja  # [win]
        - make   # [not win]
        - cmake >=3.13
        - zlib
        - nlohmann_json
        - gflags
      source_files:
        - samples
        - thirdparty/cnpy
      commands:
        - mkdir -p samples/cpp/thirdparty
        - cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy
        - cmake -DOpenVINO_DIR=$PREFIX/runtime/cmake -S samples/cpp -B samples_cpp_build
        - cmake --build samples_cpp_build --parallel
        - samples_cpp_build/intel64/hello_query_device

    # requirements:
    #   build:
    #     - some-dep
    #   run:
    #     - some-dep
    # test:
    #   script: some-other-script.py
  # - name: subpackage-name
  #   script: move-files.py

about:
  home: https://github.com/openvinotoolkit/openvino
  summary: 'Intel® Distribution of OpenVINO™ Toolkit'
  description: |
    Intel® Distribution of OpenVINO™ toolkit is an open-source toolkit for
    optimizing and deploying AI inference. It can be used to develop
    applications and solutions based on deep learning tasks, such as:
    emulation of human vision, automatic speech recognition, natural
    language processing, recommendation systems, etc. It provides
    high-performance and rich deployment options, from edge to cloud
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - licensing/third-party-programs.txt
    - licensing/onednn_third-party-programs.txt
    - licensing/runtime-third-party-programs.txt
    - licensing/tbb_third-party-programs.txt
    - licensing/third-party-programs.txt
  doc_url: https://docs.openvino.ai/latest/index.html
  dev_url: https://github.com/openvinotoolkit/openvino

extra:
  recipe-maintainers:
    - ilya-lavrenov
