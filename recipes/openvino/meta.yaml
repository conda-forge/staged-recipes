{% set name = "openvino" %}
{% set version = "2022.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # path to local openvino build
  path: ../../../openvino
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/{{ name }}/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  # sha256: 5522f3113924325499f15cd8a3fe47a42dfa127a6b76c1921b51cf3c3f2a6aa6
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  skip: True  # [py<=36]"
  number: 0

requirements:
  build:
    # build
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - git
    - cmake
    - ccache
    - ninja
    # python
    - python
    - cython
    # common
    - tbb-devel
    - pugixml # static version is provided
    - zlib # samples
    # - gflags # compile tool
    # cpu
    - sysroot_linux-64=2.17
    # myriad
    - pkg-config
    - libusb
  host:
    - tbb
    - gflags # compile tool
    - libusb
  run:
    - tbb
    - gflags # compile tool
    - libusb

test:
  files:
    - bin/intel64/Release/ieUnitTests
  commands:
    - bin/intel64/Release/ieUnitTests

outputs:
  - name: libopenvino
    version: {{ version }}
    # requirements:
    #   build:
    #     - some-dep
    #   run:
    #     - some-dep
    # test:
    #   script: some-other-script.py
  # - name: subpackage-name
  #   script: move-files.py

about:
  home: https://github.com/openvinotoolkit/openvino
  summary: 'Intel® Distribution of OpenVINO™ Toolkit'
  description: |
    Intel® Distribution of OpenVINO™ toolkit is an open-source toolkit for
    optimizing and deploying AI inference. It can be used to develop
    applications and solutions based on deep learning tasks, such as:
    emulation of human vision, automatic speech recognition, natural
    language processing, recommendation systems, etc. It provides
    high-performance and rich deployment options, from edge to cloud
  license: Apache-2.0
  license_family: Apache
  # It is required to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # Please also note that some projects have multiple license files which all need to be added using a valid yaml list.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE.txt
  doc_url: https://docs.openvino.ai/latest/index.html
  dev_url: https://github.com/openvinotoolkit/openvino

extra:
  recipe-maintainers:
    - ilya-lavrenov
