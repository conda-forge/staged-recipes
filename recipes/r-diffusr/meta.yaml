{% set version = '0.1.4' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-diffusr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/diffusr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/diffusr/diffusr_{{ version }}.tar.gz
  sha256: 311aa8e3a26a76b736d56e9e390f88c61d1ba87b1cde6edbef81d3350f1a70b8

build:
  merge_build_host: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}        # [not win]
    - {{ compiler('cxx') }}      # [not win]
    - {{native}}toolchain        # [win]
    - {{posix}}filesystem        # [win]
    - {{posix}}make
    - {{posix}}sed               # [win]
    - {{posix}}coreutils         # [win]
    - {{posix}}zip               # [win]
  host:
    - r-base
    - r-rcpp
    - r-rcppeigen
    - r-igraph
  run:
    - r-base
    - {{native}}gcc-libs         # [win]
    - r-rcpp
    - r-rcppeigen
    - r-igraph

test:
  commands:
    - $R -e "library('diffusr')"           # [not win]
    - "\"%R%\" -e \"library('diffusr')\""  # [win]

about:
  home: https://github.com/dirmeier/diffusr
  license: GPL (>= 3)
  summary: Implementation of network diffusion algorithms such as heat diffusion or Markov random
    walks. Network diffusion algorithms generally spread information in the form of
    node weights along the edges of a graph to other nodes. These weights can for example
    be interpreted as temperature, an initial amount of water, the activation of neurons
    in the brain, or the location of a random surfer in the internet. The information
    (node weights) is iteratively propagated to other nodes until a equilibrium state
    or stop criterion occurs.
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: diffusr
# Type: Package
# Title: Network Diffusion Algorithms
# Version: 0.1.4
# Date: 2018-04-20
# Authors@R: person("Simon", "Dirmeier", email = "simon.dirmeier@gmx.de", role = c("aut", "cre"))
# Maintainer: Simon Dirmeier <simon.dirmeier@gmx.de>
# Description: Implementation of network diffusion algorithms such as heat diffusion or Markov random walks. Network diffusion algorithms generally spread information in the form of node weights along the edges of a graph to other nodes. These weights can for example be interpreted as temperature, an initial amount of water, the activation of neurons in the brain, or the location of a random surfer in the internet. The information (node weights) is iteratively propagated to other nodes until a equilibrium state or stop criterion occurs.
# URL: https://github.com/dirmeier/diffusr
# BugReports: https://github.com/dirmeier/diffusr/issues
# License: GPL (>= 3)
# Depends: R (>= 3.4)
# LazyData: TRUE
# LinkingTo: Rcpp, RcppEigen
# Imports: Rcpp, igraph, methods
# Suggests: knitr, rmarkdown, testthat, lintr, Matrix
# VignetteBuilder: knitr
# RoxygenNote: 6.0.1
# SystemRequirements: C++11
# NeedsCompilation: yes
# Packaged: 2018-05-17 20:40:50 UTC; simondi
# Author: Simon Dirmeier [aut, cre]
# Repository: CRAN
# Date/Publication: 2018-05-17 21:01:21 UTC
