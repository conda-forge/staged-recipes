{% set name = "pyproprop" %}
{% set version = "0.0.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: ac554b52be0e922b233f27ca67beef1fd7af5155eab3ea7a466408fcab0c632c

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"
  noarch: generic

requirements:
  host:
    - python
    - pip
  run:
    - python
    - numpy>=1.19

test:
  imports:
    - pyproprop
  requires:
    - hypothesis
    - pytest

about:
  home: https://github.com/brocksam/pyproprop
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Defensive DRY Python properties without the boilerplate'
  description: |
    pyproprop lets you write classes that contain lots of repetitive properties 
    which implement idioms such as type checking, bounds checking, type casting, 
    method applications etc. with ease and in a DRY manner.
  doc_url: https://pyproprop.readthedocs.io/
  dev_url: https://github.com/brocksam/pyproprop

extra:
  recipe-maintainers:
    - brocksam
    - jackirvine97