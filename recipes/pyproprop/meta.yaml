{% set name = "pyproprop" %}
{% set version = "0.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 178f74092579e199a5e7b74da1e404098b63ab77428bbe0b9ff9a9df1633cf7d

build:
  number: 0
  noarch: python
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - pip
    - python >=3.6
  run:
    - python >=3.6
    - numpy >=1.17
    - typing >=3.7

test:
  imports:
    - pyproprop
  
about:
  home: https://github.com/brocksam/pyproprop
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Defensive DRY Python properties without the boilerplate
  description: |
    pyproprop lets you write classes that contain lots of repetitive properties 
    which implement idioms such as type checking, bounds checking, type casting, 
    method applications etc. with ease and in a DRY manner.
  doc_url: https://pyproprop.readthedocs.io/
  dev_url: https://github.com/brocksam/pyproprop

extra:
  recipe-maintainers:
    - brocksam
    - jackirvine97
