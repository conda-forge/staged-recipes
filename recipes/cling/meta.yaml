{% set name = "cling" %}
{% set version = "0.3.post" %}
{% set commit = "efd446871cfb077189bf3df7fbbad58de51ff7fa" %}
{% set sha256 = "b1c3eed7614c14e2bd092c3c237527eacaf0445358b5c236bb4fa73bbd1a4bb0" %}
{% set build_number = "0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/root-mirror/cling/archive/{{ commit }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ build_number }}
  string: {{ build_number }}

  features:
    - cling
    - llvmcling
    - clangcling

requirements:
  build:
    - toolchain
    - cmake
    - llvmdev
    - clangdev
    - jupyter_client
    - cling-patches
    - gcc  # [linux]
    - libgcc  # [unix]
    
  run:
    - llvmdev
    - clangdev
    - cling-patches
    - vs2015_runtime  # [win]
    - libgcc  # [unix]

test:
  commands:
    - test -f ${PREFIX}/share/cmake/cling/ClingConfig.cmake         # [unix]
    - test -f ${PREFIX}/share/cmake/cling/ClingConfigVersion.cmake  # [unix]
    - if exist %LIBRARY_PREFIX%\share\cmake\cling\ClingConfig.cmake (exit 0) else (exit 1)    # [win]
    - if exist %LIBRARY_PREFIX%\share\cmake\cling\ClingConfigVersion.cmake (exit 0) else (exit 1)    # [win]

about:
  home: https://root.cern.ch/cling
  license: UI/NCSAOSL
  license_family: BSD
  license_file: LICENSE.TXT
  summary: 'Cling - The Interactive C++ Interpreter'
  description: |
    Cling is an interactive C++ interpreter, built on top of Clang and LLVM compiler infrastructure. Cling realizes the read-eval-print loop (REPL) concept, in order to leverage rapid application development. Implemented as a small extension to LLVM and Clang, the interpreter reuses their strengths such as the praised concise and expressive compiler diagnostics.
  doc_url: https://root.cern.ch/cling
  dev_url: https://github.com/root-mirror/cling

extra:
  recipe-maintainers:
    - SylvainCorlay
    - JohanMabille
