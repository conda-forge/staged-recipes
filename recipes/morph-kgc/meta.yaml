{% set version = "2.8.0" %}

# handle undefined PYTHON in `noarch: generic` outputs
{% if PYTHON is not defined %}{% set PYTHON = "$PYTHON" %}{% endif %}

package:
  name: morph-kgc
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/m/morph-kgc/morph_kgc-{{ version }}.tar.gz
  sha256: 1d95eeaa01fa9a272444e0d18f04151ff2be769bf9c816228fcb98f3f4e35b3c
  patches:
    - 0000-loosen-ruamel-yaml.patch

build:
  noarch: python
  script:
    - {{ PYTHON }} {{ RECIPE_DIR }}/check_recipe.py
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - hatchling >=1.11.0
    - packaging
    - pip
    - python >=3.9
    - ruamel.yaml
    - tomli
  run:
    - duckdb >=0.10.0,<2.0.0
    - elementpath >=4.0.0,<5.0.0
    - falcon >=3.0.0,<4.0.0
    - jsonpath-python >=1.0.6,<2.0.0
    - pandas >=2.1.0,<3.0.0
    - pyoxigraph >=0.3.0,<0.4.0
    - python >=3.9
    - rdflib >=6.1.1,<8.0.0
    - ruamel.yaml >=0.18.0,<0.19.0

test:
  imports:
    - morph_kgc
  commands:
    - pip check
  requires:
    - pip

outputs:
  - name: morph-kgc

  - name: morph-kgc-with-excel
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - openpyxl >=3.0.0,<4.0.0
        - odfpy >=1.4.1,<2.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-kafka
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - kafka-python >=2.0.2,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-mssql
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - pymssql >=2.2.7, <3.0.0
        - sqlalchemy >=2.0.0,<3.0.0
        - sql-metadata >=2.6.0,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-mysql
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - cryptography >=42.0.0,<43.0.0
        - pymysql >=1.1.0,<2.0.0
        - sql-metadata >=2.6.0,<3.0.0
        - sqlalchemy >=2.0.0,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-oracle
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - cx_oracle >=8.3.0,<9.0.0
        - sql-metadata >=2.6.0,<3.0.0
        - sqlalchemy >=2.0.0,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-postgresql
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - psycopg >=3.0.0,<4.0.0
        - sqlalchemy >=2.0.0,<3.0.0
        - sql-metadata >=2.6.0,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}


  - name: morph-kgc-with-spss
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - pyreadstat >=1.2.0,<2.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}


  - name: morph-kgc-with-sqlite
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - sqlalchemy >=2.0.0,<3.0.0
        - sql-metadata >=2.6.0,<3.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip]}

  - name: morph-kgc-with-tabular
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc", max_pin="x.x.x") }}
        - pyarrow >=14.0.0,<16.0.0
    test: {imports: [morph_kgc], commands: [pip check], requires: [pip, numpy<2]}

  - name: morph-kgc-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("morph-kgc-with-kafka", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-mysql", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-postgresql", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-oracle", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-mssql", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-excel", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-tabular", max_pin="x.x.x") }}
        - {{ pin_subpackage("morph-kgc-with-spss", max_pin="x.x.x") }}
    test:
      source_files:
        - test
      requires:
        - pip
        - pytest
        - coverage
        - numpy <2
      commands:
        - coverage run --source morph_kgc --branch -m pytest -vv --tb=long --color=yes
        - coverage report --show-missing --skip-covered --fail-under=63

about:
  home: https://github.com/morph-kgc/morph-kgc
  summary: Powerful [R2]RML engine to create RDF knowledge graphs from heterogeneous data sources.
  license: Apache-2.0
  license_file: LICENSE
  doc_url: https://morph-kgc.readthedocs.io

extra:
  feedstock-name: morph-kgc
  recipe-maintainers:
    - bollwyvl
