{% set name = "kernel-tuner" %}
{% set version = "1.0.0b6" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/kernel_tuner/kernel_tuner-{{ version }}.tar.gz
  sha256: 8ec7cac41f1eec84e54bf2452008c905fad90279949e477355fb9eda054b1beb

build:
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0
  noarch: python

requirements:
  host:
    - pip
    - poetry-core >=1.7.0
    - python >=3.8,<3.12
    - setuptools >=67.7.2
  run:
    - __unix
    - jsonschema
    - numpy >=1.22.2,<2
    - python-constraint2 >=2.0.0b3,<3
    - pandas >=2.0.0,<3
    - python >=3.8,<3.12
    - scikit-learn >=1.0.2,<2
    - scipy >=1.10.1,<2
    - xmltodict

test:
  commands:
    - pip check
    - pytest
  imports:
    - kernel_tuner
  requires:
    - mock
    - pep440
    - pip
    - pytest >=7.4
    - pytest-cov
    - tomli
  source_files:
    - pyproject.toml
    - test
    - README.rst

about:
  home: https://github.com/kerneltuner/kernel_tuner
  summary: 'An easy to use CUDA/OpenCL kernel tuner in Python'
  description: |
    Kernel Tuner simplifies the software development of optimized and
    auto-tuned GPU programs, by enabling Python-based unit testing of GPU code
    and making it easy to develop scripts for auto-tuning GPU kernels. This
    also means no extensive changes and no new dependencies are required in the
    kernel code. The kernels can still be compiled and used as normal from any
    host programming language.

    Kernel Tuner provides a comprehensive solution for auto-tuning GPU
    programs, supporting auto-tuning of user-defined parameters in both host
    and device code, supporting output verification of all benchmarked kernels
    during tuning, as well as many optimization strategies to speed up the
    tuning process.
  license: Apache-2.0
  license_file: LICENSE
  doc_url: https://kerneltuner.github.io

extra:
  recipe-maintainers:
    - benvanwerkhoven
    - bouweandela
    - fjwillemsen
    - isazi
