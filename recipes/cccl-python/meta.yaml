{% set name = "cccl-python" %}
{% set cpp_version = "3.0.2" %}
{% set version = "0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/cccl/archive/refs/tags/v{{ cpp_version }}.tar.gz
  sha256: 3ded63682f94071685cd6492cee70ad2a1feae02abfb3fbcce50e2d2f22edf4e

build:
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}
  script: {{ PYTHON }} -m pip install python/cuda_cccl -vv
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  skip: true  # [(py < 39) or cuda_compiler_version not in ("12.9",) or ppc64le]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - {{ stdlib('c') }}
    - cmake
    - make
  host:
    - cuda-version {{ cuda_compiler_version }}
    - cuda-nvrtc-dev
    - libnvjitlink-dev
    - python
    - cython
    - scikit-build-core >=0.10
    - setuptools-scm
    - pip
  run:
    - {{ pin_compatible("cuda-version", min_pin="x") }}
    - python
    - numba >=0.60.0
    - cuda-pathfinder >=1.1.0
    - cuda-core
    - numba-cuda >=0.18.0

test:
  imports:
    - cuda.cccl
    - cuda.cccl.headers
    - cuda.cccl.cooperative
    - cuda.cccl.parallel


about:
  home: https://github.com/NVIDIA/cccl
  summary: 'Python interfaces to CUDA Core Compute Libraries (CCCL)'
  description: 'Python interfaces to CUDA Core Compute Libraries (CCCL)'
  license: LicenseRef-NVIDIA-SOFTWARE-LICENSE
  license_file: LICENSE
  # The doc_url and dev_url are optional.
  doc_url: https://nvidia.github.io/cccl/python/
  dev_url: https://github.com/NVIDIA/cccl

extra:
  recipe-maintainers:
    - leofang
    - cpcloud
    - conda-forge/cuda
