{% set name = "cccl-python" %}
{% set cpp_version = "3.1.0-rc5" %}
{% set version = "0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/cccl/archive/refs/tags/v{{ cpp_version }}.tar.gz
  sha256: 47085f898875d40a24848dc2951b7e4fc04149d939af2e7ae8b3f46ceab4a564

build:
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}
  script: |
    export CMAKE_GENERATOR=Ninja
    {{ PYTHON }} -m pip install python/cuda_cccl -vv --no-deps --no-build-isolation
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  skip: true  # [(py < 39) or cuda_compiler_version not in ("12.6",) or ppc64le or win64]
  ignore_run_exports_from:
    - {{ compiler('cuda') }}
    - cuda-nvrtc-dev
    - libnvjitlink-dev
    - cuda-driver-dev
  missing_dso_whitelist:
    - "*/libcuda.so.1"

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - {{ stdlib('c') }}
    - cmake
    - ninja
  host:
    - cuda-version {{ cuda_compiler_version }}
    - cuda-nvrtc-dev
    - libnvjitlink-dev
    - cuda-driver-dev
    - python
    - cython
    - scikit-build-core >=0.10
    - setuptools-scm
    - pip
    - cmake
    - ninja
  run:
    - {{ pin_compatible("cuda-version", min_pin="x") }}
    - python
    - numba >=0.60.0
    - cuda-pathfinder >=1.1.0
    - cuda-core
    - numba-cuda >=0.18.0
    - cuda-nvrtc
    - libnvjitlink
  run_constrained:
    - __cuda >=12.0

test:
  requires:
    # need the libcuda stub for import test
    - cuda-driver-dev  # [linux and cuda_compiler == "cuda-nvcc"]
  imports:
    - cuda.cccl
    - cuda.cccl.headers
    - cuda.cccl.cooperative
  commands:
    - LD_PRELOAD="${PREFIX}/targets/x86_64-linux/lib/stubs/libcuda.so" python -c 'import cuda.cccl.parallel'  # [linux64 and cuda_compiler == "cuda-nvcc"]


about:
  home: https://github.com/NVIDIA/cccl
  summary: 'Python interfaces to CUDA Core Compute Libraries (CCCL)'
  description: 'Python interfaces to CUDA Core Compute Libraries (CCCL)'
  license: LicenseRef-NVIDIA-SOFTWARE-LICENSE
  license_file: LICENSE
  # The doc_url and dev_url are optional.
  doc_url: https://nvidia.github.io/cccl/python/
  dev_url: https://github.com/NVIDIA/cccl

extra:
  recipe-maintainers:
    - leofang
    - cpcloud
    - conda-forge/cuda
    - oleksandr-pavlyk
