{% set name = "cogger" %}
{% set version = "0.0.7" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/airbusgeo/cogger/archive/v{{ version }}.tar.gz
  sha256: 1bbccd1500a517b6eb44bfa12dff20c0b92612bc0c10b5dca78e1b0eff557097

build:
  number: 0
  binary_relocation: false
  script:
    - go build -v -o "%LIBRARY_BIN%\cogger.exe" "cmd\cogger\main.go"   # [win]
    - go build -v -o cogger --ldflags '-s -w' cmd/cogger/main.go       # [unix]
    - mkdir -p "$PREFIX/bin/"                                          # [unix]
    - install cogger "$PREFIX/bin/cogger"                              # [unix]

requirements:
  build:
    - {{ compiler('go') }}
    - {{ compiler('c') }}
    - make

test:
  commands:
    - cogger -h      # [unix]
    - cogger.exe -h  # [win]

about:
  home: https://github.com/airbusgeo/cogger
  summary: 'cogger is a fast geotiff to COG converter'
  description: |
    Cogger is a standalone binary and a golang library that reads an internally tiled 
    geotiff (optionally with overviews and masks) and rewrites it as a Cloud Optimized
    Geotiff (COG). This process being a reshuffling of the original geotiff's bytes, 
    it should run as fast as the underlying disk or network i/o.

    Cogger does not do any pixel manipulation on the provided image, it is up to you to 
    provide an input geotiff which can be suitably transformed to a COG, namely:

      * it must be internally tiled
      * it should be compressed with one of the standard supported tiff compression mechanisms
      * it should contain overviews
  license: Apache-2.0
  license_file: LICENSE
  doc_url: https://github.com/airbusgeo/cogger

extra:
  recipe-maintainers:
    - rphel
