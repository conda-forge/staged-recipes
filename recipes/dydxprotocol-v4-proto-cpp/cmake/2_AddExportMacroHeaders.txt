set(MACRO_DIR "${CMAKE_CURRENT_BINARY_DIR}/_export_macro")
file(MAKE_DIRECTORY ${MACRO_DIR})

set(EXPORT_MACRO_HEADERS)
set(EXPORT_MACRO_CCFILES)
set(EXPORT_MACRO_FILES)

foreach(FILE ${GENERATED_PROTO_FILES})
    file(RELATIVE_PATH REL_PATH ${GENERATED_PROTO_DIR} ${FILE})
    get_filename_component(REL_DIR ${REL_PATH} DIRECTORY)
    get_filename_component(FILE_NAME ${FILE} NAME)
    get_filename_component(FILE_EXT ${FILE} EXT)

    set(MACRO_FILE "${MACRO_DIR}/${REL_PATH}")
    file(MAKE_DIRECTORY "${MACRO_DIR}/${REL_DIR}")
    list(APPEND EXPORT_MACRO_FILES "${MACRO_FILE}")

    if(FILE_EXT STREQUAL ".pb.h")
        list(APPEND EXPORT_MACRO_HEADERS "${MACRO_FILE}")
        add_custom_command(
            OUTPUT ${MACRO_FILE}
            COMMAND ${CMAKE_COMMAND}
                -D INPUT_FILES=${FILE}
                -D INSERTED_FILE=$ENV{RECIPE_DIR}/cmake/dydx_v4_proto_export.h
                -D OUTPUT_DIR=${MACRO_DIR}/${REL_DIR}
                -P $ENV{RECIPE_DIR}/cmake/PrependAppendInsertFile.cmake
            DEPENDS ${FILE}
        )
    elseif(FILE_EXT STREQUAL ".pb.cc")
        list(APPEND EXPORT_MACRO_CCFILES "${MACRO_FILE}")
        add_custom_command(
            OUTPUT ${MACRO_FILE}
            COMMAND ${CMAKE_COMMAND} -E copy ${FILE} ${MACRO_DIR}/${REL_DIR}
            DEPENDS ${FILE}
        )
    endif()
endforeach()

add_custom_target(generate_export_macro_headers DEPENDS ${EXPORT_MACRO_FILES})
