diff --git CMakeLists.txt CMakeLists.txt
index d214d30..93f61ca 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -537,12 +537,6 @@ IF(CYGWIN)
   SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG")
 ENDIF()
 
-IF(UNIX AND NOT WIN32 AND NOT APPLE)
-  IF(CMAKE_SIZEOF_VOID_P MATCHES "8")
-      SET(LIB_POSTFIX "64" CACHE STRING "suffix for 32/64 dir placement")
-      MARK_AS_ADVANCED(LIB_POSTFIX)
-  ENDIF()
-ENDIF()
 IF(NOT DEFINED LIB_POSTFIX)
     SET(LIB_POSTFIX "")
 ENDIF()
diff --git src/osgQt/CMakeLists.txt src/osgQt/CMakeLists.txt
index 60f3250..9014eb5 100644
--- src/osgQt/CMakeLists.txt
+++ src/osgQt/CMakeLists.txt
@@ -84,6 +84,60 @@ ENDIF( QT4_FOUND )
 
 SETUP_LIBRARY(${LIB_NAME})
 
+    macro(qt5_use_modules_fix _target _link_type)
+        if(NOT CMAKE_MINIMUM_REQUIRED_VERSION VERSION_LESS 2.8.11)
+            if(CMAKE_WARN_DEPRECATED)
+                set(messageType WARNING)
+            endif()
+            if(CMAKE_ERROR_DEPRECATED)
+                set(messageType FATAL_ERROR)
+            endif()
+            if(messageType)
+                message(${messageType} "The qt5_use_modules macro is obsolete. Use target_link_libraries with IMPORTED targets instead.")
+            endif()
+        endif()
+
+        if (NOT TARGET ${_target})
+            message(FATAL_ERROR "The first argument to qt5_use_modules must be an existing target.")
+        endif()
+        if ("${_link_type}" STREQUAL "LINK_PUBLIC" OR "${_link_type}" STREQUAL "LINK_PRIVATE" )
+            set(_qt5_modules ${ARGN})
+            set(_qt5_link_type ${_link_type})
+        else()
+            set(_qt5_modules ${_link_type} ${ARGN})
+        endif()
+
+        if ("${_qt5_modules}" STREQUAL "")
+            message(FATAL_ERROR "qt5_use_modules requires at least one Qt module to use.")
+        endif()
+
+        foreach(_module ${_qt5_modules})
+            if (NOT Qt5${_module}_FOUND)
+                find_package(Qt5${_module} PATHS "${_Qt5_COMPONENT_PATH}" NO_DEFAULT_PATH)
+                if (NOT Qt5${_module}_FOUND)
+                    message(FATAL_ERROR "Can not use \"${_module}\" module which has not yet been found.")
+
+                endif()
+            endif()
+            set_target_properties(Qt5::${_module} PROPERTIES
+              MAP_IMPORTED_CONFIG_RELEASE NONE
+            )
+            target_link_libraries(${_target} ${_qt5_link_type} Qt5${_module} Qt5Core Qt5Gui)
+            set_property(TARGET ${_target} APPEND PROPERTY INCLUDE_DIRECTORIES ${Qt5${_module}_INCLUDE_DIRS})
+            set_property(TARGET ${_target} APPEND PROPERTY COMPILE_DEFINITIONS ${Qt5${_module}_COMPILE_DEFINITIONS})
+            set_property(TARGET ${_target} APPEND PROPERTY COMPILE_DEFINITIONS_RELEASE QT_NO_DEBUG)
+            set_property(TARGET ${_target} APPEND PROPERTY COMPILE_DEFINITIONS_RELWITHDEBINFO QT_NO_DEBUG)
+            set_property(TARGET ${_target} APPEND PROPERTY COMPILE_DEFINITIONS_MINSIZEREL QT_NO_DEBUG)
+            if (Qt5_POSITION_INDEPENDENT_CODE
+                    AND (CMAKE_VERSION VERSION_LESS 2.8.12
+                        AND (NOT CMAKE_CXX_COMPILER_ID STREQUAL "GNU"
+                        OR CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.0)))
+                set_property(TARGET ${_target} PROPERTY POSITION_INDEPENDENT_CODE ${Qt5_POSITION_INDEPENDENT_CODE})
+            endif()
+        endforeach()
+    endmacro()
+
 IF ( Qt5Widgets_FOUND )
-    qt5_use_modules( ${LIB_NAME} Widgets OpenGL )
+    qt5_use_modules_fix( ${LIB_NAME} Widgets OpenGL )
+    #qt5_use_modules( ${LIB_NAME} Widgets OpenGL )
 ENDIF ( Qt5Widgets_FOUND )
