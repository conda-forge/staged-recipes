@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")

set_source_files_properties(
	${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_c.c
	${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_d.c
	PROPERTIES
	LANGUAGE "C"
)
if(CMAKE_C_COMPILER_ID STREQUAL "GNU" OR CMAKE_C_COMPILER_ID STREQUAL "Clang")
	set_source_files_properties(
		${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_c.c
		${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_d.c
		PROPERTIES
		COMPILE_OPTIONS "-funroll-all-loops"
	)
endif()

set_and_check(@PROJECT_NAME@_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@/@PROJECT_NAME@")
set(@PROJECT_NAME@_SOURCES "${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_c.c;${PACKAGE_PREFIX_DIR}/src/@PROJECT_NAME@/lzf_d.c")
set(@PROJECT_NAME@_VERSION_STRING "@PROJECT_VERSION@")
set(@PROJECT_NAME@_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set(@PROJECT_NAME@_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set(@PROJECT_NAME@_API_VERSION_STRING "@API_VERSION@")
set(@PROJECT_NAME@_API_VERSION_MAJOR "@API_VERSION_MAJOR@")
set(@PROJECT_NAME@_API_VERSION_MINOR "@API_VERSION_MINOR@")
set(@PROJECT_NAME@_FOUND TRUE)
