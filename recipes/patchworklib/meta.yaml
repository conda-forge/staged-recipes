{% set name = "patchworklib" %}
{% set version = "0.5.2" %}
{% set bundle = "tar.gz" %}
{% set hash = "8d519d0135ab598aa58d41baf890ccf97f79a2533c4983e62e6b00bc2c400239" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # tests are not included in PyPI package
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ bundle }}
  url: https://github.com/ponnhide/patchworklib/archive/v{{ version }}.tar.gz
  sha256: {{ hash }}

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - python >=3.7
    - pip
    - setuptools
    - setuptools_scm

  run:
    - python >=3.7
    - matplotlib-base >=3.4
    - pandas >=0.24
    - numpy >=1.16
    - dill

test:
  requires:
    - pip
    - pytest
    - plotnine
    - seaborn
  imports:
    - patchworklib
  source_files:
    - tests
  commands:
    # The pip version can reported incorrectly if setuptools_scm isn't available
    # at build time
    - "pip list | grep -i {{ name }} | grep {{ version }}"  # [unix]
    # fails on windows with: 'mizani 0.8.1 requires tzdata, which is not installed'
    - pip check  # [unix]
    - pytest tests/

about:
  home: https://github.com/ponnhide/patchworklib
  license: GPL-3.0-only
  license_file: LICENSE
  summary: 'patchwork for matplotlib'
  description: |
    Patchworklib is a universal composer of matplotlib-related plots (simple matplotlib plots, Seaborn plots (both axis-level and figure-level), and plotnine plots). This library is inspired by patchwork for ggplot2. Accordingly, as original patchwork, users can easily align matplotlib plots with only "/" and "|" operators.

    Additionally, several third-party libraries based on matplotlib, such as plotnine and seaborn, provide functions to generate beautiful plots with simple python codes, but many of those plots cannot be handled as matplotlib subplots. Therefore, their placement must be adjusted manually. Now, scientists spend their valuable time arranging figures.

    Patchworklib provides a solution for the problem. By using patchworklib, any kind of seaborn and plotnine plots can be handled as matplotlib subplots.

extra:
  recipe-maintainers:
    - ponnhide
    - hoeze
