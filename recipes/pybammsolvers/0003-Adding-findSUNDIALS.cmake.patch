diff --git a/mypatch.patch b/mypatch.patch
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/recipes/pybammsolvers/findSUNDIALS.cmake b/recipes/pybammsolvers/findSUNDIALS.cmake
new file mode 100644
index 0000000000..a41f302b36
--- /dev/null
+++ b/recipes/pybammsolvers/findSUNDIALS.cmake
@@ -0,0 +1,71 @@
+# find the SUNDIALS include directories
+find_path(SUNDIALS_INCLUDE_DIR
+  NAMES
+    idas/idas.h
+    sundials/sundials_math.h
+    sundials/sundials_types.h
+    sunlinsol/sunlinsol_klu.h
+    sunlinsol/sunlinsol_dense.h
+    sunlinsol/sunlinsol_spbcgs.h
+    sunlinsol/sunlinsol_lapackdense.h
+    sunmatrix/sunmatrix_sparse.h
+  PATH_SUFFIXES
+    include
+  PATHS
+    ${PREFIX}
+  )
+
+set(SUNDIALS_WANT_COMPONENTS
+  sundials_idas
+  sundials_sunlinsolklu
+  sundials_sunlinsoldense
+  sundials_sunlinsolspbcgs
+  sundials_sunlinsollapackdense
+  sundials_sunmatrixsparse
+  sundials_nvecserial
+  sundials_nvecopenmp
+  )
+
+# find the SUNDIALS libraries
+foreach(LIB ${SUNDIALS_WANT_COMPONENTS})
+    if (UNIX AND SUNDIALS_PREFER_STATIC_LIBRARIES)
+        # According to bug 1643 on the CMake bug tracker, this is the
+        # preferred method for searching for a static library.
+        # See http://www.cmake.org/Bug/view.php?id=1643.  We search
+        # first for the full static library name, but fall back to a
+        # generic search on the name if the static search fails.
+        set(THIS_LIBRARY_SEARCH lib${LIB}.a ${LIB})
+    else()
+        set(THIS_LIBRARY_SEARCH ${LIB})
+    endif()
+
+    find_library(SUNDIALS_${LIB}_LIBRARY
+        NAMES ${THIS_LIBRARY_SEARCH}
+        PATH_SUFFIXES
+            lib
+            Lib
+	PATHS
+	    ${PREFIX}
+    )
+
+    set(SUNDIALS_${LIB}_FOUND FALSE)
+    if (SUNDIALS_${LIB}_LIBRARY)
+      list(APPEND SUNDIALS_LIBRARIES ${SUNDIALS_${LIB}_LIBRARY})
+      set(SUNDIALS_${LIB}_FOUND TRUE)
+    endif()
+    mark_as_advanced(SUNDIALS_${LIB}_LIBRARY)
+endforeach()
+
+mark_as_advanced(
+    SUNDIALS_LIBRARIES
+    SUNDIALS_INCLUDE_DIR
+)
+
+# behave like a CMake module is supposed to behave
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(
+  "SUNDIALS"
+  FOUND_VAR SUNDIALS_FOUND
+  REQUIRED_VARS SUNDIALS_INCLUDE_DIR SUNDIALS_LIBRARIES
+  HANDLE_COMPONENTS
+)
