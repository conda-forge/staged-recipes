{% set version = "17.0.9+9" %}
{% set version_base = version.split('+')[0] %} 
{% set version_major = version_base.split('.')[0] %}
{% set version_minor = version_base.split('.')[1] %}
{% set build_number = version.split('+')[1] %}
{% set base_url = 'https://github.com/adoptium/temurin' + version_major + '-binaries/releases/download/jdk-' + version_base + '%2B' + build_number + '/OpenJDK' + version_major + 'U-jre_' %}
{% set end_url = "_hotspot_" + version.replace('+', '_') %}

{% set name = "temurin-jre" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

build:
  number: 0
  skip: True # [win]

source:
  - url:    "{{ base_url }}aarch64_linux{{ end_url }}.tar.gz"                   # [linux and aarch64]
  - url:    "{{ base_url }}aarch64_mac{{ end_url }}.tar.gz"                     # [osx and aarch64]
  - url:    "{{ base_url }}ppc64le_linux{{ end_url }}.tar.gz"                   # [linux and ppc64le]
  - url:    "{{ base_url }}s390x_linux{{ end_url }}.tar.gz"                     # [linux and s390x]
  - url:    "{{ base_url }}x64_linux{{ end_url }}.tar.gz"                       # [linux and x86_64]
  - url:    "{{ base_url }}x64_mac{{ end_url }}.tar.gz"                         # [osx and x86_64]
  - url:    "{{ base_url }}x64_windows{{ end_url }}.zip"                        # [win and x86_64]

outputs:
  - name: {{ name|lower }}
    build:
      skip: True # [win]
      number: 0
      ignore_run_exports:
        - sysroot_linux-64
      missing_dso_whitelist:
        - "*/libfreetype.so.6"      # glibc/libc6
        - "*/libc.so.6"             # glibc/libc6
        - "*/libdl.so.2"            # glibc/libc6
        - "*/libm.so.6"             # glibc/libc6
        - "*/libpthread.so.0"       # glibc/libc6
        - "*/librt.so.1"            # glibc/libc6
        - "*/ld-linux-x86-64.so.2"  # glibc/libc6
        - "*/libutil.so.1"          # glibc/libc6
        - "*/libX11.so.6"           # xorg-libx11
        - "*/libXext.so.6"          # xorg-libxext
        - "*/libasound.so.2"        # alsa-lib
        - "*/libXi.so.6"            # xorg-libxi
        - "*/libXrender.so.1"       # xorg-libxrender
        - "*/libXtst.so.6"          # xorg-libxtst
      rpaths:
        - opt/temurin/lib/server
        - opt/temurin/lib
        - opt/temurin/bin
    requirements:
      build:
        - tar                                   # [linux or osx]
        - unzip                                 # [win]
        - gzip                                  # [linux or osx]
      run:
        - {{ stdlib('c') }}
        - freetype
  - name: {{ name|lower }}-headless
    requirements:
      run:
        - {{ pin_subpackage(name|lower, exact=True) }}
    files:
      exclude:
        - opt/temurin/lib/libawt_xawt.so
        - opt/temurin/lib/libsplashscreen.so
        - opt/temurin/lib/libjsound.so
        - opt/temurin/lib/libjawt.so
    test:
      commands:
        - java -version
  - name: {{ name|lower }}-graphics
    requirements:
      run:
        - {{ pin_subpackage(name|lower, exact=True) }}
        - xorg-libx11                           # [linux]   
        - xorg-libxext                          # [linux]   
        - xorg-libxt                            # [linux]  
        - xorg-libxtst                          # [linux]   
        - xorg-libxrender                       # [linux]   
        - xorg-libxi                            # [linux]               
        - alsa-lib                              # [linux]
    test:
      commands:
        - java -version

about:
  home: https://adoptium.net/temurin/
  license: GPL-2.0 WITH Classpath-exception-2.0
  license_family: GPL
  license_file: NOTICE
  summary: Eclipse Temurin OpenJDK-based Java Runtime Environment
  description: |
    The Eclipse Temurin project provides code and processes that support the
    building of runtime binaries and associated technologies that are high 
    performance, enterprise-caliber, cross-platform, open-source licensed, 
    and Java SE TCK-tested for general use across the Java ecosystem.

extra:
  recipe-maintainers:
    - jfouret
