diff --git a/CMakeLists.txt b/CMakeLists.txt
index aaca07d2..c6085713 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -107,12 +107,15 @@ else()
 endif()


+find_package(FastFloat REQUIRED)
+
 #########################################################
 # Shared library
 add_library(${PROJECT_NAME} SHARED ${SRCS_COMMON} ${HDRS_COMMON}
   ${ACT_GENERATED_SOURCE}
   ${VERSION_FILES_OUTPUTLOCATION}
 )
+target_link_libraries(${PROJECT_NAME} FastFloat::fast_float)
 SOURCE_GROUP("Source Files\\Autogenerated" FILES ${ACT_GENERATED_SOURCE})


diff --git a/Include/Common/NMR_StringUtils.h b/Include/Common/NMR_StringUtils.h
index 4cafe3a7..b32bc76a 100644
--- a/Include/Common/NMR_StringUtils.h
+++ b/Include/Common/NMR_StringUtils.h
@@ -37,7 +37,7 @@ and Exception-safe
 #include "Common/NMR_Types.h"
 #include "Common/NMR_Local.h"

-#include <fast_float.h>
+#include <fast_float/fast_float.h>

 #include <string>
 #include <string.h>
diff --git a/Tests/CPP_Bindings/CMakeLists.txt b/Tests/CPP_Bindings/CMakeLists.txt
index 89aa33ae..785e0585 100644
--- a/Tests/CPP_Bindings/CMakeLists.txt
+++ b/Tests/CPP_Bindings/CMakeLists.txt
@@ -3,7 +3,8 @@

 SET(TESTNAME "Test_CPP_Bindings")

-file(GLOB GTEST_SRC_FILES "${CMAKE_SOURCE_DIR}/Libraries/googletest/Source/*cc")
+find_package(GTest REQUIRED)
+find_package(OpenSSL REQUIRED)

 set(SRCS_UNITTEST
        ./Source/AllTests.cpp
@@ -40,26 +41,16 @@ set(SRCS_UNITTEST
 )

 set(CMAKE_CURRENT_BINARY_DIR ${CMAKE_BINARY_DIR})
-add_executable(${TESTNAME} ${SRCS_UNITTEST} ${GTEST_SRC_FILES})
+add_executable(${TESTNAME} ${SRCS_UNITTEST})
+target_link_libraries(${TESTNAME} GTest::gtest_main OpenSSL::SSL OpenSSL::Crypto ${PROJECT_NAME})

 set(STARTUPPROJECT ${TESTNAME})

 target_include_directories(${TESTNAME} PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/Include
-       ${CMAKE_SOURCE_DIR}/Libraries/googletest/Include
-       ${CMAKE_CURRENT_SOURCE_DIR}/../../Libraries/libressl/include
        ${CMAKE_CURRENT_SOURCE_DIR_AUTOGENERATED}/Bindings/Cpp
        )

-# pthreads Needed for googletest
-if (LINUX)
-set(THREADS_PREFER_PTHREAD_FLAG ON)
-find_package(Threads REQUIRED)
-target_link_libraries(${TESTNAME} PRIVATE Threads::Threads)
-endif()
-
-target_link_libraries(${TESTNAME} PRIVATE ${PROJECT_NAME} ssl crypto)
-
 if (WIN32)
 target_link_libraries(${TESTNAME} PRIVATE ws2_32)
 endif()