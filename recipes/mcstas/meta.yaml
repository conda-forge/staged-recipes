{% set version = "3.4.5" %}
{% set sha_value = "386a777404da89988231e36540fe7e63ee9b40aadc206d186c334af6733b7297" %}
#NB get sha256 with: curl -sL <URL> | openssl sha256

package:
  name: mcstas-suite
  version: {{ version }}

source:
  url: https://github.com/McStasMcXtrace/McCode/archive/mcstas-{{ version }}.tar.gz
  sha256: {{ sha_value }}
  folder: src

build:
  number: 0

outputs:

  - name: mcstas-core
    script: install-files-core.sh  # [not win]
    script: install-files-core.bat  # [win]
    build:
      skip: True  # [win]
      ignore_run_exports:
        - python_abi
    requirements:
      build:
        #  Note: nmake on windows does not need to be specifically included.
        - python
        - cmake
        - make  # [not win]
        - {{ compiler('c') }}
      host:
        - flex  # [not win]
        - bison  # [not win]
        - winflexbison  # [win]
        - dirent  # [win]
      run:
        - python
        - {{ compiler('c') }}
        - bash # for mcrun, and maybe others
        - pyaml # for mcrun
        - ply # for traces from mcrun
    test:
      files:
        - test_pkg.py
      commands:
#        - ${PYTHON} test_pkg.py core
        - python test_pkg.py core
      source_files:
        - src/mcstas-comps/examples/BNL_H8.instr
        - src/mcstas-comps/examples/Union_manual_example.instr

  - name: mcstas-data
    build:
      noarch: generic
#TESTING#      ignore_run_exports_from:
#TESTING#        - python_abi
#TESTING#      ignore_run_exports:
#TESTING#        - python_abi
    script: install-files-data.sh  # [not win]
    script: install-files-data.bat  # [win]
    requirements:
      build:
        - python
    test:
      files:
        - test_pkg.py
      requires:
        - python
      commands:
        - python test_pkg.py data

  - name: mcstas-mcgui
    build:
      skip: True  # [win]
    requirements:
      run:
        - mcstas-core
        - pyqt
        - qscintilla2
    test:
      files:
        - test_pkg.py
      commands:
        - python ${SRC_DIR}/test_pkg.py mcgui
  - name: mcstas-vis
    build:
      skip: True  # [win]
    requirements:
      run:
        - mcstas-core
        #  Note: conda-forge linter wants matplotlib-base and not matplotlib. It
        #  actually makes no difference (as per Sep. 2023) since we anyway install
        #  tornado+pyqt.
        - matplotlib-base
        - numpy
        - tornado >=5
        - scipy
        - pillow
        - pyqtgraph
        - pyqt >=5.10
    test:
      files:
        - test_pkg.py
      commands:
        - python ${SRC_DIR}/test_pkg.py vis

  - name: mcstas
    build:  # [win]
      skip: True  # [win]
    test:
      files:
        - test_pkg.py
      requires:
        #MPI test will fail on linux without openssh:
        - openssh  # [linux]
      commands:
    #${PYTHON} seems to not work ?!?    - ${PYTHON} test_pkg.py mcstas
        - python test_pkg.py mcstas
    requirements:
      run:
        - {{ pin_subpackage('mcstas-core', max_pin="x.x.x") }}
        - {{ pin_subpackage('mcstas-data', max_pin="x.x.x") }}
        - {{ pin_subpackage('mcstas-mcgui', max_pin="x.x.x") }}
        - {{ pin_subpackage('mcstas-vis', max_pin="x.x.x") }}
        - msmpi  # [win]
        - openmpi  # [unix]
        - ncrystal  # [unix]
        - mcpl  # [unix]
        # As per https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-builds
        # we are noarch, but our dependency list is not. So we do need a different
        # "mcstas" package for windows and unix platforms:
        - __unix  # [unix]
        - __win  # [win]

about:
  home: https://mcstas.org/
  summary: McStas is a general tool for simulating neutron scattering instruments and experiments.
  description: |
    McStas is a general tool for simulating neutron scattering instruments and
    experiments.
  license: GPL-3.0-only
  license_family: GPL3
  license_file: src/COPYING
  doc_url: https://mcstas.org/
  dev_url: https://github.com/McStasMcXtrace/McCode

extra:
  recipe-maintainers:
    - willend
    - tkittel
