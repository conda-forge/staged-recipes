# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "orekit" %}
{% set version = "9.0" %}
{% set sha256 = "d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # fn: {{ name }}-{{ version }}.tar.gz
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  git_url: https://www.orekit.org/git/orekit-labs/python-wrapper-main.git#orekit-v9
  sha256: {{ sha256 }}

build:
  number: 0

  # script: python setup.py install --single-version-externally-managed --record record.txt

  rpaths:  # Only valid for linux
    - lib/
    - jre/lib/amd64/
    - jre/lib/amd64/server/

requirements:
  build:
    - python
    - setuptools
    # if your project compiles code (such as a C extension) then add `toolchain` as a build requirement.
    - toolchain
    - jcc >= 3
    - openjdk

  run:
    - python
    - openjdk

test:
  # Python imports
  imports:
    - orekit

  files:
    - orekit-conda-recipe/test/orekit-data.zip
    - orekit-conda-recipe/test/AltitudeDetectorTest.py
    - orekit-conda-recipe/test/NodeDetectorTest.py
    - orekit-conda-recipe/test/ImpulseManeuverTest.py
    - orekit-conda-recipe/test/BackAndForthDetectorTest.py
    - orekit-conda-recipe/test/KeplerianConverterTest.py
    - orekit-conda-recipe/test/EventHandlerTest.py
    - orekit-conda-recipe/test/AbstractDetectorTest.py
    - orekit-conda-recipe/test/EventDetectorTest.py
    - orekit-conda-recipe/test/SmallManeuverAnalyticalModelTest.py
    - orekit-conda-recipe/test/GroundFieldOfViewDetectorTest.py

about:
  home: https://www.orekit.org/forge/projects/orekit-python-wrapper
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: Apache-2.0
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: Apache
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE.txt
  summary: 'An accurate and efficient core layer for space flight dynamics applications'

  description: |
    Orekit aims at providing accurate and efficient low level components for
    the development of flight dynamics applications. It is designed to be
    easily used in very different contexts, from quick studies up to critical operations.
    As a library, Orekit provides basic elements (orbits, dates, attitude, frames, ...) and various algorithms to handle them (conversions, propagations, pointing, ...).
  doc_url: https://www.orekit.org/static/apidocs/

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - petrushy
    
