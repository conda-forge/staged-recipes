context:
  name: RooUnfold
  version: "3.0.5"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://gitlab.cern.ch/RooUnfold/RooUnfold/-/archive/${{ version }}/${{ name }}-${{ version }}.tar.gz
  sha256: e57d846efcaff831dfeaad528fa9ebc60fe3e09165decbbc261592c23851d40a
  patches:
    - patches/cmake-minimum-3.5.patch

build:
  number: 0
  script:
    - cmake ${CMAKE_ARGS}  -S . -B build
    - cmake --build build --clean-first --parallel="${CPU_COUNT}"
    - cmake --install build
    # NOTE: we must manually set SP_DIR since it is not set.
    # Can be removed once https://github.com/prefix-dev/rattler-build/issues/1733 is fixed.
    - if: unix
      then:
        - export SP_DIR=$(python -c "import site; print(site.getsitepackages()[0])")
    - if: win
      then:
        - set "SP_DIR=%PREFIX%\\Lib\\site-packages"
    # equivalent of the following:
    #- rsync -rav --exclude='__pycache__/' --exclude='*.pyc' $SRC_DIR/python/ $SP_DIR/RooUnfold/
    - python -c "import shutil, os, sysconfig; shutil.copytree(os.path.join(os.environ['SRC_DIR'], 'python'), os.path.join(os.environ['SP_DIR'], 'RooUnfold'), dirs_exist_ok=True)"

requirements:
  build:
    - cxx-compiler 13.*
    - c-compiler 13.*
    - sysroot_linux-64 2.17.*
    - cmake
    - make
    - if: build_platform != target_platform
      then:
        - cross-python_${{ target_platform }}
        - python
        - root_base
  host:
    - root_base
    - python
  run:
    - root_base
    - python

tests:
  - requirements:
      run:
        - root_base
        - python
    script:
      - printenv
      - python -c "import RooUnfold"

about:
  homepage: https://gitlab.cern.ch/RooUnfold/RooUnfold
  summary: 'RooUnfold is a framework for unfolding (AKA "deconvolution" or "unsmearing").'
  description: |
    RooUnfold is a framework for unfolding (AKA "deconvolution" or
    "unsmearing").  It can be used from the ROOT prompt, or compiled and
    linked against the ROOT libraries.  It currently implements seven
    methods:
      - iterative ("Bayesian");
      - singular value decomposition (SVD, as proposed by HÃ¶cker and Kartvelishvili and implemented in TSVDUnfold);
      - bin-by-bin (simple correction factors);
      - an interface to the TUnfold method developed by Stefan Schmitt
      - simple inversion of the response matrix without regularisation
      - iterative dynamically stabilized (IDS) unfolding
      - usage of gaussian processes (GP) for regularizing a kernel, as developed by Adam Bosson
      - Poisson unfolding, a simple likelihood unfolding
  license: MIT # TODO
  license_file: README.md # TODO:
  documentation: https://gitlab.cern.ch/RooUnfold/documentation/-/blob/master/RooUnfold_user_guide.pdf
  repository: https://gitlab.cern.ch/RooUnfold/RooUnfold

extra:
  recipe-maintainers:
    - kratsg
    - cburgard
