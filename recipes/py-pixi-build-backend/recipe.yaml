# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
context:
  name: py-pixi-build-backend
  python_name: pixi_build_backend
  version: "0.2.0"

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://github.com/prefix-dev/pixi-build-backends/archive/refs/tags/py-pixi-build-backend-v${{ version }}.tar.gz
  sha256: 750907d8a161206b088da09e78c0a38b5320c27ed82f1aec5b8dc50fa26dce48

build:
  number: 0

outputs:
  - package:
      name: ${{ name }}
      version: ${{ version }}
    build:
      # only build for the minimal python version
      skip: is_abi3 and not is_python_min
      script: |
          cd py-pixi-build-backend
          $PYTHON -m pip install . -vv
          cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
      python:
        version_independent: true
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - maturin >=1.2.2,<2
        - ${{ stdlib('c') }}
        - ${{ compiler('rust') }}
        - cargo-bundle-licenses
      host:
        - python
        - if: is_abi3
          then: python-abi3
        - maturin >=1.2.2,<2
        - pip
      run:
        - python
        - pixi-build-api-version >=2,<3

    tests:
      - python:
          imports:
            - pixi_build_backend
          python_version:
            - if: is_abi3
              then: "${{ python_min ~ '.*' }}"
            - "*"
      - script:
          - if: not is_abi3
            then: echo "skipping abi3audit tests"
          - if: win and is_abi3
            then: abi3audit %PREFIX%/Lib/site-packages/py_pixi_build_backend/pixi_build_backend.pyd -s -v --assume-minimum-abi3 ${{ python_min }}
          - if: not win and is_abi3
            then:
              # Need to set SP_DIR because of https://github.com/prefix-dev/rattler-build/issues/1733
              - export SP_DIR=$(python -c "import site; print(site.getsitepackages()[0])")
              - abi3audit $SP_DIR/py_pixi_build_backend/py_pixi_build_backend.abi3.so -s -v --assume-minimum-abi3 ${{ python_min }}
        requirements:
          run:
            - if: is_abi3
              then: abi3audit

  # Make sure we also capture the name of with underscores
  - package:
      name: py_pixi_build_backend
    build:
      noarch: generic
      skip: not (linux and x86_64 and is_python_min)
    requirements:
      run:
        - ${{ pin_subpackage('py-pixi-build-backend', upper_bound="x.x.x") }}
    tests:
      - python:
          imports:
            - pixi_build_backend
    about:
      license_file: []

about:
  homepage: https://github.com/prefix-dev/pixi-build-backends
  summary: Python bindings for pixi-build-backends
  description: |
    This package provides Python bindings for pixi-build-backends, enabling
    Python applications to use the pixi build system programmatically.
  license: BSD-3-Clause
  license_file: LICENSE
  documentation: https://prefix-dev.github.io/pixi-build-backends
  repository: https://github.com/prefix-dev/pixi-build-backends

extra:
  feedstock-name: py-pixi-build-backend
  recipe-maintainers:
    - wolfv
    - baszalmstra
    - tdejager
    - ruben-arts
    - Hofer-Julian
    - nichmor
