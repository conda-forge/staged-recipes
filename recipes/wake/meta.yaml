{% set name = "wake" %}
{% set version = "0.27.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://github.com/sifive/wake/archive/refs/tags/v{{ version }}.tar.gz
  #sha256: 8133f1743ff91adecd8b0fe12ad42858d8f9b9080d480ef66dbc4edf17146049
  git_url: https://github.com/sifive/wake.git
  git_rev: v{{ version }}
  # may need to just punt to using their static build until I get into a feedstock and
  # can add the extra docker requirements for using FUSE in CI
  #url: https://github.com/sifive/wake/releases/download/v{{ version }}/wake-static_{{ version }}.tar.xz
  #sha256: c05c5a16b85fd96eea946b6fb289b37f337878d1f1ebd96d732329035b397a05
  patches:
    - patches/0001-Add-explicit-lrt.patch
    - patches/0002-change-std-c11-to-std-gnu11-for-aligned_alloc.patch
    - patches/0003-rm-buildJobCache-for-sifive-wake-925.patch

build:
  number: 0
  skip: True # [not linux64]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
    - m4
    - dash-shell
    - pkg-config
    # wake's builtin stdlib hardcodes 'cc' and 'c++' as the compiler names
    # so install the compilers metapackage and avoid cross compiles for now
    # https://github.com/sifive/wake/issues/921
    - gcc
    - gxx
    - git # wake uses git to introspect itself during build but can't from tarball so use git for now
          # I suspect that the introspection from inside the wake build is what really bakes
          # in the VERSION string. see 
    - patchelf # TODO figure out why rpaths aren't being set correctly for all executables
               # it is because 
  host:
    - gmp
    - libfuse <3.0 # see FUSE_USE_VERSION in tools/fuse-waked/fuse-waked.cpp
    - libutf8proc
    - ncurses
    - re2
    - re2c
    - sqlite
  run:
    - dash-shell

test:
  commands:
    - wake --version

about:
  home: https://github.com/sifive/wake
  summary: 'wake build tool'
  description: |
      Wake is a build orchestration tool and language. If you have a build whose steps cannot be
      adequately expressed in make/tup/bazel/etc, you probably need wake. If you don't want to waste
      time rebuilding things that don't need it, or that your colleagues already built, you might
      appreciate wake.
  license: Apache-2.0 AND CC0-1.0 AND WTFPL AND MIT AND Unicode-DFS-2016
  license_file: 
    - LICENSE
    - LICENSE.Apache2
    - vendor/blake2/LICENSE.CC0
    - vendor/gopt/LICENSE.TFL
    - vendor/siphash/LICENSE.CC0
    - vendor/utf8proc/LICENSE.MIT
    - vendor/utf8proc/LICENSE.UNICODE
    - vendor/whereami/LICENSE.WTFPLv2
  doc_url: https://github.com/sifive/wake/tree/master/share/doc/wake
  dev_url: https://github.com/sifive/wake

extra:
  recipe-maintainers:
    - timsnyder
