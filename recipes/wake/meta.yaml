{% set name = "wake" %}
{% set version = "0.28.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://github.com/sifive/wake/archive/refs/tags/v{{ version }}.tar.gz
  #sha256: 8133f1743ff91adecd8b0fe12ad42858d8f9b9080d480ef66dbc4edf17146049
  #git_url: https://github.com/sifive/wake.git
  #git_rev: v{{ version }}
  # just punt to using their static build until I get into a feedstock and
  # can add the extra docker requirements for using FUSE in CI
  url: https://github.com/sifive/wake/releases/download/v{{ version }}/wake-static_{{ version }}.tar.xz
  sha256: c05c5a16b85fd96eea946b6fb289b37f337878d1f1ebd96d732329035b397a05
  folder: static

build:
  number: 0
  skip: True  # [not linux64]
  script: 'cp -r --preserve=mode,timestamps -t $PREFIX static/*'
  binary_relocation: False  # repackaging static build, True causes segfault

requirements:
  build:
  host:
  run:
    - dash-shell

test:
  commands:
    - wake --version

about:
  home: https://github.com/sifive/wake
  summary: 'wake build tool'
  description: |
      Wake is a build orchestration tool and language. If you have a build whose steps cannot be
      adequately expressed in make/tup/bazel/etc, you probably need wake. If you don't want to waste
      time rebuilding things that don't need it, or that your colleagues already built, you might
      appreciate wake.
  license: Apache-2.0 AND CC0-1.0 AND WTFPL AND MIT AND Unicode-DFS-2016
  license_file: 
    - LICENSE
    - LICENSE.Apache2
    - LICENSE.CC0
    - LICENSE.TFL
    - LICENSE.MIT
    - LICENSE.UNICODE
    - LICENSE.WTFPLv2
  doc_url: https://github.com/sifive/wake/tree/master/share/doc/wake
  dev_url: https://github.com/sifive/wake

extra:
  recipe-maintainers:
    - timsnyder
