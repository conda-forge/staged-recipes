# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "networkx" %}
{% set version = "2.0dev_20170206141816" %}
{% set sha256 = "40f2d5dccdaafcff9fb67a2fc8c2c22174be467d085cebed0c4a1a569582541b" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/networkx/networkx/archive/7bf30041d0a90a44557c5ae269a2f392bdf9560d.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for Python 2.7, 3.4, and above, for all major OSs.
  # Add the line "skip: True  # [py<34]" (for example) to limit to Python 3.4 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    # When setuptools is available add the `--single-version-externally-managed --record record.txt` above.
    - setuptools
    # if your project compiles code (such as a C extension) then add `toolchain` as a build requirement.
    - toolchain
  run:
    - python

test:
  # Some package might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.

about:
  home: https://networkx.github.io/
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: BSD-3-Clause
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: BSD
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE.txt
  summary: 'High-productivity software for complex networks'

  # The remaining entries in this section are optional, but recommended
  description: |
    NetworkX is a Python language software package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.
  doc_url: https://networkx.readthedocs.io/
  dev_url: https://github.com/networkx/networkx

extra:
  recipe-maintainers:
    - cndreisbach
