# Jinja variables help maintain the recipe as you'll update the version only here.
{% set version = "0.1.1" %}
{% set sha256 = "70d7ca2e9200e2eb5d2d74131249110d8582c4227c92e553891e73c53c630fc5" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#   $ openssl sha256 <file>
# On Windows, you'll need the openssl pacakge, available on conda-forge

package:
  name: cvxcanon
  version: {{ version }}


source:
  fn: cvxcanon-{{ version }}.tar.gz
  url: https://pypi.python.org/packages/9e/e6/63eb6e7dca5dcb723429e65b456d0e3638976e63f6696b7eb48fee3a491d/CVXcanon-{{ version }}.tar.gz
  sha256: {{ sha256 }}

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
# number: 1
build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    - setuptools
    - numpy
    - scipy

  run:
    - python
    - numpy
    - scipy

test:
  # Python imports
  imports:
    - canonInterface

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/jacklzhu/CVXcanon
  license: GPLv3
  summary: 'A low-level library to perform the matrix building step in cvxpy, a convex optimization modeling software.'
  dev_url: https://github.com/cvxgrp/cvxcanon

extra:
  recipe-maintainers:
    - Enzo Busseti