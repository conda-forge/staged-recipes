{% set name = "go" %}
{% set version = "1.12.17" %}

package:
  name: {{ name }}-{{ go_variant_str }}
  version: {{ version }}

source:
  - folder: go
    url: https://dl.google.com/{{ name }}/go{{ version }}.linux-amd64.tar.gz   # [linux]
    sha256: a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2   # [linux]
    url: https://dl.google.com/{{ name }}/go{{ version }}.darwin-amd64.tar.gz  # [osx]
    sha256: a2f58b4bf10f3e882c1a43eba27a2aba65fc815384fbdfc46331c13bca5f5f24   # [osx]
    url: https://dl.google.com/{{ name }}/go{{ version }}.windows-amd64.zip    # [win64]
    sha256: 78ba5f19feaea1cf9327c8d3af69278a8476995d145ba57edd01ab5c1c6ecea7   # [win64]


build:
  number: 0
  binary_relocation: False
  detect_binary_files_with_prefix: False
  # This is the precompiled version of go, it depends on OS libraries
  missing_dso_whitelist:
    - /usr/lib/libSystem.B.dylib
    - /usr/lib/libgcc_s.1.dylib
    - /lib64/libc.so.6
    - /lib64/libpthread.so.0
    - $RPATH/libc.so.6
  # TODO: Enable linux and windows
  skip: True  # [linux or osx]

requirements:
  run:
    - {{ pin_subpackage(name, exact=true) }}

test:
  commands:
    - go help

outputs:
  - name: {{ name }}
    script: build-core.sh   # [unix]
    script: build-core.bat  # [win]
    requirements:
      run:
        - _go_select =={{ go_variant_ver }}={{ go_variant_str }}
    test:
      requires:
        - compilers   # [linux]
        - pkg-config  # [linux]
        - m2w64-gcc          # [win]
        - m2w64-gcc-fortran  # [win]
      script: test-core.sh      # [linux]
      script: test-core-osx.sh  # [osx]
      script: test-core.bat     # [win]

    about:
      home: http://golang.org
      license: BSD-3-Clause
      license_family: BSD
      license_file: go/LICENSE
      summary: 'The Go Programming Language'

about:
  home: http://golang.org
  license: BSD-Style
  license_family: BSD
  license_file: go/LICENSE
  summary: 'The Go Programming Language (precompiled)'
  description: |
    Go is expressive, concise, clean, and efficient. Its concurrency mechanisms
    make it easy to write programs that get the most out of multicore and
    networked machines, while its novel type system enables flexible and
    modular program construction. Go compiles quickly to machine code yet has
    the convenience of garbage collection and the power of run-time reflection.
    It's a fast, statically typed, compiled language that feels like a
    dynamically typed, interpreted language.
  doc_url: https://golang.org/doc
  dev_url: https://go.googlesource.com/go

extra:
  recipe-maintainers:
    - conda-forge/go
