{% set name = "pose2sim-ecosystem" %}
{% set version = "0.0.1" %}
{% set python_min = "3.10" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

build:
  number: 0

outputs:
  - name: c3d
    version: 0.6.0
    
    source:
      url: https://github.com/EmbodiedCognition/py-c3d/archive/refs/tags/v{{ version }}.tar.gz
      sha256: 57976887083a6727380b63d1d6cff7dc2b2f02185ac9cf2a824adda5064f2f90
    
    build:
      entry_points:
        # - c3d-metatdata = c3d.scripts.c3d_metatdata:main # typo
        # - c3d-viewer = c3d.scripts.c3d_viewer:main # pyglet not installed by default
        - c3d2csv = c3d.scripts.c3d2csv:main
        - c3d2npz = c3d.scripts.c3d2npz:main
      script: {{ PYTHON }} -m pip install . -vv
      number: 0
    
    requirements:
      host:
        - python {{ python_min }}
        - poetry-core >=1.0.0
        - pip
      run:
        - python
        - numpy >=1.0.0
      run_constrained:
        - pyglet >=1.5.21
    
    test:
      imports:
        - c3d
      commands:
        - pip check
        # - c3d-metatdata --help # typo
        # - c3d-viewer --help # pyglet not installed by default
        - c3d2csv --help
        - c3d2npz --help
      requires:
        - pip
        - python
    
    about:
      home: https://github.com/EmbodiedCognition/py-c3d
      summary: A library for manipulating C3D binary files
      license: MIT
      license_file: c3d-LICENSE
    

  - name: rtmlib
    version: 0.0.13
    
    source:
      url: https://github.com/Tau-J/rtmlib/archive/refs/tags/{{ version }}.tar.gz
      sha256: 48f270f66ca1ebf536fba21516a0729cba6a1bd07cbc894c7dfdac3bde62ac4a
    
    build:
      skip: true  # [py<310]
      script: {{ PYTHON }} -m pip install . -vv
      number: 0
    
    requirements:
      host:
        - python {{ python_min }}
        - setuptools >=42
        - wheel
        - pip
      run:
        - python
        - numpy
        - onnxruntime
        # - opencv-contrib-python   # not on conda-forge, but ok since included in py-opencv
        - py-opencv
        - tqdm
    
    test:
      imports:
        - rtmlib
      commands:
        - pip check
      requires:
        - pip
        - python
    
    about:
      home: https://github.com/Tau-J/rtmlib
      summary: RTMPose series (RTMPose, DWPose, RTMO, RTMW) without mmcv, mmpose, mmdet etc.
      license: Apache-2.0
      license_file: rtmlib-LICENSE


  - name: pose2sim
    version: 0.10.38

    source:
      url: https://github.com/perfanalytics/pose2sim/archive/refs/tags/v{{ version }}.tar.gz
      sha256: de584188c408c898d45e46f0c14abcbf04c00b179a7ea85cf107fc2f873bb272
    
    build:
      skip: true  # [py<310]
      entry_points:
        - AlphaPose_to_OpenPose = Pose2Sim.Utilities.AlphaPose_to_OpenPose:main
        - Blazepose_runsave = Pose2Sim.Utilities.Blazepose_runsave:main
        - bodykin_from_mot_osim = Pose2Sim.Utilities.bodykin_from_mot_osim:main
        - c3d_to_trc = Pose2Sim.Utilities.c3d_to_trc:main
        - calib_easymocap_to_toml = Pose2Sim.Utilities.calib_easymocap_to_toml:main
        - calib_from_checkerboard = Pose2Sim.Utilities.calib_from_checkerboard:main
        - calib_qca_to_toml = Pose2Sim.Utilities.calib_qca_to_toml:main
        - calib_toml_to_easymocap = Pose2Sim.Utilities.calib_toml_to_easymocap:main
        - calib_toml_to_opencap = Pose2Sim.Utilities.calib_toml_to_opencap:main
        - calib_toml_to_qca = Pose2Sim.Utilities.calib_toml_to_qca:main
        - DLC_to_OpenPose = Pose2Sim.Utilities.DLC_to_OpenPose:main
        - face_blurring = Pose2Sim.Utilities.face_blurring:main
        - json_display_with_img = Pose2Sim.Utilities.json_display_with_img:main
        - json_display_without_img = Pose2Sim.Utilities.json_display_without_img:main
        - MMPose_to_OpenPose = Pose2Sim.Utilities.MMPose_to_OpenPose:main
        - reproj_from_trc_calib = Pose2Sim.Utilities.reproj_from_trc_calib:main
        - trc_combine = Pose2Sim.Utilities.trc_combine:main
        - trc_desample = Pose2Sim.Utilities.trc_desample:main
        - trc_filter = Pose2Sim.Utilities.trc_filter:main
        - trc_from_easymocap = Pose2Sim.Utilities.trc_from_easymocap:main
        - trc_from_mot_osim = Pose2Sim.Utilities.trc_from_mot_osim:main
        - trc_gaitevents = Pose2Sim.Utilities.trc_gaitevents:main
        - trc_plot = Pose2Sim.Utilities.trc_plot:main
        - trc_to_c3d = Pose2Sim.Utilities.trc_to_c3d:main
        - trc_Zup_to_Yup = Pose2Sim.Utilities.trc_Zup_to_Yup:main
      script: |
        SETUPTOOLS_SCM_PRETEND_VERSION={{ version }} \
        {{ PYTHON }} -m pip install . --no-deps -vv
      number: 0
    
    requirements:
      host:
        - python {{ python_min }}
        - setuptools >=42
        - wheel
        - pip
        - numpy
      run:
        - python
        # - opensim-org::opensim    # WILL ADD IT ONCE ON CONDA-FORGE
        - {{ pin_compatible('numpy') }}
        - toml
        - lxml
        - matplotlib-base        # instead of matplotlib
        - mpl-interactions
        - pyqt                   # instead of PyQt5
        - tqdm
        - anytree
        - pandas >=1.5
        - scipy
        - statsmodels
        - filterpy
        - ipython
        - c3d
        - rtmlib
        - openvino
        - onnxruntime
        # - deep-sort-realtime   # likely not needed, and not on conda-forge
        - py-opencv >=4.12
    
    test:
      imports:
        - Pose2Sim
      commands:
        - pip check
        - AlphaPose_to_OpenPose --help
        # - Blazepose_runsave --help # do not test as it requires mediapipe, not installed by default
        - bodykin_from_mot_osim --help
        - c3d_to_trc --help
        - calib_easymocap_to_toml --help
        - calib_from_checkerboard --help
        - calib_qca_to_toml --help
        - calib_toml_to_easymocap --help
        - calib_toml_to_opencap --help
        - calib_toml_to_qca --help
        - DLC_to_OpenPose --help
        - face_blurring --help
        # - json_display_with_img --help # requires cmapy
        - json_display_without_img --help
        - MMPose_to_OpenPose --help
        - reproj_from_trc_calib --help
        - trc_combine --help
        - trc_desample --help
        - trc_filter --help
        - trc_from_easymocap --help
        - trc_from_mot_osim --help
        - trc_gaitevents --help
        - trc_plot --help
        - trc_to_c3d --help
        - trc_Zup_to_Yup --help
      requires:
        - python
        - pip
    
    about:
      home: https://github.com/perfanalytics/pose2sim
      summary: Markerless kinematics with any cameras â€” From 2D Pose estimation to 3D OpenSim motion
      license: BSD-3-Clause
      license_file: pose2sim-LICENSE


  - name: sports2d
    version: 0.8.23
    
    source:
      url: https://github.com/davidpagnon/Sports2D/archive/refs/tags/v{{ version }}.tar.gz
      sha256: 59705823a1e772aeae1593a89bbea75a57b11a9bd3af851f2aac8978fd5964e5
    
    build:
      skip: true  # [py<310]
      script: |
        SETUPTOOLS_SCM_PRETEND_VERSION={{ version }} \
        {{ PYTHON }} -m pip install . --no-deps -vv
      number: 0
    
    requirements:
      host:
        - python {{ python_min }}
        - setuptools >=42
        - wheel
        - pip
        - numpy
      run:
        - python
        # - opensim-org::opensim    # WILL ADD IT ONCE ON CONDA-FORGE
        - {{ pin_compatible('numpy') }}
        - filterpy
        - imageio-ffmpeg
        - pose2sim
    
    test:
      imports:
        - Sports2D
      commands:
        - pip check
      requires:
        - python
        - pip
    
    about:
      home: https://github.com/davidpagnon/Sports2D
      summary: Compute 2D human pose and angles from a video or a webcam.
      license: BSD-3-Clause
      license_file: LICENSE
    

extra:
  recipe-maintainers:
    - davidpagnon
    