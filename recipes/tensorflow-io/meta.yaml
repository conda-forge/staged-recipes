{% set name = "tensorflow-io" %}
{% set version = "v0.11.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/tensorflow/io/archive/{{ version }}.tar.gz
  sha256: b528d3f8e383dfccbbbb5dc5d4898fb8efe51c4ffd527795d5867b4a9727cfcb

build:
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "bazel version && {{ PYTHON }} -c 'import tensorflow as tf; print(tf.version.VERSION)'"

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - tensorflow ==2.1.0
    - bazel ==2.0.0
  run:
    - python
    - tensorflow ==2.1.0

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - simplejson
    - simplejson.tests

about:
  home: https://github.com/tensorflow/io
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  summary: 'TensorFlow I/O'

  description: |
    TensorFlow I/O is a collection of file systems and file formats that are
    not available in TensorFlow's built-in support.
    It provides useful extra Dataset, streaming, and file system extensions,
    and is maintained by TensorFlow SIG-IO.
  doc_url: https://www.tensorflow.org/io
  dev_url: https://github.com/tensorflow/io

extra:
  recipe-maintainers:
    - yongtang
    - 
