diff --git a/src/Coordinate.h b/src/Coordinate.h
index af17e1e9..3309a57c 100644
--- a/src/Coordinate.h
+++ b/src/Coordinate.h
@@ -95,21 +95,21 @@ public:
    * @brief Gets the x value
    * @warning Exact, NaN for empty coordinates
    */
-  Kernel::FT
+  SFCGAL_API Kernel::FT
   x() const;
 
   /**
    * @brief Gets the y value
    * @warning Exact, NaN for empty coordinates
    */
-  Kernel::FT
+  SFCGAL_API Kernel::FT
   y() const;
 
   /**
    * @brief Gets the z value
    * @warning Exact, NaN for empty or 0 for 2D coordinates
    */
-  Kernel::FT
+  SFCGAL_API Kernel::FT
   z() const;
 
   //-- helper
diff --git a/src/detail/transform/ForceZOrderPoints.h b/src/detail/transform/ForceZOrderPoints.h
index 707155ba..e8ea1d3f 100644
--- a/src/detail/transform/ForceZOrderPoints.h
+++ b/src/detail/transform/ForceZOrderPoints.h
@@ -26,7 +26,7 @@ public:
   /**
    * Constructor with a default Z value
    */
-  ForceZOrderPoints(const Kernel::FT defaultZ = 0);
+  SFCGAL_API ForceZOrderPoints(const Kernel::FT defaultZ = 0);
 
   /*
    * [SFCGAL::Transform]
diff --git a/src/primitive3d/Cylinder.h b/src/primitive3d/Cylinder.h
index 3a034057..27264d90 100644
--- a/src/primitive3d/Cylinder.h
+++ b/src/primitive3d/Cylinder.h
@@ -31,7 +31,7 @@ public:
    * @param height The height of the cylinder
    * @param num_radial The number of radial divisions
    */
-  Cylinder(const Point_3    &base_center = Point_3(0, 0, 0),
+  SFCGAL_API Cylinder(const Point_3    &base_center = Point_3(0, 0, 0),
            const Vector_3   &axis        = Vector_3(0, 0, 1),
            const Kernel::FT &radius = 1.0, const Kernel::FT &height = 1.0,
            int num_radial = 32);
diff --git a/src/primitive3d/Sphere.h b/src/primitive3d/Sphere.h
index 054acced..67af4441 100644
--- a/src/primitive3d/Sphere.h
+++ b/src/primitive3d/Sphere.h
@@ -33,7 +33,7 @@ public:
    * @param num_horizontal The number of horizontal divisions
    * @param direction The direction vector for sphere orientation
    */
-  Sphere(const Kernel::FT      &radius = 1.0,
+  SFCGAL_API Sphere(const Kernel::FT      &radius = 1.0,
          const Kernel::Point_3 &center = Kernel::Point_3(0, 0, 0),
          int num_vertical = 16, int num_horizontal = 32,
          const Kernel::Vector_3 &direction = Kernel::Vector_3(0, 0, 1));
