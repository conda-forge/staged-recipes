{% set version = '0.6.0' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-progressr
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/progressr_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/progressr/progressr_{{ version }}.tar.gz
  sha256: c77449d43cd45ab20da113bcb95925e21d20078586ba564621da9fdf290d6bb3

build:
  merge_build_host: True  # [win]
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-digest
  run:
    - r-base
    - r-digest

test:
  commands:
    - $R -e "library('progressr')"           # [not win]
    - "\"%R%\" -e \"library('progressr')\""  # [win]

about:
  home: https://github.com/HenrikBengtsson/progressr
  license: GPL-3.0-or-later
  summary: A minimal, unifying API for scripts and packages to report progress updates from anywhere
    including when using parallel processing.  The package is designed such that the
    developer can to focus on what progress should be reported on without having to
    worry about how to present it.  The end user has full control of how, where, and
    when to render these progress updates, e.g. in the terminal using utils::txtProgressBar()
    or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(),
    tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(),
    or on a file system via the size of a file. Anyone can add additional, customized,
    progression handlers. The 'progressr' package uses R's condition framework for signaling
    progress updated. Because of this, progress can be reported from almost anywhere
    in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply()
    family of functions, 'purrr', 'plyr', and 'foreach'. It will also work with parallel
    processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(),
    and 'foreach' with 'doFuture'. The package is compatible with Shiny applications.
  license_family: GPL3
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: progressr
# Version: 0.6.0
# Title: A Inclusive, Unifying API for Progress Updates
# Description: A minimal, unifying API for scripts and packages to report progress updates from anywhere including when using parallel processing.  The package is designed such that the developer can to focus on what progress should be reported on without having to worry about how to present it.  The end user has full control of how, where, and when to render these progress updates, e.g. in the terminal using utils::txtProgressBar() or progress::progress_bar(), in a graphical user interface using utils::winProgressBar(), tcltk::tkProgressBar() or shiny::withProgress(), via the speakers using beep::beepr(), or on a file system via the size of a file. Anyone can add additional, customized, progression handlers. The 'progressr' package uses R's condition framework for signaling progress updated. Because of this, progress can be reported from almost anywhere in R, e.g. from classical for and while loops, from map-reduce APIs like the lapply() family of functions, 'purrr', 'plyr', and 'foreach'. It will also work with parallel processing via the 'future' framework, e.g. future.apply::future_lapply(), furrr::future_map(), and 'foreach' with 'doFuture'. The package is compatible with Shiny applications.
# Authors@R: c( person("Henrik", "Bengtsson", role=c("aut", "cre", "cph"), email = "henrikb@braju.com"))
# License: GPL (>= 3)
# Imports: digest, utils
# Suggests: graphics, tcltk, beepr, pbmcapply, progress, purrr, foreach, plyr, doFuture, future (>= 1.16.0), future.apply, furrr, shiny, commonmark, base64enc, tools
# VignetteBuilder: progressr
# URL: https://github.com/HenrikBengtsson/progressr
# BugReports: https://github.com/HenrikBengtsson/progressr/issues
# RoxygenNote: 7.1.0
# NeedsCompilation: no
# Packaged: 2020-05-19 02:46:40 UTC; hb
# Author: Henrik Bengtsson [aut, cre, cph]
# Maintainer: Henrik Bengtsson <henrikb@braju.com>
# Repository: CRAN
# Date/Publication: 2020-05-19 06:30:02 UTC
