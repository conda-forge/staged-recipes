--- sdl2/__init__.py
+++ sdl2/__init__.py
<<<<<<< 6f3252e3a8cae52b92ce713515e3a2ace482b6c3
@@ -1,4 +1,15 @@
 """SDL2 wrapper package"""
+# Direct this module to Ana/Miniconda's lib folder, where the SDL2 libraries
+# can be found.
+import os
+
+if os.name == "posix":
+	os.environ["PYSDL2_DLL_PATH"] = os.path.abspath(os.path.join(
+		os.path.dirname(__file__), os.pardir, os.pardir, os.pardir))
+elif os.name == "nt":
+	os.environ["PYSDL2_DLL_PATH"] = os.path.abspath(os.path.join(
+		os.path.dirname(__file__), os.pardir, os.pardir, os.pardir, "Library", "bin"))
=======
@@ -1,4 +1,16 @@
 """SDL2 wrapper package"""
+# Direct this module to Ana/Miniconda's lib folder, where the SDL2 libraries
+# can be found. Only do this if the variable hasn't already been set (maybe
+# the user has set a custom path already).
+import os
+
<<<<<<< c04f55e22b709b6a3d03f117327e36556a4dfdb6
+if not "PYSDL2_DLL_PATH" in os.environ or not os.environ["PYSDL2_DLL_PATH"]:
+	if os.name == "posix":
+		os.environ["PYSDL2_DLL_PATH"] = os.path.abspath(os.path.join(
+			os.path.dirname(__file__), os.pardir, os.pardir, os.pardir))
+	elif os.name == "nt":
+		pass
>>>>>>> all sdl recipes working, added pysdl2
=======
+if os.name == "posix":
+	os.environ["PYSDL2_DLL_PATH"] = os.path.abspath(os.path.join(
+		os.path.dirname(__file__), os.pardir, os.pardir, os.pardir))
+elif os.name == "nt":
+	os.environ["PYSDL2_DLL_PATH"] = os.path.abspath(os.path.join(
+		os.path.dirname(__file__), os.pardir, os.pardir, os.pardir, "Library", "bin"))
>>>>>>> Update recipes for windows
+
 from .dll import get_dll_file, _bind
 from ctypes import c_int as _cint
 
