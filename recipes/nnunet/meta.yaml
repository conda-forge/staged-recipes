{% set name = "nnunet" %}
{% set version = "1.7.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/nnunet-{{ version }}.tar.gz
  sha256: 0e4836ab1df049585b60c152fc2b4b2cf882728cd93c78e49288c6db90f9f703

build:
  entry_points:
    - nnUNet_convert_decathlon_task = nnunet.experiment_planning.nnUNet_convert_decathlon_task:main
    - nnUNet_plan_and_preprocess = nnunet.experiment_planning.nnUNet_plan_and_preprocess:main
    - nnUNet_train = nnunet.run.run_training:main
    - nnUNet_train_DP = nnunet.run.run_training_DP:main
    - nnUNet_train_DDP = nnunet.run.run_training_DDP:main
    - nnUNet_predict = nnunet.inference.predict_simple:main
    - nnUNet_ensemble = nnunet.inference.ensemble_predictions:main
    - nnUNet_find_best_configuration = nnunet.evaluation.model_selection.figure_out_what_to_submit:main
    - nnUNet_print_available_pretrained_models = nnunet.inference.pretrained_models.download_pretrained_model:print_available_pretrained_models
    - nnUNet_print_pretrained_model_info = nnunet.inference.pretrained_models.download_pretrained_model:print_pretrained_model_requirements
    - nnUNet_download_pretrained_model = nnunet.inference.pretrained_models.download_pretrained_model:download_by_name
    - nnUNet_download_pretrained_model_by_url = nnunet.inference.pretrained_models.download_pretrained_model:download_by_url
    - nnUNet_determine_postprocessing = nnunet.postprocessing.consolidate_postprocessing_simple:main
    - nnUNet_export_model_to_zip = nnunet.inference.pretrained_models.collect_pretrained_models:export_entry_point
    - nnUNet_install_pretrained_model_from_zip = nnunet.inference.pretrained_models.download_pretrained_model:install_from_zip_entry_point
    - nnUNet_change_trainer_class = nnunet.inference.change_trainer:main
    - nnUNet_evaluate_folder = nnunet.evaluation.evaluator:nnunet_evaluate_folder
    - nnUNet_plot_task_pngs = nnunet.utilities.overlay_plots:entry_point_generate_overlay
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - pip
    - python >=3.6
  run:
    - batchgenerators >=0.23
    - dicom2nifti
    - matplotlib-base
    - medpy
    - nibabel
    - numpy
    - pandas
    - python >=3.6
    - pytorch >1.10.0
    - requests
    - scikit-image >=0.14
    - scikit-learn
    - scipy
    - simpleitk
    - tifffile
    - tqdm

test:
  imports:
    - nnunet
  commands:
    - pip list
    - pip check
    - nnUNet_convert_decathlon_task --help
    - nnUNet_plan_and_preprocess --help
    - nnUNet_train --help
    - nnUNet_train_DP --help
    - nnUNet_train_DDP --help
    - nnUNet_predict --help
    - nnUNet_ensemble --help
    - nnUNet_find_best_configuration --help
    - nnUNet_print_available_pretrained_models --help
    - nnUNet_print_pretrained_model_info --help
    - nnUNet_download_pretrained_model --help
    - nnUNet_download_pretrained_model_by_url --help
    - nnUNet_determine_postprocessing --help
    - nnUNet_export_model_to_zip --help
    - nnUNet_install_pretrained_model_from_zip --help
    - nnUNet_change_trainer_class --help
    - nnUNet_evaluate_folder --help
    - nnUNet_plot_task_pngs --help
  requires:
    - pip

about:
  home: https://pypi.org/project/nnunet
  summary: nnU-Net. Framework for out-of-the box biomedical image segmentation.
  license: Apache-2.0
  license_file: LICENSE
  dev_url: https://github.com/MIC-DKFZ/nnUNet

extra:
  recipe-maintainers:
    - goanpeca
