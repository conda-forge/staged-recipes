{% set name = "OpenMS" %}
{% set version = "3.0.0" %}
package:
  name: {{ name|lower }}-meta
  version: {{ version }}

source:
  url: https://abibuilder.cs.uni-tuebingen.de/archive/openms/OpenMSInstaller/release/{{ version }}/OpenMS-{{ version }}-src.tar.gz
  sha256: d79beb3d58be60a42b5a8aa30a96074f9db7407ee0f5262a307b432cd4db5208

build:
  number: 0
  skip: true  # [win]

requirements:
    build:
      - {{ compiler('cxx') }}
      - cmake
      - make
      - autoconf
      - automake
      - libtool
      - llvm-openmp  # [osx]
      - libgomp      # [linux]
    host:
      - zlib
      - xerces-c
      - boost-cpp
      - eigen >=3.3.2
      - hdf5
      - bzip2
      - qt-main
      - libsvm
      - coinmp
      - nlohmann-json
      - sqlitecpp

outputs:
  - name: libopenms
    version: {{ version }}
    script: package_libopenms.sh
    requirements:
        # No actual build is done. CMake is used to install different parts of the existing build
        # But since the other packages depend on its run_exports
        # We want to make sure that the versions of the dependencies used are the same as those above
        build:
          - cmake
          - {{ compiler('cxx') }}
          - llvm-openmp  # [osx]
          - libgomp      # [linux]
        host:
          - zlib
          - xerces-c
          - boost-cpp
          - eigen >=3.3.2
          - hdf5
          - bzip2
          - qt-main
          - libsvm
          - coinmp
          - nlohmann-json
          - sqlitecpp
        run:
          # TODO Add run_exports to these recipes
          - libsvm
          - coinmp
    build:
      run_exports:
          - libopenms {{ version }}
    test:
      commands:
        - test -f $PREFIX/lib/libOpenMS$SHLIB_EXT  # [unix]
        - if not exist %LIBRARY_LIB%\\libOpenMS.lib exit 1  # [win]

  - name: openms
    version: {{ version }}
    script: package_openms-tools.sh
    requirements:
      # No actual build is done. CMake is used to install different parts of the existing build
      # We still have to add the compiler to get its run_exports to show up against overlinking warnings
      build:
        - cmake
        - {{ compiler('cxx') }}
        - llvm-openmp  # [osx]
        - libgomp      # [linux]
      host:
        - {{ pin_subpackage('libopenms', exact=True) }}
      # conda apparently does not support run_exports in subpackages yet, otherwise having libopenms in host would be enough.
      # see https://github.com/conda/conda-build/issues/3478
      # so specify everything again, such that EXACTLY the same versions are used!
      # I could not get the "resolved_packages" jinja function to gather dependencies from other subpackages.
        - zlib
        - libtool
        - xerces-c
        - boost-cpp
        - eigen >=3.3.2
        - hdf5
        - bzip2
        - qt-main
        - libsvm
        - coinmp
        - nlohmann-json
        - sqlitecpp
      run:
        - {{ pin_subpackage('libopenms', exact=True) }}
    test:
      commands:
        - OPENMS_DATA_PATH=${PREFIX}/share/OpenMS/ ${PREFIX}/bin/OpenMSInfo
        - OPENMS_DATA_PATH=${PREFIX}/share/OpenMS/ ${PREFIX}/bin/FileMerger --help

about:
  home: https://github.com/OpenMS/OpenMS
  license: BSD-3-Clause
  license_family: BSD
  license_file: 
    - LICENSE
    - thirdparty_licenses.txt
  summary: OpenMS is an open-source software C++ library for LC-MS data management and analyses

extra:
  recipe-maintainers:
    - jpfeuffer
    - timosachsenberg
