{% set name = "OpenMS" %}
{% set version = "2.9.1" %}
package:
  name: {{ name|lower }}-meta
  version: {{ version }}

{% if 'dev' in version %}
source:
  git_url: https://github.com/OpenMS/OpenMS.git
  git_rev: develop
  git_depth: 1 # (Defaults to -1/not shallow)
{% else %}
source:
  url: https://abibuilder.cs.uni-tuebingen.de/archive/openms/OpenMSInstaller/release/{{ version }}/OpenMS-{{ version }}-src.tar.gz
  sha256: 2d186f35fe42573a19283605ccfb491ca6da585880fa3725a013975df26bc008
{% endif %}

build:
  number: 0

# Try this when building with GUI
#extra:
#  container:
#    extended-base: True

requirements:
    build:
      - {{ compiler('cxx') }}
      - cmake
      - make
      - autoconf
      - automake
    host:
      - llvm-openmp  # [osx]
      - zlib
      - libtool
      - xerces-c
      - boost-cpp
      - eigen >=3.3.2
      - hdf5 >=1.10
      - bzip2
      - qt-main
      - libsvm
      - coinmp

test:
  commands:
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]

outputs:
  - name: libopenms
    version: {{ version }}
    script: package_libopenms.sh
    requirements:
        # no actual build is done. CMake is used to install different parts of the existing build
        # But since the other packages depend on its run_exports
        # We want to make sure that the versions of the dependencies used are the same as above
        build:
          - cmake
        host:
          - llvm-openmp  # [osx]
          - zlib
          - libtool
          - xerces-c
          - boost-cpp
          - eigen >=3.3.2
          - hdf5 >=1.10
          - bzip2
          - qt-main
          - libsvm
          - coinmp
    build:
      run_exports:
          - {{ pin_compatible('llvm-openmp', max_pin='x.x') }}  # [osx]
          - {{ pin_compatible('zlib', max_pin='x.x') }}
          - {{ pin_compatible('xerces-c', max_pin='x.x') }}
          - {{ pin_compatible('boost-cpp', max_pin='x.x') }}
          - {{ pin_compatible('eigen', max_pin='x.x') }}
          - {{ pin_compatible('hdf5', max_pin='x.x') }}
          - {{ pin_compatible('bzip2', max_pin='x.x') }}
          - {{ pin_compatible('qt', max_pin='x.x') }}
          - {{ pin_compatible('libsvm', max_pin='x.x') }}
          - {{ pin_compatible('coinmp', max_pin='x.x') }}
          - libopenms {{ version }}

  - name: openms
    version: {{ version }}
    script: package_openms-tools.sh
    requirements:
      # no actual build is done. CMake is used to install different parts of the existing build
      build:
        - cmake
      host:
        - {{ pin_subpackage('libopenms', exact=True) }}
      # conda apparently does not support run_exports in subpackages yet, otherwise having libopenms in host would be enough.
      # see https://github.com/conda/conda-build/issues/3478
      # so specify everything again, such that EXACTLY the same versions are used!
      # I could not get the "resolved_packages" jinja function to gather dependencies from other subpackages.
        - llvm-openmp  # [osx]
        - zlib
        - libtool
        - xerces-c
        - boost-cpp
        - eigen >=3.3.2
        - hdf5 >=1.10
        - bzip2
        - qt
        - libsvm
        - coinmp
      run:
        - {{ pin_subpackage('libopenms', exact=True) }}
        - {{ pin_compatible('llvm-openmp', max_pin='x.x') }}  # [osx]
        - {{ pin_compatible('zlib', max_pin='x.x') }}
        - {{ pin_compatible('xerces-c', max_pin='x.x') }}
        - {{ pin_compatible('boost-cpp', max_pin='x.x') }}
        - {{ pin_compatible('eigen', max_pin='x.x') }}
        - {{ pin_compatible('hdf5', max_pin='x.x') }}
        - {{ pin_compatible('bzip2', max_pin='x.x') }}
        - {{ pin_compatible('qt', max_pin='x.x') }}
        - {{ pin_compatible('libsvm', max_pin='x.x') }}
        - {{ pin_compatible('coinmp', max_pin='x.x') }}
    test:
      commands:
        - OPENMS_DATA_PATH=${PREFIX}/share/OpenMS/ ${PREFIX}/bin/OpenMSInfo
        - OPENMS_DATA_PATH=${PREFIX}/share/OpenMS/ ${PREFIX}/bin/FileMerger --help

about:
  home: https://github.com/OpenMS/OpenMS
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: OpenMS is an open-source software C++ library for LC-MS data management and analyses

extra:
  recipe-maintainers:
    - jpfeuffer
    - timosachsenberg
