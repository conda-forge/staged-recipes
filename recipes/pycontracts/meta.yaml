{% set name = "pycontracts" %}
{% set version = "1.8.12" %}

package:
  name: "{{ name|lower }}"
  version: "{{ version }}"

source:
  url: "https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz"
  sha256: e76adbd832deec28b2045a6094c5bb779a0b2cb1105a23b3efafe723e2c9937a

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - decorator
    - future
    - pip
    - pyparsing
    - python
    - six
  run:
    - decorator
    - future
    - pyparsing
    - python
    - six

test:
  imports:
    - contracts
    - contracts.library
    - contracts.testing
    - contracts.testing.library
    - contracts.useful_contracts
  requires:
    - nose

about:
  home: "http://andreacensi.github.com/contracts/"
  license: "GNU Library or Lesser General Public (LGPL)"
  license_family: LGPL
  license_file: LICENSE.txt
  summary: "PyContracts is a Python package that allows to declare constraints on function parameters and return values. Contracts can be specified using Python3 annotations, in a decorator, or inside a docstring :type: and :rtype: tags. PyContracts supports a basic type system, variables binding, arithmetic constraints, and has several specialized contracts (notably for Numpy arrays), as well as an extension API."
  doc_url: 
  dev_url: 

extra:
  recipe-maintainers:
    - rwaldman
