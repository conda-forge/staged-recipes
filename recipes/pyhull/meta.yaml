{% set name = "pyhull" %}
{% set version = "1.5.8" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 7951f388f7a1f35d07cc86149e525b311c10d3a64b073fd2565c428af5ff916f
  patches:
    - pyhull.patch

build:
  number: 0
  script: "{{ PYTHON }} -m pip install . -vvv"
  skip: True  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
  host:
    - python
    - numpy
    - pip
    - qhull 
  run:
    - python
    - qhull

test:
  imports:
    - pyhull

about:
  home: https://github.com/materialsvirtuallab/pyhull
  license: MIT
  license_family: MIT
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE.rst'
  summary: 'Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull'

  description: |
    Pyhull is a Python wrapper to Qhull (http://www.qhull.org/) for the computation of the convex hull, Delaunay
    triangulation and Voronoi diagram. It is written as a Python C extension, with both high-level and low-level
    interfaces to qhull.
    Pyhull has been tested to scale to 10,000 7D points for convex hull calculations (results in ~ 10 seconds),
    and 10,000 6D points for Delaunay triangulations and Voronoi tesselations (~ 100 seconds). Higher number of
    points and higher dimensions should be accessible depending on your machine, but may take a significant
    amount of time.
  doc_url: http://packages.python.org/pyhull/
  dev_url: https://github.com/materialsvirtuallab/pyhull

extra:
  recipe-maintainers:
    - jan-janssen
