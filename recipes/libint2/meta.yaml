{% set name = "libint2" %}
{% set version = "2.7.2" %}

# toy-sized source tarball for recipe testing
{% set url_toy = "https://github.com/loriab/libint/releases/download/v0.1/libint-2.7.2-post1-2-2-3-2_1.tgz" %}
{% set sha256_toy = "8eec23ee3148cd91dd817c5dc908e1e40e14d318d704d047ac5572dce860484e" %}

# production source tarball: L/M build w/i time
{% set url_bells = "https://github.com/loriab/libint/releases/download/v0.1/libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1.tgz" %}
{% set sha256_bells = "2d3a27510578f409fb080574721923c6d5bd06b13583a12d6823326be88236df" %}

# production source tarball: W still hangs
#{% set url = "https://github.com/loriab/libint/releases/download/v0.1/libint-2.7.2-post1-5-4-3-6-5-4_mm4ob2_1.tgz" %}
#{% set sha256 = "935b7a6fb45ed8ce8b6fade850988bb1f3cfb67cf59b404107132a9f5c314e20" %}

# production source tarball (44p)
#{% set url_basic = "https://github.com/loriab/libint/releases/download/v0.1/libint-2.7.2-post1-5-4-2-6-5-4_mm4ob2_1.tgz" %}
#{% set sha256_basic = "4fac4cf2a7c4ac8dd58bdde976859ea2bb9ea48a9fdda3ed0c59d8f9558c0fb4" %}

# production source tarball (43p)
{% set url_basic = "https://github.com/loriab/libint/releases/download/v0.1/libint-2.7.2-post1-5-4-2-6-5-3_mm4ob2_1.tgz" %}
{% set sha256_basic= "6bdffa302f37a9dc318abbf503a7442fa015cfbc9c8336e3357466733468377b" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: {{ url_toy }}          # [unix]
  #url: {{ url_bells }}        # [unix]
  url: {{ url_basic }}        # [win]
  sha256: {{ sha256_toy }}    # [unix]
  #sha256: {{ sha256_bells }}  # [unix]
  sha256: {{ sha256_basic }}  # [win]
  # note: source/url above is a tarball of generated library source code.
  # * the upstream generator project is: https://github.com/evaleev/libint
  # * tarballs from modified generator project at: https://github.com/evaleev/libint/pull/259

build:
  number: 0
  binary_relocation: true
  run_exports:
      - {{ pin_subpackage('libint2', max_pin='x') }}

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
  host:
    # note: alternately, could withhold boost here so that a vendored subset of boost headers gets installed
    #   at include/libint2/boost/ . Then downstream builds against libint2 don't need a Boost dependency.
    - boost-cpp
    - eigen

test:
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - python 3.10  # only for running a validation script, so suppress all but one Py version. update as necessary.
    - eigen
    - boost-cpp
  files:
    - tests/hartree-fock/CMakeLists.txt
  source_files:
    - features
    - tests/hartree-fock/h2o_rotated.xyz
    - tests/hartree-fock/hartree-fock++.cc
    - tests/hartree-fock/hartree-fock++-validate.py
  commands:
    - ls -l $PREFIX/lib                                                  # [unix]
    - ls -l $PREFIX/lib/cmake/libint2                                    # [unix]
    - dir %PREFIX%\\Library                                              # [win]
    - dir %PREFIX%\\Library\\include                                     # [win]
    # Verify library
    - test -L $PREFIX/lib/libint2$SHLIB_EXT                              # [unix]
    - test ! -f $PREFIX/lib/libint2.a                                    # [unix]
    - if not exist %PREFIX%\\Library\\lib\\int2.lib exit 1               # [win]
    - if exist %PREFIX%\\Library\\bin\\int2.dll exit 1                   # [win]
    # Verify accessories
    - test -f $PREFIX/include/libint2.h                                  # [unix]
    - test -f $PREFIX/include/libint2/engine.h                           # [unix]
    - test ! -f $PREFIX/include/libint2/boost/preprocessor.hpp           # [unix]
    - test -f $PREFIX/share/libint/{{ version }}/basis/sto-6g.g94        # [unix]
    - test -f $PREFIX/lib/cmake/libint2/libint2-config.cmake             # [unix]
    - test -f $PREFIX/lib/pkgconfig/libint2.pc                           # [unix]
    - if not exist %PREFIX%\\Library\\include\\libint2.h exit 1          # [win]
    - if not exist %PREFIX%\\Library\\include\\libint2\\engine.h exit 1  # [win]
    - if exist %PREFIX%\\Library\\include\\libint2\\boost\\preprocessor.hpp exit 1  # [win]
    - if not exist %PREFIX%\\Library\\share\\libint\\{{ version }}\\basis\\sto-6g.g94 exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\cmake\\libint2\\libint2-config.cmake exit 1  # [win]
    - if exist %PREFIX%\\Library\\lib\\pkgconfig\\libint2.pc exit 1      # [win]
    # Inspect linkage
    - ldd -v $PREFIX/lib/libint2$SHLIB_EXT                               # [linux and build_platform == target_platform]
    - otool -L $PREFIX/lib/libint2$SHLIB_EXT                             # [osx]
    # Actually test
    - cd tests/hartree-fock
    - cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH="${PREFIX}"          # [unix]
    - cmake -S. -Bbuild -GNinja -DCMAKE_PREFIX_PATH="%LIBRARY_PREFIX%" -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl -DCMAKE_BUILD_TYPE=Release  # [win]
    - cmake --build build
    - ./build/hf++ h2o_rotated.xyz | python hartree-fock++-validate.py ../../features  # [unix]
    - build\\hf++.exe h2o_rotated.xyz | python hartree-fock++-validate.py ..\\..\\features  # [win]

about:
  home: https://github.com/evaleev/libint
  dev_url: https://github.com/evaleev/libint
  doc_url: http://evaleev.github.io/libint/
  license: LGPL-3.0-only
  license_url: https://opensource.org/license/lgpl-3-0/
  license_file:
    - LICENSE
    - COPYING.LESSER
  license_family: LGPL
  summary: "E. Valeev's two-body Gaussian molecular integrals"

extra:
  recipe-maintainers:
    - loriab
