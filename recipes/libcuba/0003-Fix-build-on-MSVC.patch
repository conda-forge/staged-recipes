From a8a09843fc0e9d6c84f391181c1abc1b523c788c Mon Sep 17 00:00:00 2001
From: Julien Schueller <schueller@phimeca.com>
Date: Fri, 16 Feb 2024 21:53:25 +0100
Subject: [PATCH 3/5] Fix build on MSVC

---
 src/common/stddecl.h  | 23 ++++++++++++++++++++++-
 src/divonne/Iterate.c |  6 ++++--
 src/vegas/Integrate.c |  3 ++-
 3 files changed, 28 insertions(+), 4 deletions(-)

diff --git a/src/common/stddecl.h b/src/common/stddecl.h
index 6d279fc..e74d351 100644
--- a/src/common/stddecl.h
+++ b/src/common/stddecl.h
@@ -27,7 +27,9 @@
 #include <math.h>
 #include <float.h>
 #include <limits.h>
+#ifndef _WIN32
 #include <unistd.h>
+#endif
 #include <assert.h>
 #include <fcntl.h>
 #include <setjmp.h>
@@ -60,6 +62,25 @@ extern "C"
 void *alloca (size_t);
 #endif
 
+#ifdef _MSC_VER
+#include <io.h>
+#define open _open
+#define close _close
+#define ssize_t ptrdiff_t
+
+static int mkstemp(char * tmplate)
+{
+  int fd = -1;
+  int err = -1;
+  char buf[_MAX_PATH];
+  strncpy(buf, tmplate, _MAX_PATH);
+  err = _mktemp_s(buf, _MAX_PATH);
+  if (err != 0)
+    fd = open (buf, O_RDWR | O_CREAT | O_EXCL, _S_IREAD | _S_IWRITE);
+  return fd;
+}
+#endif
+
 #ifndef NDIM
 #define NDIM t->ndim
 #define MAXDIM 1024
@@ -175,7 +196,7 @@ enum { uninitialized = 0x61627563 };
 #else
 #define Sized(type, var, size) type *var = alloca(size)
 #define Vector(type, var, n1) type *var = alloca((n1)*sizeof(type))
-#define Array(type, var, n1, n2) type (*var)[n2] = alloca((n1)*(n2)*sizeof(type))
+#define Array(type, var, n1, n2) Vector(type *, var, n1); Vector(type, __flat, (n1)*(n2)); int __ii; for (__ii = 0;__ii < (n1); ++__ii) var[__ii] = &(__flat[__ii * (n2)]);
 #endif
 
 #define FORK_ONLY(...)
diff --git a/src/divonne/Iterate.c b/src/divonne/Iterate.c
index ac4a4cd..4bea73c 100644
--- a/src/divonne/Iterate.c
+++ b/src/divonne/Iterate.c
@@ -53,9 +53,11 @@ FORK_ONLY(more:)
     maxsplit -= NegQ(parent->depth);
     if( parent->depth < 0 ) {
       count xreg;
-      struct {
+      typedef struct {
         count from, to;
-      } todo[maxsplit], *tdmax = todo, *td;
+      } Range;
+      Vector(Range, todo, maxsplit);
+      Range *tdmax = todo, *td;
       count nsplit = 0;
       real norm;
 
diff --git a/src/vegas/Integrate.c b/src/vegas/Integrate.c
index bb1bae7..acd5808 100644
--- a/src/vegas/Integrate.c
+++ b/src/vegas/Integrate.c
@@ -83,7 +83,8 @@ static int Integrate(This *t, real *integral, real *error, real *prob)
     number nsamples = state->nsamples;
     creal jacobian = 1./nsamples;
 
-    FClear(margsum);
+    for(comp = 0 ; comp < NCOMP; ++ comp)
+      memset(margsum[comp], 0, NDIM * sizeof(Grid));
 
     for( ; nsamples > 0; nsamples -= t->nbatch ) {
       cnumber n = IMin(t->nbatch, nsamples);
-- 
2.44.0

