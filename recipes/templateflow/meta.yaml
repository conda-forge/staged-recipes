# These are used in line 10.
{% set name = "templateflow" %}
{% set version = "0.6.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  url: https://github.com/templateflow/python-client/archive/{{ version }}.tar.gz
  sha256: a8e8e8910934a38b797dcb06caa001bd341737ad85326cbc7945b8920ee38063

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"
  skip: True  # [py<36]

requirements:
  host:
    - python
    - pip
  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - templateflow
    - templateflow.api

about:
  home: https://templateflow.org/client/
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  license: Apache-2.0
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: Apache
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE
  summary: 'A Python client to query TemplateFlow with PyBIDS'

  # The remaining entries in this section are optional, but recommended.
  description: |
    Group inference and reporting of neuroimaging studies require that individual’s
    features are spatially aligned into a common frame where their location can be
    called standard. To that end, a multiplicity of brain templates with anatomical
    annotations (i.e., atlases) have been published. However, a centralized resource
    that allows programmatic access to templates is lacking. TemplateFlow is a modular,
    version-controlled resource that allows researchers to use templates “off-the-shelf”
    and share new ones.
  doc_url: https://templateflow.org/python-client/
  dev_url: https://github.com/templateflow/python-client

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    - oesteban
    - mgxd
    - rciric
    - effigies
