From c5e852f69d6ad911c33c5741edab45cde2605629 Mon Sep 17 00:00:00 2001
From: J-Donald Tournier <jdtournier@gmail.com>
Date: Wed, 25 Aug 2021 11:20:48 +0100
Subject: [PATCH 2/3] minor changes to compile with Eigen 3.4

---
 cmd/mrdegibbs.cpp               | 4 ++--
 core/eigen_plugins/dense_base.h | 2 +-
 core/eigen_plugins/matrix.h     | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/cmd/mrdegibbs.cpp b/cmd/mrdegibbs.cpp
index 68f9e0c4b..8c6dc190e 100644
--- a/cmd/mrdegibbs.cpp
+++ b/cmd/mrdegibbs.cpp
@@ -122,12 +122,12 @@ class ComputeSlice
       assign_pos_of (pos, outer_axes).to (in, out);
 
       for (auto l = Loop (slice_axes) (in); l; ++l)
-        im1 (in.index(X), in.index(Y)) = cdouble (in.value(), 0.0);
+        im1 (ssize_t(in.index(X)), ssize_t(in.index(Y))) = cdouble (in.value(), 0.0);
 
       unring_2d ();
 
       for (auto l = Loop (slice_axes) (out); l; ++l)
-        out.value() = im1 (out.index(X), out.index(Y)).real();
+        out.value() = im1 (ssize_t(out.index(X)), ssize_t(out.index(Y))).real();
     }
 
   private:
diff --git a/core/eigen_plugins/dense_base.h b/core/eigen_plugins/dense_base.h
index 02c52b55c..ace509fba 100644
--- a/core/eigen_plugins/dense_base.h
+++ b/core/eigen_plugins/dense_base.h
@@ -19,7 +19,7 @@ template <class ImageType> \
 inline Derived& operator ARG (const MR::Helper::ConstRow<ImageType>& row) { \
   this->resize (row.image.size(row.axis),1); \
   for (row.image.index(row.axis) = 0; row.image.index (row.axis) < row.image.size (row.axis); ++row.image.index (row.axis)) \
-    this->operator() (row.image.index (row.axis), 0) ARG row.image.value(); \
+    this->operator() (ssize_t (row.image.index (row.axis)), 0) ARG row.image.value(); \
   return derived(); \
 }
 
diff --git a/core/eigen_plugins/matrix.h b/core/eigen_plugins/matrix.h
index ae44a8abf..6bfa7c6aa 100644
--- a/core/eigen_plugins/matrix.h
+++ b/core/eigen_plugins/matrix.h
@@ -21,7 +21,7 @@ template <class ImageType> Matrix (const MR::Helper::Row<ImageType>& row) : Base
 template <class ImageType> inline Matrix& operator ARG (const MR::Helper::ConstRow<ImageType>& row) { \
   this->resize (row.image.size(row.axis),1); \
   for (row.image.index(row.axis) = 0; row.image.index (row.axis) < row.image.size (row.axis); ++row.image.index (row.axis)) \
-    this->operator() (row.image.index (row.axis), 0) ARG row.image.value(); \
+    this->operator() (ssize_t (row.image.index (row.axis)), 0) ARG row.image.value(); \
   return *this; \
 }
 
-- 
2.30.2

