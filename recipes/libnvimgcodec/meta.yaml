# Copyright (c) 2024, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{% set version = '0.5.0' %}
{% set somajor = version.split('.')[0] %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0]|int %}

package:
  name: libnvimgcodec-split
  version: {{ version }}

source:
  url: https://github.com/NVIDIA/nvImageCodec/archive/refs/tags/v{{ version }}.tar.gz
  sha256: bca65e817db45edcc86b57cc980d7ad122b3eef167b5cfc4a0e20e8e24c2226f
  patches:
    - patches/0001-BLD-Use-only-dynamic-shared-library-links-to-CUDA-ta.patch
    - patches/0002-BLD-Move-CMake-config-install-directory.patch
build:
  number: 0
  skip: true  # [cuda_compiler_version in (undefined, 'None')]
  # Debug skips below
  # skip: true  # [py != 312]
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cuda') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
  # Must use 3.18 because of changes in find_package(TIFF) - @carterbox Jan 2025
    - cmake 3.18.*  # [win]
    - cmake  # [not win]
    - ninja
    - pkg-config
  host:
    - cuda-version {{ cuda_compiler_version }}
    {% if cuda_major == 12 %}
    - cuda-cudart-dev
    - cuda-driver-dev  # [linux]
    - libnvjpeg-dev
    {% endif %}
    - libnvjpeg2k-dev
    - libnvtiff-dev
    - libboost-headers
    - libjpeg-turbo
    - libopencv
    - libtiff
    - nvtx-c
    - zlib
    - zstd

outputs:

  - name: libnvimgcodec-dev
    build:
      run_exports:
        - {{ pin_subpackage('libnvimgcodec' ~ somajor, max_pin=None) }}
    files:
      # This recipe requires conda-build 24.7 or later
      include:
        - include/**  # [linux]
        - lib/libnvimgcodec.so  # [linux]
        - lib/cmake/nvimgcodec  # [linux]
        - etc/**  # [linux]
        - lib/extensions/*.so  # [linux]
        # FIXME: Drop static libraries once CMake config supports it
        - lib/libnvimgcodec_static.a  # [linux]
        - Library/include/**  # [win]
        - Library/lib/nvimgcodec.lib  # [win]
        - Library/lib/cmake/nvimgcodec  # [win]
        - Library/etc/**  # [win]
        - Library/extensions/*.lib  # [win]
        # FIXME: Drop static libraries once CMake config supports it
        - Library/lib/nvimgcodec_static.lib  # [win]
      exclude:
        - lib/python*  # [linux]
        - lib/libnvimgcodec.so.*  # [linux]
        - lib/extensions/*.so.*  # [linux]
    requirements:
      host:
        - {{ pin_subpackage('libnvimgcodec' ~ somajor, exact=True) }}
      run:
        - {{ pin_subpackage('libnvimgcodec' ~ somajor, exact=True) }}
    test:
      files:
        - test
      requires:  # [build_platform == target_platform]
        - {{ compiler('c') }}  # [build_platform == target_platform]
        - {{ compiler('cxx') }}  # [build_platform == target_platform]
        - {{ compiler('cuda') }}  # [build_platform == target_platform]
        - {{ stdlib('c') }}  # [build_platform == target_platform]
        - cmake   # [build_platform == target_platform]
        - ninja  # [build_platform == target_platform]
       {% if cuda_major == 12 %}
        - cuda-cudart-dev  # [build_platform == target_platform]
       {% endif %}
      commands:
        - test -f ${PREFIX}/include/nvimgcodec.h  # [linux]
        - if not exist %LIBRARY_INC%\\nvimgcodec.h exit 1  # [win]
        - test -f ${PREFIX}/lib/libnvimgcodec.so.{{ somajor }}  # [linux]
        - test -f ${PREFIX}/lib/libnvimgcodec.so.{{ version }}  # [linux]
        - if not exist %LIBRARY_LIB%\\nvimgcodec.lib exit 1  # [win]
        - test -f ${PREFIX}/etc/ld.so.conf.d/nvimgcodec.conf  # [unix]
        - test -f ${PREFIX}/lib/cmake/nvimgcodec/nvimgcodecConfig.cmake  # [unix]
        - cmake ${CMAKE_ARGS} -GNinja test  # [build_platform == target_platform]
        - cmake --build .  # [build_platform == target_platform]
        # - test ! -f ${PREFIX}/lib/libnvimgcodec_static.a  # [unix]

  - name: libnvimgcodec{{ somajor }}
    files:
      include:
        - lib/libnvimgcodec.so.*  # [linux]
        - lib/extensions/*.so.*  # [linux]
        - Library/bin/nvimgcodec_{{ somajor }}.dll  # [win]
        - Library/extensions/*.dll  # [win]
      exclude:
        - lib/extensions/*opencv*  # [linux]
        - lib/extensions/*libtiff*  # [linux]
        - lib/extensions/*libjpeg*  # [linux]
        - Library/extensions/*opencv*  # [win]
        - Library/extensions/*libtiff*  # [win]
        - Library/extensions/*libjpeg*  # [win]
    build:
      missing_dso_whitelist:
        - '*/libcuda.so.*'  # [linux]
      # Implement enhanced CUDA compatability for CTK packages
      ignore_run_exports:
        - cuda-version
      ignore_run_exports_from:
        - cuda-cudart-dev
        - libnvjpeg-dev
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cuda') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - cuda-version {{ cuda_compiler_version }}
      {% if cuda_major == 12 %}
        - cuda-cudart-dev
        - cuda-driver-dev  # [linux]
        - libnvjpeg-dev
      {% endif %}
        - libnvjpeg2k-dev
        - libnvtiff-dev
      run:
        - {{ pin_compatible('cuda-version', min_pin='x', max_pin='x') }}
      {% if cuda_major == 12 %}
        - cuda-cudart
        - libnvjpeg
      {% endif %}
      run_constrained:
        - {{ pin_subpackage('libnvimgcodec-libtiff-ext', exact=True) }}
        - {{ pin_subpackage('libnvimgcodec-libopencv-ext', exact=True) }}
        - {{ pin_subpackage('libnvimgcodec-libjpeg-turbo-ext', exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libnvimgcodec.so.{{ somajor }}  # [linux]
        - test -f ${PREFIX}/lib/libnvimgcodec.so.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/extensions/libnvbmp_ext.so.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/extensions/libnvjpeg_ext.so.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/extensions/libnvjpeg2k_ext.so.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/extensions/libnvpnm_ext.so.{{ version }}  # [linux]
        - test -f ${PREFIX}/lib/extensions/libnvtiff_ext.so.{{ version }}  # [linux]
        - if not exist %LIBRARY_BIN%\\nvimgcodec_{{ somajor }}.dll exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\extensions\\nvbmp_ext_{{ somajor }}.dll exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\extensions\\nvjpeg_ext_{{ somajor }}.dll exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\extensions\\nvjpeg2k_ext_{{ somajor }}.dll exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\extensions\\nvpnm_ext_{{ somajor }}.dll exit 1  # [win]
        - if not exist %LIBRARY_PREFIX%\\extensions\\nvtiff_ext_{{ somajor }}.dll exit 1  # [win]
    about:
      summary: The nvImageCodec runtime library.
      description: >-
        This is a runtime package only. Developers should install libnvimgcodec-dev to build with nvImageCodec.
      license: Apache-2.0
      license_family: APACHE
      license_file:
        - LICENSE.txt
        - Acknowledgements.txt

# loadable modules; optional and only needed at runtime

  - name: libnvimgcodec-libjpeg-turbo-ext
    files:
      - lib/extensions/*libjpeg*.so.*  # [linux]
      - Library/extensions/*libjpeg*.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - libjpeg-turbo
    test:
      commands:
        - test -f ${PREFIX}/lib/extensions/libjpeg_turbo_ext.so.{{ version }}  # [linux]
        - if not exist %LIBRARY_PREFIX%\\extensions\\libjpeg_turbo_ext_{{ somajor }}.dll exit 1  # [win]
    about:
      summary: Install this package to enable libjpeg extensions for nvImageCodec
      description: >-
        This is a runtime package only. Developers should install libnvimgcodec-dev to build with nvImageCodec.
      license: Apache-2.0
      license_family: APACHE
      license_file:
        - LICENSE.txt
        - Acknowledgements.txt

  - name: libnvimgcodec-libtiff-ext
    files:
      - lib/extensions/*libtiff*.so.*  # [linux]
      - Library/extensions/*libtiff*.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - libtiff
    test:
      commands:
        - test -f ${PREFIX}/lib/extensions/libtiff_ext.so.{{ version }}  # [linux]
        - if not exist %LIBRARY_PREFIX%\\extensions\\libtiff_ext_{{ somajor }}.dll exit 1  # [win]
    about:
      summary: Install this package to enable libtiff extensions for nvImageCodec
      description: >-
        This is a runtime package only. Developers should install libnvimgcodec-dev to build with nvImageCodec.
      license: Apache-2.0
      license_family: APACHE
      license_file:
        - LICENSE.txt
        - Acknowledgements.txt

  - name: libnvimgcodec-libopencv-ext
    files:
      - lib/extensions/*libopencv*.so.*  # [linux]
      - Library/extensions/*opencv*.dll  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - libopencv
    test:
      commands:
        - test -f ${PREFIX}/lib/extensions/libopencv_ext.so.{{ version }}  # [linux]
        - if not exist %LIBRARY_PREFIX%\\extensions\\opencv_ext_{{ somajor }}.dll exit 1  # [win]
    about:
      summary: Install this package to enable opencv extensions for nvImageCodec
      description: >-
        This is a runtime package only. Developers should install libnvimgcodec-dev to build with nvImageCodec.
      license: Apache-2.0
      license_family: APACHE
      license_file:
        - LICENSE.txt
        - Acknowledgements.txt

# NOTE: Metadata inheritance from this section to the outputs is all or nothing. Only the
# -dev package and the feedstock readme are inheriting this metadata.
about:
  home: https://github.com/NVIDIA/nvImageCodec
  summary: The C API development package for nvImageCodec.
  description: >
    nvImageCodec is an open-source library of accelerated codecs with unified interface.
    This package is the C-API only. See nvimgcodec for the Python-API.
  license: Apache-2.0
  license_family: APACHE
  license_file:
    - LICENSE.txt
    - Acknowledgements.txt

extra:
  feedstock-name: libnvimgcodec
  recipe-maintainers:
    - conda-forge/cuda
