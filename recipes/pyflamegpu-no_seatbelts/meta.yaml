{% set name = "pyflamegpu" %}
{% set version_py = "2.0.0rc1" %}
{% set version_cpp = "2.0.0-rc1" %}

package:
  name: {{ name|lower }}
  version: {{ version_py }}

source:
  # Temporary, will switch to release, when conda recipe is working
  url: https://github.com/FLAMEGPU/FLAMEGPU2/archive/refs/heads/rob_conda.tar.gz
  # url: https://github.com/FLAMEGPU/FLAMEGPU2/archive/refs/tags/{{ version_cpp }}.tar.gz

build:
  number: 0
  script_env:
    - FLAMEGPU_CONDA_BUILD_THREADS
    - FLAMEGPU_CONDA_CUDA_ARCHITECTURES
  track_features:
    - no_seatbelts
  string: nosb
  missing_dso_whitelist:
    - $RPATH/libcuda.so.1  # [linux] Ignore as this comes from CUDA driver
    - $RPATH/libnvrtc.so.12  # [linux] Conda-build can't find this in run reqs cuda-cudart
    - $RPATH/libcudart.so.12  # [linux] Conda-build can't find this in run reqs cuda-nvrtc
    - $RPATH/nvrtc64_120_0.dll  # [win64] Conda-build can't find this in run reqs cuda-cudart
    - $RPATH/cudart64_12.dll  # [win64] Conda-build can't find this in run reqs cuda-nvrtc
  ignore_run_exports:
    - python  # [linux] Not clear why conda thinks this isn't used
    - astpretty  # [linux, win64] Not clear why conda thinks this isn't used
    - vc14_runtime  # [win64] Not clear why conda thinks this isn't used (we aren't static linking)
    - ucrt  # [win64] Not clear why conda thinks this isn't used (we aren't static linking)

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cuda-cudart-dev  # [linux]
    - cuda-nvrtc-dev  # [linux]
    - libcurand-dev  # [linux]
    - swig ==4.0.2  # Have to manually direct swig to find this
    - git
    - cmake
    - make  # [not win]
  host:
    - python
    - astpretty
    - python-devtools
    - pip
    - setuptools >=40.8.0
    - wheel
    - python-build
  run:
    - cuda-version >=12.0
    - python
    - astpretty
    - cuda-cudart
    - cuda-nvrtc

test:
  imports:
    - pyflamegpu
    - pyflamegpu.codegen

about:
  home: https://flamegpu.com/
  license: MIT
  license_family: MIT
  summary: GPU accelerated agent based modelling framework for Python
  description: |
    FLAME GPU is a GPU accelerated simulator for domain independent complex systems simulations. Version 2 brings a complete re-write of the existing library offering greater flexibility, an improved interface for agent scripting, CUDA C++ & python3 interfaces and better research software engineering.
    FLAME GPU provides a mapping between a formal agent specifications with C based scripting and optimised CUDA code. This includes a number of key ABM building blocks such as multiple agent types, agent communication and birth and death allocation.
  license: MIT
  license_family: MIT
  license_file: LICENSE.md
  doc_url: https://docs.flamegpu.com/
  dev_url: https://github.com/FLAMEGPU/FLAMEGPU2

extra:
  recipe-maintainers:
    - mondus
    - Robadob
    - ptheywood
