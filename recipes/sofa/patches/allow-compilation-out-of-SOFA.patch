From af84c0938b6f130ff4bc02d9bb026454d3bcb4c6 Mon Sep 17 00:00:00 2001
From: Olivier Roussel <olivier.roussel@inria.fr>
Date: Wed, 3 Jan 2024 17:29:11 +0100
Subject: [PATCH] Allow components to be compiled out of SOFA

---
 Sofa/GL/CMakeLists.txt                       |  9 ++++++++
 Sofa/GUI/Qt/CMakeLists.txt                   | 15 ++++++++++++
 applications/projects/runSofa/CMakeLists.txt | 24 ++++++++++++++++++--
 examples/CMakeLists.txt                      |  8 ++++++-
 4 files changed, 53 insertions(+), 3 deletions(-)

diff --git a/Sofa/GL/CMakeLists.txt b/Sofa/GL/CMakeLists.txt
index c0d94be07f..402cb0e93f 100644
--- a/Sofa/GL/CMakeLists.txt
+++ b/Sofa/GL/CMakeLists.txt
@@ -1,6 +1,15 @@
 cmake_minimum_required(VERSION 3.12)
 project(Sofa.GL LANGUAGES CXX)
 
+# Detect if component is compiled outside SOFA
+if ("${CMAKE_PROJECT_NAME}" STREQUAL "${PROJECT_NAME}")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/Modules")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../framework/Config/cmake")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../framework/Config/cmake/Modules")
+
+  include(SofaMacros)
+endif()
+
 set(SOFAGLSRC_ROOT "src/sofa/gl")
 
 sofa_find_package(OpenGL REQUIRED BOTH_SCOPES)
diff --git a/Sofa/GUI/Qt/CMakeLists.txt b/Sofa/GUI/Qt/CMakeLists.txt
index 2bb1b2d8ba..025ce2bc84 100644
--- a/Sofa/GUI/Qt/CMakeLists.txt
+++ b/Sofa/GUI/Qt/CMakeLists.txt
@@ -1,6 +1,17 @@
 cmake_minimum_required(VERSION 3.12)
 project(Sofa.GUI.Qt LANGUAGES CXX)
 
+# Detect if component is compiled outside SOFA
+if ("${CMAKE_PROJECT_NAME}" STREQUAL "${PROJECT_NAME}")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake/Modules")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../framework/Config/cmake")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../framework/Config/cmake/Modules")
+
+  include(SofaMacros)
+
+  sofa_find_package(Sofa.GUI.Common REQUIRED)
+endif()
+
 # Qt dependencies
 set(QT_TARGETS "")
 set(QT_USE_IMPORTED_TARGETS 1)
@@ -318,6 +329,7 @@ add_library(${PROJECT_NAME} SHARED ${MOC_HEADER_FILES} ${HEADER_FILES} ${MOC_FIL
 # For files generated by the moc
 target_include_directories(${PROJECT_NAME} PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>")
 
+target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)
 target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common)
 target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual)
 target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility)
@@ -328,6 +340,9 @@ if(SOFA_DUMP_VISITOR_INFO)
 endif()
 
 if(Sofa.GL_FOUND)
+    if(SOFA_GUI_QT_ENABLE_QTVIEWER)
+      target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL)
+    endif()
     if(SOFA_GUI_QT_ENABLE_QGLVIEWER)
         target_link_libraries(${PROJECT_NAME} PUBLIC QGLViewer)
     endif()
diff --git a/applications/projects/runSofa/CMakeLists.txt b/applications/projects/runSofa/CMakeLists.txt
index aed8c17235..cad18fdc3a 100644
--- a/applications/projects/runSofa/CMakeLists.txt
+++ b/applications/projects/runSofa/CMakeLists.txt
@@ -1,6 +1,18 @@
 cmake_minimum_required(VERSION 3.12)
 project(runSofa)
 
+# Detect if component is compiled outside SOFA
+if ("${CMAKE_PROJECT_NAME}" STREQUAL "${PROJECT_NAME}")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake/Modules")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../Sofa/framework/Config/cmake")
+  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../Sofa/framework/Config/cmake/Modules")
+
+  include(SofaMacros)
+
+  sofa_find_package(Sofa.Simulation.Graph REQUIRED)
+  sofa_find_package(ZLIB)
+endif()
+
 ###################################
 # Generate plugin_list.conf.default
 include(cmake/GeneratePluginConfig.cmake)
@@ -14,8 +26,16 @@ endif()
 set(_configPluginFileName plugin_list.conf)
 set(_defaultConfigPluginFileName "${_configPluginFileName}.default")
 set(_defaultConfigPluginFilePath "${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}")
-sofa_generate_plugin_config(${_defaultConfigPluginFilePath})
-message("Write Plugin list at ${_defaultConfigPluginFilePath}")
+# Generate plugin_list.conf files from existing targets
+# This step is skipped if the app is compiled outside SOFA, as no targets are defined
+if (NOT "${CMAKE_PROJECT_NAME}" STREQUAL "${PROJECT_NAME}")
+  sofa_generate_plugin_config(${_defaultConfigPluginFilePath})
+  message("Write Plugin list at ${_defaultConfigPluginFilePath}")
+else()
+  file(MAKE_DIRECTORY "${CMAKE_BINARY_DIR}/${_pluginLocation}")
+  file(TOUCH ${_defaultConfigPluginFilePath})
+  message("Created empty Plugin list at ${_defaultConfigPluginFilePath} (no targets defined)")
+endif()
 configure_file(${_defaultConfigPluginFilePath} ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName} COPYONLY)
 install(FILES "${_defaultConfigPluginFilePath}" DESTINATION ${_pluginLocation}/ COMPONENT applications)
 ###################################
diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
index a3e80fcf40..59c41f81f4 100644
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -3,4 +3,10 @@ project(SofaScenes)
 
 file(GLOB_RECURSE EXAMPLES_FILES ../*.scn ../*.pscn ../*.pyscn)
 
-add_library(${PROJECT_NAME} INTERFACE ${EXAMPLES_FILES})
\ No newline at end of file
+add_library(${PROJECT_NAME} INTERFACE ${EXAMPLES_FILES})
+
+# Detect if component is compiled outside SOFA
+if ("${CMAKE_PROJECT_NAME}" STREQUAL "${PROJECT_NAME}")
+  install(DIRECTORY . DESTINATION share/sofa/examples COMPONENT resources)
+  install(DIRECTORY ../share/ DESTINATION share/sofa COMPONENT resources)
+endif()
-- 
2.34.1

