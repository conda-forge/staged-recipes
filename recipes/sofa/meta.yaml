{% set name = "sofa" %}
{% set version = "23.06.00" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/sofa-framework/sofa/archive/refs/tags/v{{ version }}.tar.gz 
    sha256: 5c56148d094bbb69bd576941d6e2a023327105af248b40d30274afa498489e6e
    patches:
      # As conda-build uses the CMAKE_FIND_ROOT_PATH variable (at least on Linux builds), 
      # each of its directory entry will be prepended to PATHS or HINTS locations for each call 
      # to CMake find_package() or find_library() functions. However, for the embedded libraries 
      # Difflib, JSon and STB in Sofa, paths / hints are given in absolute path (see JSON_ROOT for example)
      # This patch disable the behavior of considering the CMAKE_FIND_ROOT_PATH variables for these 
      # libraries and instead just rely on the absolute path given.
      # https://github.com/sofa-framework/sofa/pull/3870
      # This patch is planned to be part of release v23.12.
    - patches/0001-Config-Fix-cross-compilation-by-turning-off-cmake_fi.patch
      # The WinDepPack (Windows Dependency Package) of Sofa is not used in a conda environment as 
      # dependencies are handled as conda packages. This seems to break the installation of Sofa and the 
      # further compilation of external Sofa plugins. For the current release, WinDepPack usage is forced
      # in the cmake files as long Sofa is built on Windows. A solution must be investigated with the 
      # dev team to have the capability to at least disable it.
    - patches/0002-Remove-WinDepPack.patch

build:
  number: 0
  # v23.06 not released on MacOS yet due to broken CI
  skip: true  # [osx]
  run_exports:
    - {{ pin_subpackage(name, max_pin='x.x') }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make                           # [unix]
    - ninja                          # [win]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libselinux') }}        # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
    - qt-main

  host:
    - xorg-libxfixes  # [linux]
    - libglu          # [linux]
    - eigen
    - boost-cpp
    - zlib
    - glew
    - qt-main
    - libqglviewer
    - libjpeg-turbo
    - libpng
    - ffmpeg

  run:
    - libglu  # [linux]
    - eigen
    - boost-cpp

test:
  commands:
    - test -f $PREFIX/include/Sofa.Core/sofa/core/init.h                                     # [unix]
    - test -f $PREFIX/lib/cmake/Sofa.Core/Sofa.CoreConfig.cmake                              # [unix]
    - test -f $PREFIX/lib/cmake/Sofa.Core/Sofa.CoreConfigVersion.cmake                       # [unix]
    - test -f $PREFIX/lib/libSofa.Core${SHLIB_EXT}                                           # [unix]
    - if not exist %LIBRARY_PREFIX%\include\Sofa.Core\sofa\core\init.h exit 1                # [win]
    - if not exist %LIBRARY_PREFIX%\lib\cmake\Sofa.Core\Sofa.CoreConfig.cmake exit 1         # [win]
    - if not exist %LIBRARY_PREFIX%\lib\cmake\Sofa.Core\Sofa.CoreConfigVersion.cmake exit 1  # [win]
    - if not exist %LIBRARY_PREFIX%\lib\Sofa.Core.lib exit 1                                 # [win]
    - if not exist %LIBRARY_PREFIX%\bin\Sofa.Core.dll exit 1                                 # [win]
    
about:
  home: https://www.sofa-framework.org/
  summary: Real-time multi-physics simulation with an emphasis on medical simulation and robotics.
  license: LGPL-2.1-or-later
  license_family: LGPL
  license_file:
    - LICENSE.LGPL.txt
    - extlibs/difflib/LICENSE.MIT
    - extlibs/json/LICENSE.MIT
    - extlibs/stb/LICENSE.MIT
    - applications/plugins/CImgPlugin/Licence_CeCILL_V2-en.txt

  doc_url: https://www.sofa-framework.org/community/doc/
  dev_url: https://github.com/sofa-framework/sofa

extra:
  recipe-maintainers:
    - olivier-roussel
    - hugtalbot
