# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "dv-processing" %}
{% set version = "1.7.8" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://gitlab.com/inivation/dv/dv-processing/-/archive/{{ version }}/dv-processing-{{ version }}.tar.gz
  sha256: 84a3d34a5acfcf6b261840a1a7cb012e9e0867a5ce027ae5ffc3538b3b688344

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs:
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}
    - cmake>=3.22
    - ninja
    - pkg-config
  host:
    - libcaer>=3.3.15
    - boost-cpp>=1.76
    - eigen>=3.4.0
    - libopencv>=4.2.0
    - fmt>=8.1.1
    - lz4-c
    - pip
  # run:

test:
  files:
    - test
  requires:
    - cmake
  commands:
    - cd build && ctest


about:
  home: https://gitlab.com/inivation/dv/dv-processing
  summary: 'Generic algorithms for event cameras.'
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  doc_url: https://dv-processing.inivation.com/
  dev_url: https://gitlab.com/inivation/dv/dv-processing

extra:
  recipe-maintainers:
    - keegandent
