{% set name = "or-tools" %}
{% set version = "5.1" %}
{% set sha256 = "25aedf676ccc5ae246be44543572fba9be5f42f2fb0c1f7edcc6f138db207d32" %}

package:
  name: ortools
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/google/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - use_conda_dependencies.patch
    - use_conda_python_dependencies.patch

build:
  number: 0
  skip: True  # [(osx or win) or py>35]
  script:
    # Create Makefile.local, third_party comes from conda-packages.
    - make third_party
    - make -j${CPU_COUNT} ortoolslibs
    - make -j${CPU_COUNT} python
    - make pypi_archive
    - cd temp-python*/ortools
    - python setup.py install --single-version-externally-managed --record record.txt || bash
    # Copy Headers and Protobuf files to ${PREFIX}/include/ortools

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cpp') }}
    - {{ compiler('fortran') }}
    - autoconf 2.69
    - automake 1.15
    - bison 3.0.*
    - cmake
    - coincbc 2.9.*
    - curl
    - flex 2.6.*
    - gcc
    - gflags 2.1.*
    - git
    - help2man 1.47.*
    - libtool 2.4.*
    - pcre 8.*
    - python
    - protobuf 3.0.*
    - setuptools
    - sparsehash 2.0.*
    - swig 3.0.*
    - texinfo
    - texlive-core
    - unzip

  run:
    - coincbc 2.9.*
    - gflags 2.1.*
    - pcre 8.*
    - protobuf 3.0.*
    - python
    - sparsehash 2.0.*

test:
  imports:
    - ortools
    - ortools.algorithms
    - ortools.constraint_solver
    - ortools.graph
    - ortools.linear_solver

about:
  home: https://developers.google.com/optimization/
  license: Apache 2.0
  license_family: Apache
  license_file: LICENSE-2.0.txt
  summary: 'Google Optimization Tools is a fast and portable software suite for solving combinatorial optimization problems'

  description: |
  doc_url: https://developers.google.com/optimization/introduction/using
  dev_url: https://github.com/google/or-tools

extra:
  recipe-maintainers:
    - sodre
