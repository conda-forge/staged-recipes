{% set name = "triflow" %}
{% set version = "0.5.2" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "9af5c299c5a73b2f7d3d3e4dc264b5b810f026276c27e725ba8fcd71ae2aecd8" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  noarch: python
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  build:
    - pip

  host:
    - python>=3.5
    - numpy >=1.0.0.0,<2.0.0.0
    - scipy >=1.0.0.0,<2.0.0.0
    - sympy >=1.0.0.0,<2.0.0.0
    - theano >=1.0.0.0,<2.0.0.0
    - streamz >=0.3.0.0,<0.4.0.0
    - xarray >=0.10.0.0,<0.11.0.0
    - holoviews >=1.1.0.0,<2.0.0.0
    - bokeh >=0.12.0.0,<0.13.0.0
    - path.py >=11.0.0.0,<12.0.0.0
    - pendulum >=1.5.0.0,<2.0.0.0
    - dask >=0.17.2.0,<0.18.0.0
    - tqdm >=4.23.0.0,<5.0.0.0

  run:
    - python>=3.5
    - numpy >=1.0.0.0,<2.0.0.0
    - scipy >=1.0.0.0,<2.0.0.0
    - sympy >=1.0.0.0,<2.0.0.0
    - theano >=1.0.0.0,<2.0.0.0
    - streamz >=0.3.0.0,<0.4.0.0
    - xarray >=0.10.0.0,<0.11.0.0
    - holoviews >=1.1.0.0,<2.0.0.0
    - bokeh >=0.12.0.0,<0.13.0.0
    - path.py >=11.0.0.0,<12.0.0.0
    - pendulum >=1.5.0.0,<2.0.0.0
    - dask >=0.17.2.0,<0.18.0.0
    - tqdm >=4.23.0.0,<5.0.0.0

test:
  imports:
    - triflow
    - triflow.core
    - triflow.plugins

about:
  home: https://locie.github.io/triflow/
  license: MIT
  license_family: MIT
  summary: Automatic finite difference discretization for 1D PDE with fast temporal solvers.
  description: "The aim of this library is to have a (relatively) easy way to write transient dynamic systems with 1D finite difference discretisation, with fast temporal solvers.

The main two parts of the library are:

    symbolic tools defining the spatial discretisation, with boundary taking into account in a separated part
    a fast temporal solver written in order to use the sparsity of the finite difference method to reduce the memory and CPU usage during the solving

Moreover, extra tools are provided and the library is written in a modular way, allowing an easy extension of these different parts (see the plug-in module of the library.) The library fits well with an interactive usage (in a jupyter notebook)."
  doc_url: 'https://locie.github.io/triflow/doc.html'
  dev_url: 'https://github.com/locie/triflow'

extra:
  recipe-maintainers:
    - celliern
