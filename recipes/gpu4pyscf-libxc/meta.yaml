# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "gpu4pyscf-libxc" %}
{% set version = "1.0.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}


source:
  url: https://github.com/pyscf/gpu4pyscf/archive/refs/tags/v{{ version }}.tar.gz

build:
  script:
  - cmake -S gpu4pyscf/lib -B build/temp.gpu4pyscf-libxc -DBUILD_DFTD3=OFF -DBUILD_DFTD4=OFF
  - cmake --build build/temp.gpu4pyscf-libxc -j 4
  - mkdir -p build/lib.gpu4pyscf-libxc/gpu4pyscf/lib/deps/lib
  - cp gpu4pyscf/lib/deps/lib/libxc.so build/lib.gpu4pyscf-libxc/gpu4pyscf/lib/deps/lib/
  - {{ PYTHON }} builder/setup_libxc.py bdist_wheel
  - {{ PYTHON }} builder/setup_libxc.py install
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - make
    - cuda-toolkit
  host:
    - python
    - pip
    - cuda-toolkit
  run:
    - python
    - openblas
test:
  skip: true
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/pyscf/gpu4pyscf
  summary: "A separated module from GPU4PySCF"
  description: |
    CUDA libxc with modification for GPU4PySCF.

  license: "GPL-3.0-only, MPL-2.0"
  license_family: "Other"
  license_file: "LICENSE"

extra:
  recipe-maintainers:
    - wxj6000
