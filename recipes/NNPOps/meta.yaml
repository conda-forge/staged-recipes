{% set name = "nnpops" %}
{% set version = "0.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/openmm/NNPOps/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 0d770b1b6d48a6d76e6dce9b3da996da27a3767e6a0548bb5921d49c65adb635

build:
  skip: true  # [(not linux) or (cuda_compiler_version in (undefined, 'None'))]
  number: 0
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux64]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
    - sysroot_linux-64  2.17  # [linux64]
    - make
    - cmake
  host:
    - python 
    - pytorch 1.10.0
    - pytorch =*=*cuda*
    - torchani
    - mdtraj
    - pytest
  run:
    - python
    - {{ pin_compatible("pytorch", max_pin="x.x.x") }}
    - pytorch =*=*cuda*
    - torchani

test:
  imports:
    - NNPOps
    - NNPOps.OptimizedTorchANI

about:
  home: https://github.com/openmm/NNPOps
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: "High performance implementations of operations used in Neural Network Potentials"

extra:
  recipe-maintainers:
    - mikemhenry
