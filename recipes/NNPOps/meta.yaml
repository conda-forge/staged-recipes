{% set name = "nnpops" %}
{% set version = "0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/openmm/NNPOps/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 64eb48e4a2a642f5e951fe368c46bd41402ce68a89f2f56189728b4f551cbe9d

build:
  skip: true  # [not linux]
  skip: true  # [cuda_compiler_version == "None"]
  number: 0
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux64 or ppc64le]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
    - make
    - cmake
  host:
    - python 
    - pytorch-gpu {{ pytorch_version }}  # [cuda_compiler_version not in (undefined, 'None')]
    - torchani
    - mdtraj
  run:
    - python 
    - pytorch
    - {{ pin_compatible('pytorch-gpu', max_pin='x.x.x') }}  # [cuda_compiler_version not in (undefined, 'None')]
    - torchani
    - mdtraj

test:
  imports:
    - NNPOps

about:
  home: https://github.com/openmm/NNPOps
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: "High performance implementations of operations used in Neural Network Potentials"

extra:
  recipe-maintainers:
    - jchodera
    - mikemhenry
    - ijpulidos
    - peastman 
    - raimis
