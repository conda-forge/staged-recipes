schema_version: 1

context:
  name: "spatula"
  version: "0.1.1"
  python_min: "3.10"

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://github.com/glotzerlab/${{ name }}/releases/download/v${{ version }}/${{ name }}-${{ version }}.tar.gz
  sha256: 8280057dd5950f5412d0d4c0e4d1116edddb93f1fe56975257b07726e0eeac5e

build:
  script: python -m pip install . --ignore-installed --no-cache-dir --no-deps -vv
  number: 0

requirements:
  build:
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - cmake
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - scikit-build-core
    - if: unix
      then:
        - make
  host:
    - python
    - pip
    - scikit-build-core
    - pybind11
    - numpy
  run:
    - python
    - ${{ pin_compatible('numpy') }}
    - scipy
    - freud >=3.0.0,!=3.2.0

tests:
  - files:
      source:
        - tests/
    requirements:
      run:
        - pytest
        - pytest-rerunfailures
        - coxeter
    script:
      - if: unix
        then:
          - python -m pytest tests/ -v --pg-first --skip-boosop
      - if: win
        then:
          - >-
            powershell -NoProfile -ExecutionPolicy Bypass -Command "& {
              $ErrorActionPreference='Continue';
              $PSNativeCommandUseErrorActionPreference=$false;
              $xmlPath = Join-Path (Get-Location) 'pytest-report.xml';
              python -m pytest tests/ -v --pg-first --skip-boosop --junitxml $xmlPath;
              $code = $LASTEXITCODE;
              if ($code -eq 0) { exit 0 };
              if (Test-Path -LiteralPath $xmlPath) {
                [xml]$j = Get-Content -LiteralPath $xmlPath -ErrorAction Stop;
                $suites = @(); if ($j.testsuite) { $suites=@($j.testsuite) } elseif ($j.testsuites){ $suites=@($j.testsuites.testsuite) };
                $fails = ($suites | % { [int]$_.failures } | Measure-Object -Sum).Sum;
                $errs  = ($suites | % { [int]$_.errors }   | Measure-Object -Sum).Sum;
                $tests = ($suites | % { [int]$_.tests }    | Measure-Object -Sum).Sum;
                if ($tests -gt 0 -and $fails -eq 0 -and $errs -eq 0) { exit 0 };
              };
              exit $code
            }"

about:
  homepage: https://glotzerlab.engin.umich.edu
  license: BSD-3-Clause
  license_file: LICENSE
  summary: Python package for calculation of symmetry based order parameters in molecular simulation systems.
  description: |
    SPATULA (Symmetry Pattern Analysis Toolkit for Understanding Local Arrangements) is a
    Python package for computing the continuous symmetry ordering of the neighbors of a
    point in space. In general, this is to compute the local ordering of particles (molecules)
    in simulations or experiments over time. The package serves as an extension of 
    `freud <https://github.com/glotzerlab/freud>`__ with a new order parameters.
  documentation: https://spatula.readthedocs.io/
  repository: https://github.com/glotzerlab/spatula

extra:
  recipe-maintainers:
    - DomFijan
    - joaander
    - janbridley
