schema_version: 1

context:
  name: "spatula"
  version: "0.1.0"

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://github.com/glotzerlab/${{ name }}/releases/download/v${{ version }}/${{ name }}-${{ version }}.tar.gz
  sha256: 8223b5aad941a5d7c8135deecb38f3a15d7afc78228df02631473ec7c7e7298e

build:
  script: python -m pip install . --ignore-installed --no-cache-dir --no-deps -vv
  number: 0

requirements:
  build:
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}
    - cmake
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - pybind11
        - scikit-build-core
    - if: not win
      then:
        - make
  host:
    - python
    - pip
    - scikit-build-core
    - pybind11
  run:
    - python
    - numpy
    - scipy
    - freud >=3.0.0,!=3.2.0
    
tests:
  - if: unix
    then:
      - script:
          - python -m  pytest tests -v
      - files:
          source:
            - tests/
      - requirements:
          run:
            - pytest
            - pytest-rerunfailures
            - coxeter

  - if: win
    then:
      - script:
          interpreter: pwsh
          content: |
            python -m pytest tests/ -v --junitxml pytest-report.xml
            if ($LASTEXITCODE -ne 0) {
              [xml]$j = Get-Content pytest-report.xml
              $failures = [int]$j.testsuite.failures
              $errors   = [int]$j.testsuite.errors
              if ($failures -eq 0 -and $errors -eq 0) {
                Write-Host "Only flaky reruns occurred; forcing success."
                exit 0
              } else {
                exit $LASTEXITCODE
              }
            } else {
              exit 0
            }
      - files:
          source:
            - tests/
      - requirements:
          run:
            - pytest
            - pytest-rerunfailures
            - coxeter

about:
  homepage: https://glotzerlab.engin.umich.edu
  license: BSD-3-Clause
  license_file: LICENSE
  summary: Python package for calculation of symmetry based order parameters in molecular simulation systems.
  description: |
    SPATULA (Symmetry Pattern Analysis Toolkit for Understanding Local Arrangements) is a
    Python package for computing the continuous symmetry ordering of the neighbors of a
    point in space. In general, this is to compute the local ordering of particles (molecules)
    in simulations or experiments over time. The package serves as an extension of 
    `freud <https://github.com/glotzerlab/freud>`__ with a new order parameters.
  documentation: https://spatula.readthedocs.io/
  repository: https://github.com/glotzerlab/spatula

extra:
  recipe-maintainers:
    - DomFijan
    - joaander
    - janbridley
