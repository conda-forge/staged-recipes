{% set name = "meshpy" %}
{% set uname = "MeshPy" %}
{% set version = "2016.1" %}
{% set sha256 = "a9e80c1f23f6a6cdc66f8f62ea63dc273664f357d25e572bc5edf5f9b22af7d9" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ uname }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ uname[0] }}/{{ uname }}/{{ uname }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record record.txt && cd test && python -m pytest

requirements:
  build:
    - python
    - setuptools
    - pytools
    - numpy
    - six
  run:
    - python
    - setuptools
    - pytools
    - numpy
    - six

test:
  requires:
    - pytest
  imports:
    - meshpy

about:
  home: http://github.com/inducer/meshpy
  license: MIT and Proprietary
  license_file: doc/misc.rst
  summary: 'Triangular and Tetrahedral Mesh Generator'

  description: |

    MeshPy offers quality triangular and tetrahedral mesh generation for
    Python. Meshes of this type are chiefly used in finite-element
    simulation codes, but also have many other applications ranging from
    computer graphics to robotics.

    In order to generate 2D and 3D meshes, MeshPy provides Python interfaces
    to three well-regarded mesh generators,
    [Triangle](http://www.cs.cmu.edu/~quake/triangle.html) by J. Shewchuk,
    [TetGen](http://tetgen.berlios.de/) by Hang Si, and
    [gmsh](http://www.geuz.org/gmsh/) by Christophe Geuzaine and
    Jean-Francois Remacle. The former two are included in the package in
    slightly modified versions. A generic mesh reader for the latter is
    included, as is an easy way to run gmsh from a Python script.

    As of Version 0.91.2, MeshPy also works with Python 3.

  doc_url: https://documen.tician.de/meshpy
  dev_url: https://github.com/inducer/meshpy

extra:
  recipe-maintainers:
    - inducer
