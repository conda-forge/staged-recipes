context:
  name: pgadmin4-python-cli
  version: "9.3"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  - url: https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v${{ version }}/source/pgadmin4-${{ version }}.tar.gz
    sha256: fbeae20038e2bd256e2b9b3a83e65f87b87030ba1b64ba38a15f27ca3e63b681

build:
  number: 0
  script: echo "Nothing to install"
  python:
    entry_points:
      - pgadmin4 = pgadmin4.pgAdmin4:main
      - pgadmin4-cli = pgadmin4.setup:main

requirements:
  host:
    - pgadmin4-python ==${{ version }}
    - python
  run:
    - pgadmin4-python ==${{ version }}
    - python

tests:
  - package_contents:
      bin:
        - pgadmin4
        - pgadmin4-cli
  # Running 'pgadmin4 --help' will await for a Ctrl+C to exit, so calling it with a python script
  - script:
      - cd testing
      - if: unix
        then: PGADMIN_PATH=$(python -c "import importlib.util, os; spec = importlib.util.find_spec('pgadmin4'); print(os.path.dirname(spec.origin) if spec else 'MODULE_NOT_FOUND')")
        else: for /f "tokens=*" %%i in ('python -c "import importlib.util, os; spec = importlib.util.find_spec(''pgadmin4''); print(os.path.dirname(spec.origin) if spec else ''MODULE_NOT_FOUND'')"') do set PGADMIN_PATH=%%i
      - cp config_local.py "$PGADMIN_PATH"
      - python run_simple_pgadmin4.py
    requirements: { run: [python] }
    files: { recipe: [testing/] }

about:
  homepage: https://github.com/pgadmin-org/pgadmin4
  summary: 'pgAdmin 4 is a rewrite of the popular pgAdmin3 management tool for the PostgreSQL'
  description: |
    pgAdmin is the most popular and feature rich Open Source administration and
    development platform for PostgreSQL, the most advanced Open Source database in the world.
  license: PostgreSQL
  license_file:
    - LICENSE
  documentation: https://www.pgadmin.org/
  repository: https://github.com/pgadmin-org/pgadmin4

extra:
  recipe-maintainers:
    - MementoRC
