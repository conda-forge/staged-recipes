{% set name = "giotto-ph" %}
{% set version = "0.2.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/giotto-ai/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 05969979f500c420e8fa10e4653c99a1beb0d5311d64439012ba416f6a346080

build:
  skip: True  # [py<37]
  number: 0
  script: |
    here=$(pwd)
    cd .. && mkdir tmp_dir_for_clone && cd tmp_dir_for_clone
    git clone --branch v{{ version }} --depth 1 https://github.com/giotto-ai/{{ name }}.git && cd {{ name }}
    git submodule update --init --recursive
    cp -a gph/ext/. "$here"/gph/ext/
    cd "$here"
    {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - git
    - {{ compiler('cxx') }}
    - make
    - cmake
  host:
    - python
    - pip
  run:
    - python
    - numpy >=1.19.1
    - scipy >=1.5.0
    - scikit-learn >=0.23.1

test:
  imports:
    - gph
  requires:
    - pip
    - pytest
    - hypothesis
  commands:
    - pip check
    - pytest -v gph/python/test

about:
  home: https://github.com/giotto-ai/{{ name }}
  summary: 'High performance implementation of Vietoris-Rips persistence'
  description: |
    giotto-ph is a high-performance implementation of Vietorisâ€“Rips (VR) persistence on the CPU,
    and is distributed under the GNU AGPLv3 license. It consists of an improved reimplementation
    of Morozov and Nigmetov's "lock-free Ripser" and in addition makes use of a parallel
    implementation of the apparent pairs optimization used in Ripser v1.2. It also contains a
    reimplementation of GUDHI's Edge Collapse (EC) algorithm and offers support for weighted
    VR filtrations. See also Morozov's Ripser fork, Nigmetov's Oineus library, and GUDHI's EC
    implementation.
  license: AGPL-3.0-only
  license_file: LICENSE
  doc_url: https://giotto-ai.github.io/{{ name }}
  dev_url: https://github.com/giotto-ai/{{ name }}

extra:
  recipe-maintainers:
    - MonkeyBreaker
    - ulupo
