From 3698c130d4ca7ebd83343c051f7ebfbbf6feb7dc Mon Sep 17 00:00:00 2001
From: Daniel Ching <dching@nvidia.com>
Date: Tue, 4 Feb 2025 13:06:52 -0600
Subject: [PATCH 2/2] BLD: Use only dynamic (shared library) links to CUDA
 targets

---
 cmake/Dependencies.cmake           | 6 +++---
 extensions/nvjpeg/CMakeLists.txt   | 6 +++---
 extensions/nvjpeg2k/CMakeLists.txt | 2 +-
 extensions/nvtiff/CMakeLists.txt   | 4 ++--
 python/CMakeLists.txt              | 8 ++++----
 src/CMakeLists.txt                 | 2 +-
 test/CMakeLists.txt                | 6 +++---
 7 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/cmake/Dependencies.cmake b/cmake/Dependencies.cmake
index 2f3881b..7592026 100644
--- a/cmake/Dependencies.cmake
+++ b/cmake/Dependencies.cmake
@@ -48,7 +48,7 @@ include_directories(SYSTEM ${PROJECT_SOURCE_DIR}/external/dlpack/include)
 # Linking with static nvjpeg2k until there is a python package for it
 if (BUILD_NVJPEG2K_EXT)
     if (NOT WITH_DYNAMIC_NVJPEG2K)
-        CUDA_find_library(NVJPEG2K_LIBRARY nvjpeg2k_static)
+        CUDA_find_library(NVJPEG2K_LIBRARY nvjpeg2k)
         if (${NVJPEG2K_LIBRARY} STREQUAL "NVJPEG2K_LIBRARY-NOTFOUND")
             message(WARNING "nvjpeg2k not found - disabled")
             set(BUILD_NVJPEG2K_EXT OFF CACHE BOOL INTERNAL)
@@ -93,7 +93,7 @@ if (BUILD_NVTIFF_EXT)
         FetchContent_Declare(
             nvtiff_headers
             URL      https://developer.download.nvidia.com/compute/nvtiff/redist/libnvtiff/linux-x86_64/libnvtiff-linux-x86_64-0.4.0.62_cuda12-archive.tar.xz
-            URL_HASH SHA512=3084976ec3ace4f08f8ef98d9c4ade89162501ead16e06b201a601e0f1fd82842469b7dec76aecc20b4847a689c9177ce97870eb8a31fb672089a27dfb2fce04 
+            URL_HASH SHA512=3084976ec3ace4f08f8ef98d9c4ade89162501ead16e06b201a601e0f1fd82842469b7dec76aecc20b4847a689c9177ce97870eb8a31fb672089a27dfb2fce04
         )
         FetchContent_Populate(nvtiff_headers)
         set(nvtiff_SEARCH_PATH "${nvtiff_headers_SOURCE_DIR}/include")
@@ -105,7 +105,7 @@ if (BUILD_NVTIFF_EXT)
                 ${nvtiff_SEARCH_PATH}
         )
     else()
-        find_library(NVTIFF_LIB nvtiff_static PATH_SUFFIXES lib lib64)
+        find_library(NVTIFF_LIB nvtiff PATH_SUFFIXES lib lib64)
         if(NOT NVTIFF_LIB)
             message(WARNING, "nvTIFF library not found. Disabling its extensions and tests build.")
             set(BUILD_NVTIFF_EXT OFF CACHE BOOL INTERNAL)
diff --git a/extensions/nvjpeg/CMakeLists.txt b/extensions/nvjpeg/CMakeLists.txt
index d1b90b7..5162700 100644
--- a/extensions/nvjpeg/CMakeLists.txt
+++ b/extensions/nvjpeg/CMakeLists.txt
@@ -66,14 +66,14 @@ endif()
 if(NOT WITH_DYNAMIC_NVJPEG)
   if(UNIX)
     target_link_libraries(${EXT_LIBRARY_NAME}
-      PUBLIC CUDA::cudart_static CUDA::nvjpeg_static CUDA::culibos)
+      PUBLIC CUDA::cudart CUDA::nvjpeg CUDA::culibos)
   else()
     target_link_libraries(${EXT_LIBRARY_NAME}
-      PUBLIC CUDA::cudart_static CUDA::nvjpeg)
+      PUBLIC CUDA::cudart CUDA::nvjpeg)
   endif()
 else()
   target_link_libraries(${EXT_LIBRARY_NAME}
-    PRIVATE CUDA::cudart_static dynlink_nvjpeg)
+    PRIVATE CUDA::cudart dynlink_nvjpeg)
   target_link_libraries(${EXT_LIBRARY_NAME}
     PRIVATE "-Wl,--exclude-libs,$<TARGET_FILE_NAME:dynlink_nvjpeg>")
 endif()
diff --git a/extensions/nvjpeg2k/CMakeLists.txt b/extensions/nvjpeg2k/CMakeLists.txt
index a231c58..4e82e15 100644
--- a/extensions/nvjpeg2k/CMakeLists.txt
+++ b/extensions/nvjpeg2k/CMakeLists.txt
@@ -45,7 +45,7 @@ else()
 endif()
 
 target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC
-  CUDA::cudart_static)
+  CUDA::cudart)
 
 if(UNIX)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -fvisibility=hidden -Wl,--exclude-libs,ALL")
diff --git a/extensions/nvtiff/CMakeLists.txt b/extensions/nvtiff/CMakeLists.txt
index cd4d353..0d36c53 100644
--- a/extensions/nvtiff/CMakeLists.txt
+++ b/extensions/nvtiff/CMakeLists.txt
@@ -40,7 +40,7 @@ endif()
 
 if(NOT WITH_DYNAMIC_NVJPEG)
   if(UNIX)
-    target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC CUDA::nvjpeg_static CUDA::culibos)
+    target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC CUDA::nvjpeg CUDA::culibos)
   else()
     target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC CUDA::nvjpeg)
   endif()
@@ -49,7 +49,7 @@ else()
   target_link_libraries(${EXT_LIBRARY_NAME} PRIVATE "-Wl,--exclude-libs,$<TARGET_FILE_NAME:dynlink_nvjpeg>")
 endif()
 
-target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC CUDA::cudart_static)
+target_link_libraries(${EXT_LIBRARY_NAME} PUBLIC CUDA::cudart)
 
 if (UNIX)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fPIC -fvisibility=hidden -Wl,--exclude-libs,ALL")
diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 7f5925f..f037ae5 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -69,7 +69,7 @@ build_per_python_lib(nvimgcodec_python
     OUTPUT_NAME nvimgcodec_impl
     OUTPUT_DIR ${PY_NVIMGCODEC_IMPL_OUTPUT_DIR}
     PUBLIC_LIBS nvimgcodec
-    PRIV_LIBS CUDA::cudart_static ${CUDA_DRIVER_LIB} $<TARGET_OBJECTS:nvimgcodec_imgproc_static>
+    PRIV_LIBS CUDA::cudart ${CUDA_DRIVER_LIB} $<TARGET_OBJECTS:nvimgcodec_imgproc_static>
     SRC ${PY_NVIMGCODEC_SRCS})
 
 # Setup wheel depependencies
@@ -89,8 +89,8 @@ else()
     set(EXTRAS_REQUIRE "{
         'nvjpeg': [ 'nvidia-nvjpeg-cu${CUDA_VERSION_MAJOR}'],
         'nvjpeg2k': [ 'nvidia-nvjpeg2k-cu${CUDA_VERSION_MAJOR}'],
-        'nvtiff': [ 
-            'nvidia-nvtiff-cu${CUDA_VERSION_MAJOR}', 
+        'nvtiff': [
+            'nvidia-nvtiff-cu${CUDA_VERSION_MAJOR}',
             'nvidia-nvcomp-cu${CUDA_VERSION_MAJOR}'
         ],
         'all': [
@@ -161,7 +161,7 @@ if(NVIMGCODEC_COPY_LIBS_TO_PYTHON_DIR)
         add_custom_command(
             TARGET copy_libs_to_python_dir
             COMMAND copy "${PROJECT_BINARY_DIR}\\src\\${CMAKE_BUILD_TYPE}\\nvimgcodec_0.dll" "${CMAKE_CURRENT_BINARY_DIR}\\nvidia\\nvimgcodec" &&
-            copy "${PROJECT_BINARY_DIR}\\python\\${CMAKE_BUILD_TYPE}\\*.pyd" "${CMAKE_CURRENT_BINARY_DIR}\\nvidia\\nvimgcodec" && 
+            copy "${PROJECT_BINARY_DIR}\\python\\${CMAKE_BUILD_TYPE}\\*.pyd" "${CMAKE_CURRENT_BINARY_DIR}\\nvidia\\nvimgcodec" &&
             for /r  "${PROJECT_BINARY_DIR}\\extensions" %%f in \(*.dll\) do xcopy "%%f" "${CMAKE_CURRENT_BINARY_DIR}\\nvidia\\nvimgcodec\\extensions\\" /Y &&
             xcopy "${PROJECT_SOURCE_DIR}\\include\\*.*" "${CMAKE_CURRENT_BINARY_DIR}\\nvidia\\nvimgcodec\\include\\" /S /Y )
     endif()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 9558804..5f7c3ec 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -76,7 +76,7 @@ else()
     set(CUDA_DRIVER_LIB CUDA::cuda_driver)
 endif()
 
-target_link_libraries(${NVIMGCODEC_LIBRARY_NAME} PRIVATE CUDA::cudart_static ${CUDA_DRIVER_LIB})
+target_link_libraries(${NVIMGCODEC_LIBRARY_NAME} PRIVATE CUDA::cudart ${CUDA_DRIVER_LIB})
 
 if(UNIX)
     # CXX flags
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 5f0de3b..6cc9f74 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -122,7 +122,7 @@ foreach(testapp nvimgcodec_tests)
     if (WITH_DYNAMIC_NVJPEG)
         list(APPEND TARGET_LIBS dynlink_nvjpeg)
     else()
-        list(APPEND TARGET_LIBS CUDA::nvjpeg_static)
+        list(APPEND TARGET_LIBS CUDA::nvjpeg)
     endif()
 
     if (BUILD_NVJPEG2K_EXT)
@@ -144,7 +144,7 @@ foreach(testapp nvimgcodec_tests)
         list(APPEND TARGET_LIBS libtiff_ext_static)
         #TODO On Windows linking with OpenCV_LIBRARIES already takes tiff library
         if (NOT WIN32)
-            list(APPEND TARGET_LIBS ${TIFF_LIBRARY})
+            list(APPEND TARGET_LIBS ${TIFF_LIBRARIES})
         endif()
         list(APPEND TARGET_LIBS ${JPEG_LIBRARY})
         list(APPEND TARGET_LIBS ${ZLIB_LIBRARY})
@@ -175,7 +175,7 @@ foreach(testapp nvimgcodec_tests)
     target_link_libraries(${testapp} PUBLIC
         ${TARGET_LIBS}
         ${OpenCV_LIBRARIES}
-        CUDA::cudart_static
+        CUDA::cudart
         CUDA::cuda_driver
         gtest
         gmock
-- 
2.34.1

