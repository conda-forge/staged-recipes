{% set version = "4.0.0" %}

{% set clang_variant = os.environ.get('CLANG_VARIANT', 'flang') %}
{% set flang_clang_commit = "6414fd12146644d6fdaacafc9b2b9e0c01381899" %}
{% set build_number = "git_" + flang_clang_commit[:7] + "_0" %}

package:
  name: clangdev
  version: {{ version }}

source:
  url: https://github.com/isuruf/clang/archive/{{ flang_clang_commit }}.tar.gz
  patches:
    # https://github.com/pocl/pocl/issues/1
    - clang-4.0-opencl-calling-conv.patch
    - disable-libxml2-detection.patch  # [linux]

{% if clang_variant == "cling" %}
    - cling-patches/0001-Empty-the-C-DtorLists-once-emitted.patch
    - cling-patches/0002-Allow-multiple-setting-of-pragma-handler-for-same-id.patch
    - cling-patches/0003-Temporary-parsers-should-not-manipulate-global-parse.patch
    - cling-patches/0004-Only-reset-extra-parsers-if-not-temporary.patch
    - cling-patches/0005-Let-autoload-act-on-fwd-declares.patch
    - cling-patches/0006-Do-not-reset-TUScope-for-incremental-processing.patch
    - cling-patches/0007-Do-not-complain-about-invalid-sources-for-PCH-files.patch
    - cling-patches/0008-Add-support-for-Mageia-Linux.patch
    - cling-patches/0009-Make-clang-Parse-RAIIObjectsForParser.h-public.patch
    - cling-patches/0010-Forward-to-new-location.patch
    - cling-patches/0011-Add-RAII-for-Parser-TemplateIds.patch
    - cling-patches/0012-Extend-SubstTemplateTypeParmType-to-support-non-cano.patch
    - cling-patches/0013-From-me-and-Cristina-Fix-removal-of-out-of-line-defi.patch
    - cling-patches/0014-Remove-macro-and-print-macro.patch
    - cling-patches/0015-Don-t-try-to-remove-decls-that-are-not-part-of-the-l.patch
    - cling-patches/0016-Do-not-remove-decls-from-the-lookup-if-they-don-t-ex.patch
    - cling-patches/0017-Find-an-easier-way-of-accessing-CodeGenModule-intern.patch
    - cling-patches/0018-From-Vassil-add-debug-printout-of-ModuleBuilder-data.patch
    - cling-patches/0019-Cleanup-cached-constant-.str-from-codegen.patch
    - cling-patches/0020-Implement-FileManager-uncaching.patch
    - cling-patches/0021-Adapt-the-user-of-invalidateCache-to-its-new-signatu.patch
    - cling-patches/0022-Mark-the-file-entry-invalid-until-reread.-Invalidate.patch
    - cling-patches/0023-In-cases-of-nested-parsing-at-execution-time-sometim.patch
    - cling-patches/0024-Implement-soft-reset-of-the-diagnostics-engine.patch
    - cling-patches/0025-Access-sema-internals-and-revert-the-list-of-unused-.patch
    - cling-patches/0026-Propagate-cache-flags-from-LookupFile-to-FileManager.patch
    - cling-patches/0027-Do-not-try-to-re-read-non-existent-files.patch
    - cling-patches/0028-Pass-the-OpenFile-flag-also-to-DirectoryLookup.patch
    - cling-patches/0029-Merge-Ctors-from-nested-transactions.patch
    - cling-patches/0030-SrcMan-can-happen-for-Locs-from-the-command-line.patch
    - cling-patches/0031-Make-sure-the-inode-did-not-get-updated-since-we-rea.patch
    - cling-patches/0032-More-RAIIs-for-autoloading.patch
    - cling-patches/0033-Fix-cling-teardown-issues-when-a-pch-is-attached.-Ku.patch
    - cling-patches/0034-Use-raw-string-literals-to-correctly-stringify-and-i.patch
    - cling-patches/0035-Accessor-to-is-file-opened-this-is-crucial-info-for-.patch
    - cling-patches/0036-Buffer-the-pending-instantiations-in-case-or-recursi.patch
    - cling-patches/0037-Also-store-Parser-paren-numbers-likely-fixes-ROOT-69.patch
    - cling-patches/0038-Allow-switching-of-CodeGen-llvm-Module.patch
    - cling-patches/0039-Avoid-dupe-llvm.ident-operands.patch
    - cling-patches/0040-Hand-over-deferred-objects-to-the-new-CGModule-fixes.patch
    - cling-patches/0041-CGModule-can-have-pending-WeakRefReferences-carry-ov.patch
    - cling-patches/0042-Survive-pragma-once-from-virtual-file.patch
    - cling-patches/0043-Provide-possibly-updated-CodegenOpts-to-StartModule.patch
    - cling-patches/0044-Clear-pending-decls-from-Builder-in-case-of-errors-R.patch
    - cling-patches/0045-Add-ASTConsumer-HandleInvalidTagDeclDefinition.patch
    - cling-patches/0046-Fix-ROOT-7775-by-making-all-static-init-function-nam.patch
    - cling-patches/0047-Inject-DeclUnloader-as-a-friend.patch
    - cling-patches/0048-Do-not-load-the-source-file-just-to-get-an-irrelevan.patch
    - cling-patches/0049-Construct-DestroyTemplateIdAnnotationsRAIIObj-given-.patch
    - cling-patches/0050-FIXUP-merge-mistake-in-lib-Lex-HeaderSearch.cpp.patch
    - cling-patches/0051-FIXUP-2-merge-mistake-in-lib-Lex-HeaderSearch.cpp.patch
    - cling-patches/0052-Tab-completion-filtering.patch
    - cling-patches/0053-Keep-track-of-emitted-deferred-decls-in-case-cling-n.patch
    - cling-patches/0054-Forget-Decls-by-removing-them-from-the-DeferredDecls.patch
    - cling-patches/0055-Keep-the-collection-of-EmittedDeferredDecls-for-subs.patch
    - cling-patches/0056-Track-previously-deferred-emitted-symbol-put-back-as.patch
    - cling-patches/0057-CLING-Move-cling-DeclUnloader-and-ParserStateRAII-in.patch
    - cling-patches/0058-Fix-assertion-when-removing-decls-coming-from-a-pch-.patch
{% endif %}

build:
  number: {{ build_number }}
  string: {{ clang_variant }}_{{ build_number  }}
  skip: true  # [py<36]
  skip: true  # [not win64]

{% if clang_variant == "cling" %}
  features:
    - cling
    - vc14    # [win and py36]
{% else %}
  features:   # [win and py36]
    - vc14    # [win and py36]
{% endif %}

requirements:
  build:
    - toolchain
    - cmake >=3.4.3

    # Needed to unpack the source tarball
    - m2-xz  # [py27 and win32]
    - m2w64-xz  # [py27 and win64]

    - system  # [linux and not armv7l]

    # "compiling .pyc files" fails without this:
    - python

    - llvmdev =={{ version }}
    - libxml2 2.9.*
{% if clang_variant == "cling" %}
    - cling-patches
{% endif %}

  run:
    - system  # [linux and not armv7l]
    - llvmdev =={{ version }}
    - libxml2 2.9.*
    - vs2015_runtime  # [win]

test:
  requires:
    - python {{ environ['PY_VER'] + '*' }}  # [win]
    - cmake >=3.4.3
{% if clang_variant == "cling" %}
    - cling-patches
{% endif %}
  files:
    - mytest.c
  commands:
    - $PREFIX/bin/clang --version  # [unix]
    - $PREFIX/bin/clang++ --version  # [unix]
    - $PREFIX/bin/clang-check --version  # [unix]

    - $PREFIX/bin/clang -v -c mytest.c      # [unix]
    - "%LIBRARY_BIN%/clang -v -c mytest.c"  # [win]

    - if not exist %LIBRARY_INC%\\clang\\Lex\\Lexer.h exit 1  # [win]
    - test -f $PREFIX/include/clang/Lex/Lexer.h      # [unix]
    - test -f $PREFIX/lib/libclangBasic.a            # [unix]

about:
  home: http://llvm.org/
  license: NCSA
  license_file: LICENSE.TXT
  summary: Development headers and libraries for Clang

extra:
  recipe-maintainers:
    - inducer
    - jakirkham
    - mattwala
    - SylvainCorlay
