{% set name = "omicron-gap" %}
{% set version = "0.0.48" %}
{% set python_min = "3.10" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/omicron_gap-{{ version }}.tar.gz
  sha256: d8a70dafb04c7f79d62823ac896f22d65aa0acca3a23a9eed2551683b8ce073e

build:
  entry_points:
    - omicron-batch-merge-dir = omicron_gap.batch_merge_dir:main
    - omicron-channel-check = omicron_gap.omicron_channel_check:main
    - omicron-clean-logs = omicron_gap.clean_logs:main
    - omicron-compare-dirs = omicron_gap.compare_dirs:main
    - omicron-dqseg-print = omicron_gap.dqseg_print:main
    - omicron-find-gaps = omicron_gap.find_gaps:main
    - omicron-gaps = omicron_gap.gap_handler:main
    - omicron-gap-analysis = omicron_gap.gap_analysis:main
    - omicron-gap-plot-animator = omicron_gap.gap_plot_animator:main
    - omicron-log-scanner = omicron_gap.pyomicron_log_scanner:main
    - omicron-logfile-backup = omicron_gap.logfile_backup:main
    - omicron-merge-days = omicron_gap.merge_metric_days:main
    - omicron-metric-day-merge = omicron_gap.metric_day_merge:main
    - omicron-plot-gaps = omicron_gap.gap_plotter:main
    - omicron-plot-log-scrapper = omicron_gap.plot_log_scrapings:main
    - omicron-segfile-print = omicron_gap.seg_txt_print:main
    - omicron-subdag-create = omicron_gap.gap_subdag_create:main
    - omicron-latency-plot = omicron_gap.framelatency:main
    - omicron-trigger-plot = omicron_gap.trigger_plot:main
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - python {{ python_min }}
    - setuptools >=60
    - setuptools-scm >=3.4
    - wheel
    - pip
  run:
    - python >={{ python_min }},<3.12
    - dqsegdb2
    - gwdatafind >=1.1.0
    - ligo-segments >=1.0.0
    - ligotimegps >=1.2.1
    - gwpy >=3.0.7
    - matplotlib-base >=3.3.0
    - numpy
    - astropy
    - python-dateutil
    - pytz
    - gpstime
    - gwtrigfind
    - pyomicron
    - ja-webutils
    - omicron_utils

test:
  imports:
    - omicron_gap
  commands:
    - pip check
    - omicron-batch-merge-dir --help
    - omicron-channel-check --help
    - omicron-clean-logs --help
    - omicron-compare-dirs --help
    - omicron-dqseg-print --help
    - omicron-find-gaps --help
    - omicron-gaps --help
    - omicron-gap-analysis --help
    - omicron-gap-plot-animator --help
    - omicron-log-scanner --help
    - omicron-logfile-backup --help
    - omicron-merge-days --help
    - omicron-metric-day-merge --help
    - omicron-plot-gaps --help
    - omicron-plot-log-scrapper --help
    - omicron-segfile-print --help
    - omicron-subdag-create --help
    - omicron-latency-plot --help
    - omicron-trigger-plot --help
  requires:
    - pip

about:
  home: https://detchar.docs.ligo.org/omicron-gap/
  dev_url: https://git.ligo.org/detchar/omicron-gap
  summary: Utilities to analyze and fill gaps in omicron triggers
  license: GPL-3.0-only
  license_file: LICENSE
  description:
    A collection of programs to analyze gaps in omicron triggers where the detector is in 
    an analyzable state, and data exists but triggers do not. These ggaps are plotted and htCondor jobs
    created to fill them.

extra:
  recipe-maintainers:
    - areeda
