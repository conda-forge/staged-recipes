# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "wgms3d" %}
{% set version = "2.0" %}
{% set variant = "openblas" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

# source:
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive: 
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  # sha256: d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

source:
    fn: wgms3d-{{ version }}.tar.gz
    url: http://www.soundtracker.org/raw/wgms3d/wgms3d-{{ version }}.tar.gz
    sha256: c68b1b868d84d3351622ec5b4df5b6af1e0ac916


# build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # script: "{{ PYTHON }} -m pip install . -vv"

build:
  number: 200
  skip: True  # [win]
  features:
    - blas_{{ variant }}

requirements:
  build:
    - blas 1.1 {{ variant }}
    - openblas 0.2.19|0.2.19.*
    - cmake
    - gcc  # [not win]
  run:
    - blas 1.1 {{ variant }}
    - openblas 0.2.19|0.2.19.*
    - libgcc  # [linux]
    - libgfortran  # [osx]

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python

# test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  # imports:
  #   - simplejson
  #   - simplejson.tests

about:
  home: https://github.com/smartalecH/wgms3d
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: GPL
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: GPL
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE.txt
  summary: 'wgms3d - a full-vectorial finite-difference mode solver.'

  # The remaining entries in this section are optional, but recommended.
  description: |
      wgms3d - a full-vectorial finite-difference mode solver.
  doc_url: http://www.soundtracker.org/raw/wgms3d/installation.html
  dev_url:  http://www.soundtracker.org/raw/wgms3d/installation.html

extra:
  recipe-maintainers:
    - joaquin
