# TODO: adhere to conda-forge versioning for prebuilds or ask for build
{% set version = "0.1.0.alpha.1.29.ge26dafba" %}

package:
  name: datoviz
  version: {{ version }}

source:
  git_url: https://github.com/datoviz/datoviz.git
  git_rev: e26dafba0bb7b9b7cee3ee0224020c90b2fd060a
  patches:
    - 0001-Use-prebuild-cglm-and-glfw3.patch
    - 0002-install-the-library.patch
    # https://github.com/datoviz/datoviz/pull/55
    - 55.patch
    # Make ipython an optional dependency
    # https://github.com/datoviz/datoviz/pull/56
    - 56.patch
    # https://github.com/datoviz/datoviz/pull/58
    - 58.patch

build:
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # THese CDTs seem only useful for the demo files... maybe we can disable them
    - {{ cdt('mesa-libgl-devel') }}      # [linux]
    - {{ cdt('mesa-libegl-devel') }}     # [linux]
    - {{ cdt('mesa-dri-drivers') }}      # [linux]
    - {{ cdt('libdrm-devel') }}          # [linux]
    - {{ cdt('libglvnd-glx') }}          # [linux]
    - {{ cdt('libglvnd-egl') }}          # [linux]
    - cmake
    - make                                   # [unix]
    - sysroot_linux-64 2.17                  # [linux]
    - python                                 # [build_platform != target_platform]
    - cython 0.*                             # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - tqdm                                   # [build_platform != target_platform]
    - pyparsing                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
  host:
    - python
    - pip
    - cython 0.*
    - numpy
    - pyparsing
    - tqdm
    - zlib
    - libpng
    # Specify lgpl version of ffmpeg so that there are
    # no quesitons about the license of the resulting opencv
    # binary
    - ffmpeg
    - ffmpeg *=lgpl_*
    - libvulkan-headers
    - libvulkan-loader
    - spirv-tools
    - cglm
    - glslang
    - shaderc
    - glfw
  run:
    - python
    - libvulkan-loader
    - {{ pin_compatible('numpy') }}
    - imageio
    - colorcet

test:
  requires:
    - pip
  imports:
    - datoviz
  commands:
    - pip check

about:
  home: https://github.com/datoviz/datoviz
  summary: GPU interactive scientific data visualization with Vulkan
  license: MIT
  license_family: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - hmaarrfk
