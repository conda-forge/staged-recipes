{% set name = "natu" %}
{% set version = "0.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: c9302d52d3c01a75c18ba74d80ab9dc2ede9bb159a5c014641da16c0d754f7cc

build:
  noarch: python
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  host:
    - python
    - pip
  run:
    - python

test:
  imports:
    - natu

about:
  home: http://kdavies4.github.io/natu/index.html
  license: BSD
  license_family: BSD
  license_file: LICENSE.txt
  summary: 'Natural units in Python'
  description: |
    natu is a free, open-source package to represent physical quantities. 
    There are many Python packages that deal with units and quantities, but natu is uniquely
    system-independent. The units are derived from physical constants with adjustable values
    and dimensions. The value of a unit is factored into a quantity so that the quantity is
    not "in" any particular unit. This has the following advantages:
        Flexible: Different unit systems, including natural units (hence the name "natu"),
        can be represented by simply adjusting the base physical constants.
        Simple: Unit conversion is inherent. This results in quick computations and a small code
        base (about 1500 lines). By default, dimensions and display units are tracked to catch
        errors and for string formatting. This can be disabled to nearly eliminate the
        computational overhead while still providing the core features.
        Intuitive: Each unit is a fixed quantity that is treated as a mathematical entity.
        A variable quantity is expressed as the product of a number and a unit.
        Representative: The design reflects the way modern units are defined. Standards
        organizations such as NIST assign values to universal physical constants so that
        the values of units can be determined by physical experiments instead of prototypes.
        Scalable: The values of the base physical constants can scaled to prevent exponent
        overflow, regardless of the units used.
  dev_url: https://github.com/kdavies4/natu

extra:
  recipe-maintainers:
    - johnflavin
