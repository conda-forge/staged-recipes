{% set oot_name = "latency" %}
{% set name = "gnuradio-" + oot_name %}
{% set version = "1.0.2" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/ant-uni-bremen/gr-latency/archive/refs/tags/v{{ version }}.tar.gz
  sha256: fc7775e710d8d781177e289f9ec45d2c2f8b91c5b648e1df2c58520e70ba8f86

build:
  # skip: True  # [win]
  number: 0

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - cmake >=3.16
    - git
    - ninja
    - pkg-config  # [not win]
    # cross-compilation requirements
    - python                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - numpy                               # [build_platform != target_platform]
    - pybind11                            # [build_platform != target_platform]
    # Add extra build tool dependencies here

  host:
    - python
    - numpy >=1.22
    - fmt
    - spdlog
    - pybind11
    - gmp  # [not win]
    - fftw
    - volk >=2.5
    - gmp  # [linux]
    # the following two entries are for generating builds against specific GR versions
    - gnuradio-core  # [not gnuradio_extra_pin]
    - gnuradio-core {{ gnuradio_extra_pin }}.*  # [gnuradio_extra_pin]
    - pip  # [win]

  run:
    - python

test:
  commands:
    # Add a list of commands to run to check that the package works. Examples below.

    ## verify that commands run
    #- COMMAND --help

    # verify that (some) headers get installed
    # This would resemble the GR 3.10 structure. We didn't adopt that structure yet.
    # - test -f $PREFIX/include/gnuradio/{{ oot_name }}/api.h  # [not win]
    # - if not exist %PREFIX%\\Library\\include\\gnuradio\\{{ oot_name }}\\api.h exit 1  # [win]

    - test -f $PREFIX/include/{{ oot_name }}/api.h  # [not win]
    - if not exist %PREFIX%\\Library\\include\\{{ oot_name }}\\api.h exit 1  # [win]

    ## verify that libraries get installed
    #- test -f $PREFIX/lib/lib{{ name }}${SHLIB_EXT}  # [not win]
    #- if not exist %PREFIX%\\Library\\bin\\{{ name }}.dll exit 1  # [win]
    #- if not exist %PREFIX%\\Library\\lib\\{{ name }}.lib exit 1  # [win]

    ## verify that (some) GRC blocks get installed
    #{% set blocks = ["LIST", "OF", "GRC", "BLOCK", "NAMES"] %}
    #{% for block in blocks %}
    #- test -f $PREFIX/share/gnuradio/grc/blocks/{{ block }}.block.yml  # [not win]
    #- if not exist %PREFIX%\\Library\\share\\gnuradio\\grc\\blocks\\{{ block }}.block.yml exit 1  # [win]
    #{% endfor %}

  imports:
    # verify that the python module imports
    # - gnuradio.{{ oot_name }}
    - latency

about:
  home: https://github.com/ant-uni-bremen/gr-latency
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: GNU Radio OOT module to measure in-flowgraph latencies
  doc_url: https://github.com/ant-uni-bremen/gr-latency
  dev_url: https://github.com/ant-uni-bremen/gr-latency

extra:
  recipe-maintainers:
    - jdemel
