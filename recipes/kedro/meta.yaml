# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "kedro" %}
{% set version = "0.15.9" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below. Use releases if available:
  # url: https://github.com/quantumblacklabs/kedro/releases/download/{{ version }}/kedro-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  url: https://github.com/quantumblacklabs/kedro/archive/{{ version }}.tar.gz
  # curl -sL <url> | openssl sha256
  sha256: b9a1aef1f6a5aba91e8726bcc85d746f8966fcb12dd466b506890e76326d3357

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"
  skip: True  # [py<35]

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - kedro
    - kedro.tests

about:
  home: https://github.com/quantumblacklabs/kedro
  license: Apache 2.0
  license_file: LICENSE.md
  summary: 'A Python library that implements software engineering best-practice for data and ML pipelines.'

  # The remaining entries in this section are optional, but recommended.
  description: |
    Kedro is a development workflow framework that implements
    software engineering best-practice for data pipelines
    with an eye towards productionising machine learning models.
  doc_url: https://kedro.readthedocs.io/
  dev_url: https://github.com/quantumblacklabs/kedro

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - lorenabalan
    - yetudada
    - idanov
