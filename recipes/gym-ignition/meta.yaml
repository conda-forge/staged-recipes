{% set name = "gym-ignition-split" %}
{% set version = "1.3.0.post0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://github.com/robotology/gym-ignition/archive/refs/tags/v{{ version }}.tar.gz
  # sha256: 6ae47711b0941f47030c1e9b7821d1259aa7e622d07914a261f1470d41d1524c
  git_url: https://github.com/robotology/gym-ignition.git
  git_rev: feature/conda-forge

build:
  number: 1

outputs:

  - name: libscenario
    script: build_libscenario.sh  # [unix]
    build:
      skip: true  # [win]
      # Note: run_exports does not work in the subpackages of the same recipe
      #       https://github.com/conda/conda-build/issues/3478
      run_exports:
        - {{ pin_subpackage("libscenario", max_pin="x.x") }}
    requirements:
      build:
        - cmake
        - ninja
        - pkg-config
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - {{ cdt("mesa-libgl-devel") }}  # [linux]
        - sed  # [unix]
        - diffutils  # [unix]
        - m2-sed  # [win]
        - m2-diffutils  # [win]
      host:
        - eigen
        - idyntree
        - libignition-gazebo6
      run:
        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]
        # Require idyntree x.x since idyntree-feedstock just requires x
        - {{ pin_compatible('idyntree', max_pin="x.x") }}
        # These should be exported by Ignition
        - {{ pin_compatible('libignition-common4') }}
        - {{ pin_compatible('libignition-fuel-tools7') }}
        - {{ pin_compatible('libignition-math6') }}
        - {{ pin_compatible('libignition-msgs8') }}
        - {{ pin_compatible('libignition-physics5') }}
        - {{ pin_compatible('libignition-plugin1') }}
        - {{ pin_compatible('libignition-transport11') }}
        - {{ pin_compatible('libsdformat12') }}
        # Not sure why conda render just pins x instead of x.x like libprotobuf-feedstock.
        # Maybe because there's no explicit protobuf in host.
        - {{ pin_compatible('libprotobuf', max_pin="x.x") }}
    test:
      commands:
        - test -f ${PREFIX}/lib/libGazeboSimulator.so  # [linux]
        - test -f ${PREFIX}/lib/libGazeboSimulator.dylib  # [osx]
        - test -f ${PREFIX}/lib/cmake/Scenario/ScenarioConfig.cmake  # [unix]
        - test -f ${PREFIX}/lib/cmake/ScenarioGazebo/ScenarioGazeboConfig.cmake  # [unix]

  - name: scenariopy
    script: build_scenariopy.sh  # [unix]
    build:
      skip: true  # [win or py<38]
    requirements:
      build:
        - cmake
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - ninja
        - pkg-config
        - swig
        # https://conda-forge.org/docs/maintainer/knowledge_base.html#libgl
        # Should these be handled by the Ignition Gazebo recipe? 
        # Without them, CMake fails with: Failed to find "GL/gl.h".
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libselinux') }}  # [linux]
        - {{ cdt('libxdamage') }}  # [linux]
        - {{ cdt('libxxf86vm') }}  # [linux]
        - {{ cdt('libxext') }}     # [linux]
      host:
        - build
        - cmake-build-extension
        - idyntree
        - libignition-gazebo6
        - pip
        - python
        # https://conda-forge.org/docs/maintainer/knowledge_base.html#libgl
        - xorg-libxfixes  # [linux]
        # Here just to make DSO happy, it is a run-only requirement
        - {{ pin_subpackage("libscenario", exact=True) }}
      run:
        # Require idyntree x.x since idyntree-feedstock just requires x
        - {{ pin_compatible('idyntree', max_pin="x.x") }}
        # Manually specify the run_exports of libscenario since they are not
        # applied to subpackages of the same recipe
        # https://github.com/conda/conda-build/issues/3478
        # Here we also need to pin an exact version and not just a compatible one
        - {{ pin_subpackage("libscenario", exact=True) }}
        - packaging
        - python
    test:
      imports:
        - scenario
      commands:
        - pip check
        - test $(pip list | grep scenario | tr -s " " | grep $PKG_VERSION | wc -l) -eq 1  # [unix]
      requires:
        - pip

#  - name: scenario
#    script: build_scenario.sh  # [unix]
#    build:
#      run_exports:
#        - {{ pin_subpackage("scenario", max_pin="x.x") }}
#    requirements:
#      run:
#        - {{ pin_subpackage("scenariopy", exact=True) }}
#        - {{ pin_subpackage("libscenario", exact=True) }}
#    test:
#      imports:
#        - scenario
#      commands:
#        - pip check
#        - test -f ${PREFIX}/lib/libGazeboSimulator.so  # [linux]
#        - test -f ${PREFIX}/lib/libGazeboSimulator.dylib  # [osx]
#        - test -f ${PREFIX}/lib/cmake/Scenario/ScenarioConfig.cmake  # [unix]
#        - test -f ${PREFIX}/lib/cmake/ScenarioGazebo/ScenarioGazeboConfig.cmake  # [unix]
#      requires:
#        - pip

  - name: gym-ignition
    script: build_gym_ignition.sh  # [unix]
    build:
      skip: true  # [win or py<38]
      noarch: python
    requirements:
      host:
        - pip
        - python
      run:
        - gym
        - gym-ignition-models
        - idyntree
        - lxml
        - numpy
        - python
        - {{ pin_subpackage("scenariopy", max_pin="x.x") }}
        - scipy
    test:
      source_files:
        - tests
        - setup.cfg
      imports:
        - gym_ignition
      commands:
        # - pip check (needs idyntree installed with pip during conda build)
        - test $(pip list | grep gym-ignition | tr -s " " | grep $PKG_VERSION | wc -l) -eq 1  # [unix]
        - sed -i "s|def test_angular_acceleration|def _test_angular_acceleration|g" tests/test_scenario/test_link_velocities.py
        - pytest
      requires:
        - pip
        - pytest
        - pytest-icdiff

about:
  home: https://github.com/robotology/gym-ignition
  summary: A toolkit for developing OpenAI Gym environments simulated with Ignition Gazebo.
  dev_url: https://github.com/robotology/gym-ignition
  license: LGPL-2.1-or-later
  license_file: LICENSE

extra:
  recipe-maintainers:
    - diegoferigo
