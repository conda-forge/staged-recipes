# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "bw_migrations" %}
{% set version = "0.2" %}
{% set sha256 = "229d99a820cbcf18854ce6a3870552e8feebb89b9342abbafaa1a6d95a57dff9" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    - python
    - setuptools

  run:
    - stats_arrays
    - python
    - pandas
    - bw2data

test:
  imports:
    - {{ name }}
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/brightway-lca/bw_migrations
  license: BSD-2-Clause
  license_file: LICENSE
  summary: 'Library for storing, validating, and calculating with parameters. Designed to work with the Brightway2 life cycle assessment framework, but is generic enough to work in other use cases.'
  license_family: BSD
  dev_url: https://github.com/brightway-lca/bw_migrations

extra:
  recipe-maintainers:
    - cmutel
    - michaelweinold

#@todo
# https://github.com/cmutel/conda-recipes/blob/master/bw_migrations/meta.yaml
# https://github.com/conda-forge/staged-recipes/pull/20016/files