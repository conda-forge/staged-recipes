{% set name = "elm-format" %}
{% set version = "0.8.2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: ef-{{ version }}.tar.gz  # [unix]
  url: https://github.com/avh4/elm-format/releases/download/{{ version }}/elm-format-{{ version }}-linux-x64.tgz  # [linux]
  sha256: a69a4d3c49ccb0dffb3067b35464dc492563274e5778c40625220f9f6b3fd06d  # [linux]

  url: https://github.com/avh4/elm-format/releases/download/{{ version }}/elm-format-{{ version }}-mac-x64.tgz  # [osx]
  sha256: 1f6cc8663922e546645c0536fc9bf7a49351d0b2963d26fc8fcb43e5bc92d733  # [osx]

  url: https://github.com/avh4/elm-format/releases/download/{{ version }}/elm-format-{{ version }}-win-i386.zip  # [win]
  sha256: 5009fd26b59a785738dd82c8d90ea8fd0bb7fe65fbd562097d906ee04061ef7f  # [win]

build:
  number: 0
  script: mkdir -p "${PREFIX}/bin" && cp elm-format "${PREFIX}/bin/elm-format"  # [unix]
  script: |                                                   # [win]
    if not exist %LIBRARY_BIN% mkdir %LIBRARY_BIN% || exit 1  # [win]
    copy elm-format.exe %LIBRARY_BIN% || exit 1               # [win]
  missing_dso_whitelist:  # [unix]
    - /lib64/libutil.so.1  # [linux]
    - /lib64/libpthread.so.0  # [linux]
    - /lib64/libc.so.6  # [linux]
    - /lib64/libm.so.6  # [linux]
    - /lib64/libdl.so.2  # [linux]
    - /lib64/librt.so.1  # [linux]
    - /usr/lib/libiconv.2.dylib  # [osx]
  rpaths:
    - x86_64-conda_cos6-linux-gnu/sysroot/lib/
    - ../lib/
    - lib/

requirements:
  host:
    - libgcc-ng  # [linux]
    - gmp  # [linux]
  run:
    - libgcc-ng  # [linux]
    - gmp  # [linux]
    - libiconv  # [osx]

test:
  commands:
    - elm-format --help

about:
  home: https://github.com/avh4/elm-format
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: 'Formats Elm source code according to the official Elm Style Guide'

extra:
  recipe-maintainers:
    - scopatz
