# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "txrm2tiff" %}
{% set version = "1.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive: 
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:

  host:
    - python
    - pip
    - numpy
    - scipy
  run:
    - python
    - numpy
    - tifffile >=2019.7.26
    - mrcfile >=1.1.2
    - numpy >=1.17.4
    - omexml-dls >=1.0.3
    - olefile >=0.46
    - scipy >=1.3.3
    - pywin32  # [win]

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - txrm2tiff
  commands:
    - txrm2tiff --version

about:
  home: https://github.com/simplejson/simplejson
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: 'Converts txrm/xrm files to OME tif/tiff files'

  # The remaining entries in this section are optional, but recommended.
  description: |
    Converts txrm/xrm files to OME tif/tiff files.
    txrm2tiff was created for users of beamline B24 of Diamond Light 
    Source by Thomas Fish. This has been adapted from B24's the automatic 
    processing pipeline. Parts of this code were originally written by 
    Kevin Savage, with further additions and amendments by Peter Chang, 
    Victoria Beilsten-Edmands, and Thomas Fish.
  doc_url: https://github.com/DiamondLightSource/txrm2tiff/blob/master/README.md
  dev_url: https://github.com/DiamondLightSource/txrm2tiff

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - thomasmfish
