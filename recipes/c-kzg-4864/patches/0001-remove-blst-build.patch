--- setup.py.orig  2024-07-19 14:52:16.008520276 -0500
+++ setup.py       2024-07-19 14:54:03.834496484 -0500
@@ -9,10 +9,5 @@
 class CustomBuild(build_ext):
-    def run(self):
-        if system() == "Windows":
-            try:
-                check_call(["blst\\build.bat"])
-            except Exception:
-                pass
-        check_call(["make", "-C", "src", "blst"])
-        super().run()
+    def finalize_options(self):
+        super().build_extensions()
+        self.compiler = "mingw32"

@@ -24,2 +19,19 @@

+    so = os.getenv('BLST_MAJOR_VERSION')
+
+    h_prefix = os.getenv('PREFIX')
+    h_prefix = os.path.join(h_prefix, "Library") if system() == "Windows" else h_prefix
+
+    b_prefix = os.getenv('BUILD_PREFIX')
+    b_prefix = os.path.join(b_prefix, "Library") if system() == "Windows" else b_prefix
+
+    for key, value in os.environ.items():
+        print(f"{key}: {value}") if key in ['CC', 'LD'] else None
+
+    blst = os.path.join(h_prefix, "bin", f"blst-{so}.dll") if system() == "Windows" else None
+    blst = os.path.join(h_prefix, "lib", f"libblst.so.{so}") if system() == "Linux" else blst
+    blst = os.path.join(h_prefix, "lib", f"libblst.{so}.dylib") if system() == "Darwin" else blst
+    blst = "blst" if blst is None else blst
+    print(f"Using {blst} as the blst library ({system()}).")
+
     setup(
@@ -38,5 +50,5 @@
                 sources=["bindings/python/ckzg_wrap.c", "src/ckzg.c"],
-                include_dirs=["inc", "src"],
-                library_dirs=["lib"],
-                libraries=["blst"]
+                include_dirs=["inc", "src", os.path.join(b_prefix, "include"), os.path.join(h_prefix, "include")],
+                library_dirs=["lib", os.path.join(b_prefix, "lib"), os.path.join(h_prefix, "lib")],
+                extra_objects=[blst],
             )
@@ -44,3 +56,3 @@
         cmdclass={
-            "build_ext": CustomBuild,
+            "build_ext": CustomBuild if system() == "Windows" else build_ext,
         }
