{% set name = "pymapdl" %}
{% set version = "0.60.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/pyansys/pymapdl/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 3a18544d4233e5bfca1589d4b99855c15817e82cc22148947ddb4783ce41cd8e
build:
  number: 0
  # skip: True  # [py<36]
  noarch: python
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  # build:
  #   # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
  #   # Compilers are named 'c', 'cxx' and 'fortran'.
  #   - {{ compiler('cxx') }}
  host:
    - cython
    - numpy
    - python >=3.5
    - pip
  run:
    - python
    - pyvista >=0.32.0
    - appdirs >=1.4.0
    - matplotlib-base >=3.0.0
    - tqdm >=4.45.0
    - pyiges >=0.1.4
    - scipy >=1.3.0
    - grpcio >=1.30.0
    - ansys-api-mapdl-v0 ==0.4.1
    - ansys-mapdl-reader >=0.50.15
    - protobuf >=3.12.2
    - {{ pin_compatible('numpy') }}

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - ansys.mapdl.core
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/pyansys/pymapdl
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'Pythonic interface to MAPDL'
  description: |
    
    Overview
    --------
    
    The PyMAPDL project supports Pythonic access to MAPDL to be able to communicate with the MAPDL process directly from Python. 
    The latest ansys-mapdl-core package enables a more comprehensive interface with MAPDL and supports:
    
    * All the features of the original module (e.g. pythonic commands, interactive sessions).
    * Remote connections to MAPDL from anywhere via gRPC.
    * Direct access to MAPDL arrays, meshes, and geometry as Python objects.
    * Low level access to the MAPDL solver through APDL math in a scipy like interface.
    
    PyMAPDL works within Jupyter Notebooks, the standard Python console,
    or in batch mode on Windows, Linux, and even Mac OS.
    
    Documentation and Issues
    ------------------------
    
    See the `Documentation <https://mapdldocs.pyansys.com>`_ page for more
    details, and the `Examples gallery
    <https://mapdldocs.pyansys.com/examples/index.html>`_ for some
    examples.
    
    Please feel free to post issues and other questions at `PyMAPDL Issues
    <https://github.com/pyansys/pymapdl/issues>`_.  This is the best place
    to post questions and code.


  doc_url: https://mapdldocs.pyansys.com/
  dev_url: https://github.com/pyansys/pymapdl

extra:
  recipe-maintainers:
    - akaszynski
    - germa89
