set(MUTABLE_DIR "${CMAKE_CURRENT_BINARY_DIR}/_export_mutable")
file(MAKE_DIRECTORY ${MUTABLE_DIR})

set(EXPORT_MUTABLE_HEADERS)
set(EXPORT_MUTABLE_CCFILES)
set(EXPORT_MUTABLE_FILES)

foreach(FILE ${PROTO_GENERATED_FILES})
    file(RELATIVE_PATH REL_PATH ${CMAKE_CURRENT_BINARY_DIR}/_generated ${FILE})
    get_filename_component(REL_DIR ${REL_PATH} DIRECTORY)
    get_filename_component(FILE_NAME ${FILE} NAME)
    get_filename_component(FILE_EXT ${FILE} EXT)

    set(MUTABLE_FILE "${MUTABLE_DIR}/${REL_PATH}")
    list(APPEND EXPORT_MUTABLE_FILES "${MUTABLE_FILE}")

    if(FILE_EXT STREQUAL ".pb.h")
        list(APPEND EXPORT_MUTABLE_HEADERS "${MUTABLE_FILE}")
    elseif(FILE_EXT STREQUAL ".pb.cc")
        list(APPEND EXPORT_MUTABLE_CCFILES "${MUTABLE_FILE}")
    endif()

    # Create the directory structure
    file(MAKE_DIRECTORY "${MUTABLE_DIR}/${REL_DIR}")

    if(FILE_EXT STREQUAL ".pb.h")
        string(REGEX REPLACE "\\.pb\\.h$" ".proto.export.h" EXPORT_FILE ${FILE})
        add_custom_command(
            OUTPUT ${MUTABLE_FILE}
            COMMAND ${CMAKE_COMMAND}
                -D INPUT_FILES=${FILE}
                -D INSERTED_FILE="${EXPORT_FILE}"
                -D OUTPUT_DIR=${MUTABLE_DIR}/${REL_DIR}
                -D OPERATION=INSERT
                -P $ENV{RECIPE_DIR}/cmake/PrependAppendInsertFile.cmake
            DEPENDS ${FILE}
            # COMMENT "Appending ${EXPORT_FILE} to ${FILE}"
        )
    else()
        add_custom_command(
            OUTPUT ${MUTABLE_FILE}
            COMMAND ${CMAKE_COMMAND} -E copy ${FILE} ${MUTABLE_FILE}
            DEPENDS ${FILE}
            # COMMENT "Copying ${FILE} to ${MUTABLE_FILE}"
        )
    endif()
endforeach()

add_custom_target(generate_export_mutable_headers ALL DEPENDS ${EXPORT_MUTABLE_FILES})
list(GET EXPORT_MUTABLE_FILES 0 2 FIRST_THREE)
string(JOIN ", " FIRST_THREE_STR ${FIRST_THREE})
message(STATUS "Generated mutable headers: ${FIRST_THREE_STR}")
