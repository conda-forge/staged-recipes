From cbd4f8e13f5dbdee5919dfe8cb1357ad1cd88359 Mon Sep 17 00:00:00 2001
From: Ryan Volz <rvolz@mit.edu>
Date: Fri, 1 Nov 2019 10:32:24 -0400
Subject: [PATCH 2/4] python: Fix internal library name (incl. suffix) to match
 filename.

Instead of renaming the library file, this sets the suffix in CMake so
that the filename turns out as desired and also linker references know
the correct name.

python: Set python module suffix to conform with PEP 3149.

This adds the python implementation, major and minor version numbers,
and any additional flags (debug, pymalloc, wide unicode) to the
extension module suffix as specified in PEP 3149.

Hat tip to @isuruf:
https://github.com/conda-forge/staged-recipes/pull/10076#discussion_r348721448
---
 host/python/CMakeLists.txt | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff --git a/host/python/CMakeLists.txt b/host/python/CMakeLists.txt
index a19391d83..9fd6d40d3 100644
--- a/host/python/CMakeLists.txt
+++ b/host/python/CMakeLists.txt
@@ -23,6 +23,21 @@ execute_process(
 
 # Build pyuhd library
 add_library(pyuhd SHARED pyuhd.cpp)
+# python expects extension modules with a particular suffix
+if(WIN32)
+    set_target_properties(pyuhd PROPERTIES PREFIX "lib" SUFFIX ".pyd")
+else()
+    execute_process(
+        COMMAND "${PYTHON_EXECUTABLE}" -c
+        "from distutils.sysconfig import get_config_var; print(get_config_var('EXT_SUFFIX'))"
+        OUTPUT_VARIABLE PYTHON_EXTENSION_SUFFIX
+    )
+    string(STRIP ${PYTHON_EXTENSION_SUFFIX} PYTHON_EXTENSION_SUFFIX)
+    if(${PYTHON_EXTENSION_SUFFIX} STREQUAL "None")
+        set(PYTHON_EXTENSION_SUFFIX ${CMAKE_SHARED_MODULE_SUFFIX})
+    endif()
+    set_target_properties(pyuhd PROPERTIES PREFIX "lib" SUFFIX ${PYTHON_EXTENSION_SUFFIX})
+endif(WIN32)
 target_include_directories(pyuhd PUBLIC
     ${PYTHON_NUMPY_INCLUDE_DIR}
     ${CMAKE_SOURCE_DIR}/lib
@@ -30,14 +45,8 @@ target_include_directories(pyuhd PUBLIC
 
 target_link_libraries(pyuhd ${BOOST_PYTHON_LIBRARY} ${Boost_LIBRARIES} ${PYTHON_LIBRARY} uhd)
 # Copy pyuhd library to the staging directory
-if(WIN32)
-    set(PYUHD_LIBRARY_NAME libpyuhd.pyd)
-else()
-    set(PYUHD_LIBRARY_NAME libpyuhd${CMAKE_SHARED_MODULE_SUFFIX})
-endif(WIN32)
-
 add_custom_command(TARGET pyuhd
-    POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:pyuhd> ${CMAKE_CURRENT_BINARY_DIR}/uhd/${PYUHD_LIBRARY_NAME})
+    POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:pyuhd> ${CMAKE_CURRENT_BINARY_DIR}/uhd/$<TARGET_FILE_NAME:pyuhd>)
 
 set(PYUHD_FILES
   ${CMAKE_CURRENT_SOURCE_DIR}/__init__.py
-- 
2.20.1

