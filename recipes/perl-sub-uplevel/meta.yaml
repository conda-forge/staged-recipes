{% set author = "DAGOLDEN" %}
{% set name = "Sub-Uplevel" %}
{% set version = "0.2800" %}
{% set sha256 = "b4f3f63b80f680a421332d8851ddbe5a8e72fcaa74d5d1d98f3c8cc4a3ece293" %}

package:
  name: perl-{{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: http://cpan.metacpan.org/authors/id/{{ author[0] }}/{{ author[:2] }}/{{ author }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [ win ]
  script: perl Makefile.PL && make && make test && make install 

requirements:
  build:
    - perl
    - make
  run:
    - perl

test:
  commands:
    - perl -e 'use {{ name|replace("-","::") }}'

about:
  home: https://metacpan.org/release/Sub-Uplevel
  license: Artistic-2.0
  license_file: LICENSE
  summary: 'Apparently run a function in a higher stack frame'

  description: |
    Like Tcl's uplevel() function, but not quite so dangerous. 
    The idea is just to fool caller(). All the really naughty 
    bits of Tcl's uplevel() are avoided.
  doc_url: https://metacpan.org/pod/Sub::Uplevel
  dev_url: https://github.com/Perl-Toolchain-Gang/Sub-Uplevel

extra:
  recipe-maintainers:
    - pvanheus
