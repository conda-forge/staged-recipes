{% set name = "libsecp256k1" %}
{% set version = "0.4.0" %}
{% set headers = [
      "secp256k1.h",
      "secp256k1_preallocated.h",
      "secp256k1_ecdh.h",
      "secp256k1_recovery.h",
      "secp256k1_extrakeys.h",
      "secp256k1_schnorrsig.h",
      "secp256k1_ellswift.h"] %}
{% set sha256 = "d7c956606e7f52b7703fd2967cb31d2e21ec90c0b440ff1cc7c7d764a4092b98" %}

package:
  name: {{ name }}-headers
  version: {{ version }}

source:
  url: https://github.com/bitcoin-core/secp256k1/archive/refs/tags/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - 0001_update_pc.in.patch
    - 0002_update_src_cmake_for_staticlib.patch
    - 0003_update_cmake_for_staticlib.patch
    - 0004_create_pkgconfig_function.patch

build:
  noarch: generic
  number: 100

requirements:
  host:
    - {{ compiler('c') }}
    - make
    - cmake >=3.26
test:
  requires:
    - pip
    # - python
  commands:
    - pip check

    # Headers
    {% for header in headers %}
    - test -f ${PREFIX}/include/{{ header }}  # [unix]
    - if not exist %LIBRARY_INC%\\{{ header }} exit 1  # [win]
    {% endfor %}

about:
  home: https://github.com/bitcoin-core/secp256k1
  summary: 'Optimized C library for ECDSA signatures and secret/public key operations on curve secp256k1.'
  description: |
    This library is intended to be the highest quality publicly available 
    library for cryptography on the secp256k1 curve. However, the primary 
    focus of its development has been for usage in the Bitcoin system and 
    usage unlike Bitcoin's may be less well tested, verified, or suffer 
    from a less well thought out interface. Correct usage requires some 
    care and consideration that the library is fit for your application's purpose.
  license: MIT
  license_file: LICENSE.txt

extra:
  recipe-maintainers:
    - https://github.com/MementoRC
