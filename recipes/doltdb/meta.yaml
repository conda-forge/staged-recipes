{% set version = "1.44.4" %}
package:
  name: doltdb
  version: {{ version }}

source:
  url: https://github.com/dolthub/dolt/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 072095258207036928e9908ecb071f71af71ca3e6760d1ea1cfd815b21188ecb

build:
  number: 0
  script:
    - set GOPATH=%cd/go%  # [win]
    - set GOBIN=%PREFIX%/bin  # [win]
    - cd ${SRC_DIR}/go  # [not win]
    - cd %SRC_DIR%/go  # [win]
    - go install ./cmd/dolt
    - go install ./utils/remotesrv

requirements:
  build:
    - {{ compiler("go") }}
    - {{ compiler("c") }}  # [not win]
    - {{ stdlib("c") }}  # [not win]
    - {{ compiler("m2w64_c") }}  # [win]
    - {{ stdlib("m2w64_c") }}  # [win]
    - diffutils  # [not win]

test:
  commands:
    - dolt version

about:
  home: https://github.com/dolthub/dolt
  summary: 'Dolt â€“ Git for Data'
  description: |
    Dolt is a SQL database that you can fork, clone, branch, merge, push and pull just like a Git repository. Connect to Dolt just like any MySQL database to read or modify schema and data. Version control functionality is exposed in SQL via system tables, functions, and procedures. Or, use the Git-like command line interface to import CSV files, commit your changes, push them to a remote, or merge your teammate's changes. All the commands you know for Git work exactly the same for Dolt. Git versions files. Dolt versions tables. It's like Git and MySQL had a baby
  license: Apache-2.0
  license_file: LICENSE

extra:
  recipe-maintainers:
    - weatherhead99
