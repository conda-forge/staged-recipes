# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "simplejson" %}
{% set version = "3.8.2" %}

package:
  name: {{ icontract }}
  version: {{ 2.5.3 }}

source:
  url: https://github.com/Parquery/icontract/archive/refs/tags/v2.5.3.tar.gz
  sha256: feaa3dee0249bfa0c8c845c7bbc264d2008066fa251ba63909aded9bcb5b39fc

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - icontract
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://pypi.org/project/icontract/
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  summary: 'Simple, fast, extensible JSON encoder/decoder for Python'
  doc_url: https://icontract.readthedocs.io/
  dev_url: https://github.com/Parquery/icontract

extra:
  recipe-maintainers:
    - kklein
