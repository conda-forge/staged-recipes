diff --git a/CMakeLists.txt b/CMakeLists.txt
index 81bdd6b..996beef 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -35,8 +35,20 @@ endif()
 ##############################################################################
 # HDF5
 ##############################################################################
-find_package(HDF5 1.8.0)
-include_directories(${HDF5_INCLUDE_DIR})
+
+# http://t3hmikez0r.com/2014/07/11/cmake-and-hdf5-revisited/
+# back up any user-defined HDF5_DIR setting
+set(_SAVED_HDF5_DIR ${HDF5_DIR})
+# First look for hdf5-config.cmake in defined locations.
+# This file is generated by HDF5 team and is likely more up to date than FindHDF5.cmake included in CMake.
+FIND_PACKAGE(HDF5 1.8.0 NO_MODULE)
+IF(NOT HDF5_FOUND)
+    # didn't find hdf5-config.cmake. Need to fall back on CMake's built-in FindHDF5.cmake logic.
+    # required says we fail if it isn't found.
+    # Restore the value reset by the previous call to 'find_package(HDF5 NO_MODULE)'
+    set(HDF5_DIR ${_SAVED_HDF5_DIR} CACHE PATH "HDF5 install dir" FORCE)
+    FIND_PACKAGE(HDF5 1.8.0)
+ENDIF()
 
 ##############################################################################
 # Gurobi
@@ -120,10 +132,14 @@ if(COMPILER_SUPPORTS_CXX0X OR COMPILER_SUPPORTS_CXX11)
     add_test(test-graph-multicut-greedy-additive test-graph-multicut-greedy-additive)
 
     if(HDF5_FOUND)
-        include_directories(PUBLIC ${HDF5_INCLUDE_DIRS})
         add_executable(test-hdf5 src/andres/graph/unit-test/hdf5.cxx ${headers})
-        target_link_libraries(test-hdf5 ${HDF5_LIBRARIES})
-        add_test(test-hdf5 test-hdf5)
+        if(TARGET hdf5-shared)
+            target_link_libraries(test-hdf5 hdf5-shared)
+        else()
+            target_link_libraries(test-hdf5 ${HDF5_LIBRARIES})
+            target_include_directories(test-hdf5 PRIVATE ${HDF5_INCLUDE_DIRS})
+            add_test(test-hdf5 test-hdf5)
+        endif()
     endif()
 endif(COMPILER_SUPPORTS_CXX0X OR COMPILER_SUPPORTS_CXX11)
 
@@ -157,23 +173,58 @@ if((COMPILER_SUPPORTS_CXX0X OR COMPILER_SUPPORTS_CXX11) AND HDF5_FOUND)
     add_test(test-probabilistic-lifting test-probabilistic-lifting)
 
     add_executable(lift-mp src/command-line-tools/lift-mp.cxx ${headers})
-    target_link_libraries(lift-mp ${HDF5_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(lift-mp hdf5-shared)
+    else()
+        target_link_libraries(lift-mp ${HDF5_LIBRARIES})
+        target_include_directories(lift-mp PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(lift-mp-grid-graph src/command-line-tools/lift-mp-grid-graph.cxx ${headers})
-    target_link_libraries(lift-mp-grid-graph ${HDF5_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(lift-mp-grid-graph hdf5-shared)
+    else()
+        target_link_libraries(lift-mp-grid-graph ${HDF5_LIBRARIES})
+        target_include_directories(lift-mp-grid-graph PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(solve-mp src/command-line-tools/solve-mp.cxx ${headers})
-    target_link_libraries(solve-mp ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(solve-mp hdf5-shared ${GUROBI_LIBRARIES})
+    else()
+        target_link_libraries(solve-mp ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+        target_include_directories(solve-mp PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(solve-mp-complete-graph src/command-line-tools/solve-mp-complete-graph.cxx ${headers})
-    target_link_libraries(solve-mp-complete-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(solve-mp-complete-graph hdf5-shared ${GUROBI_LIBRARIES})
+    else()
+        target_link_libraries(solve-mp-complete-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+        target_include_directories(solve-mp-complete-graph PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(solve-mp-grid-graph src/command-line-tools/solve-mp-grid-graph.cxx ${headers})
-    target_link_libraries(solve-mp-grid-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(solve-mp-grid-graph hdf5-shared ${GUROBI_LIBRARIES})
+    else()
+        target_link_libraries(solve-mp-grid-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+        target_include_directories(solve-mp-grid-graph PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(solve-lmp src/command-line-tools/solve-lmp.cxx ${headers})
-    target_link_libraries(solve-lmp ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+    if(TARGET hdf5-shared)
+        target_link_libraries(solve-lmp hdf5-shared ${GUROBI_LIBRARIES})
+    else()
+        target_link_libraries(solve-lmp ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+        target_include_directories(solve-lmp PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
 
     add_executable(solve-lmp-grid-graph src/command-line-tools/solve-lmp-grid-graph.cxx ${headers})
-    target_link_libraries(solve-lmp-grid-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
-endif()
\ No newline at end of file
+    if(TARGET hdf5-shared)
+        target_link_libraries(solve-lmp-grid-graph hdf5-shared ${GUROBI_LIBRARIES})
+    else()
+        target_link_libraries(solve-lmp-grid-graph ${HDF5_LIBRARIES} ${GUROBI_LIBRARIES})
+        target_include_directories(solve-lmp-grid-graph PRIVATE ${HDF5_INCLUDE_DIRS})
+    endif()
+endif()
