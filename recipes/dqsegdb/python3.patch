diff --git a/bin/ligolw_arbitrary_publish_generation.py b/bin/ligolw_arbitrary_publish_generation.py
index 5e3452e..4950986 100755
--- a/bin/ligolw_arbitrary_publish_generation.py
+++ b/bin/ligolw_arbitrary_publish_generation.py
@@ -289,13 +289,13 @@ for i in times: #cmds:
     node.add_var_arg(str(time2))
     dag.add_node(node)
 
-print "Writing dag file:"
-print dag.get_dag_file()
+print("Writing dag file:")
+print(dag.get_dag_file())
 dag.write_dag()
 #print "Writing sub file:"
 #print dag.get_sub_file()
 #print dag.get_jobs()
 dag.write_sub_files()
 
-print "Executable and DAG created, please run dag by submitting:"
-print "condor_submit_dag "+run_dir+'s6publish.dag'
+print("Executable and DAG created, please run dag by submitting:")
+print("condor_submit_dag "+run_dir+'s6publish.dag')
diff --git a/bin/ligolw_segment_insert_dqsegdb b/bin/ligolw_segment_insert_dqsegdb
index 8b5d0b7..0a3c43f 100755
--- a/bin/ligolw_segment_insert_dqsegdb
+++ b/bin/ligolw_segment_insert_dqsegdb
@@ -14,6 +14,8 @@
 # You should have received a copy of the GNU Affero General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+from __future__ import print_function
+
 ###################################################################
 import socket
 import os
diff --git a/dqsegdb/urifunctions.py b/dqsegdb/urifunctions.py
index 760385a..bf9dea7 100644
--- a/dqsegdb/urifunctions.py
+++ b/dqsegdb/urifunctions.py
@@ -67,7 +67,7 @@ def getDataHttplib(url):
     r1=conn.getresponse()
     if r1.status!=200:
         warn("Return status code: %s, %s; URL=%s" % (str(r1.status),str(r1.reason),url))
-        raise(urllib2.URLError)
+        raise urllib2.URLError
     data1=r1.read()
     return data1
 
@@ -93,7 +93,7 @@ def getDataUrllib2(url,timeout=900,logger=None,warnings=True):
         else:
             #print("attempting to send http query")
             output=urllib2.urlopen(url)
-    except urllib2.HTTPError,e:
+    except urllib2.HTTPError as e:
         #print("Warnings setting FIX:")
         #print(warnings)
         if warnings:
@@ -112,7 +112,7 @@ def getDataUrllib2(url,timeout=900,logger=None,warnings=True):
         ##print(url)
         #print("May be handled cleanly by calling instance: otherwise will result in an error.")
         raise
-    except urllib2.URLError,e:
+    except urllib2.URLError as e:
         #print(e.read())
         warn("Issue accesing url: %s; Reason: %s" % (url,str(e.reason)))
         try:
@@ -255,7 +255,7 @@ def putDataUrllib2(url,payload,timeout=900,logger=None):
         logger.debug("Beginning url call: %s" % url)
     try:
         urlreturned = opener.open(request)
-    except urllib2.HTTPError,e:
+    except urllib2.HTTPError as e:
         handleHTTPError("PUT",url,e)
         ##print(e.read())
         #if int(e.code)==404:
@@ -272,7 +272,7 @@ def putDataUrllib2(url,payload,timeout=900,logger=None):
         ##print(e.reason)
         ##print(urlreturned)
         raise
-    except urllib2.URLError,e:
+    except urllib2.URLError as e:
         #print(e.read())
         warnmsg="Warning: Issue accessing url: %s" % url
         warnmsg+="; "
@@ -311,7 +311,7 @@ def patchDataUrllib2(url,payload,timeout=900,logger=None):
         logger.debug("Beginning url call: %s" % url)
     try:
         urlreturned = opener.open(request)
-    except urllib2.HTTPError,e:
+    except urllib2.HTTPError as e:
         handleHTTPError("PATCH",url,e)
         ##print(e.read())
         #print("Warning: Issue accessing url: %s" % url)
@@ -321,7 +321,7 @@ def patchDataUrllib2(url,payload,timeout=900,logger=None):
         ##print(url)
         #print("May be handled cleanly by calling instance: otherwise will result in an error.")
         raise
-    except urllib2.URLError,e:
+    except urllib2.URLError as e:
         #print(e.read()
         warnmsg="Warning: Issue accessing url: %s" % url
         warnmsg+="; "
