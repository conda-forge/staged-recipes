Index: cmake/modules/compiler.cmake
===================================================================
--- cmake/modules/compiler.cmake	(r√©vision 2460)
+++ cmake/modules/compiler.cmake	(copie de travail)
@@ -171,22 +171,31 @@
 add_definitions("-DCOMPILER_FLAGS=\\\"\"${COMPILER_FLAGS}\"\\\"")
 add_definitions("-DCOMPILER_CXXFLAGS=\\\"\"${COMPILER_CXXFLAGS}\"\\\"")
 
-set(CMAKE_C_FLAGS "${COMPILER_FLAGS} ${COMPILER_CFLAGS}")
-set(CMAKE_CXX_FLAGS "${VISIBILITY_FLAGS} ${COMPILER_WARNINGS} ${COMPILER_FLAGS} ${COMPILER_CXXFLAGS}")
-
-if(CMAKE_BUILD_TYPE STREQUAL "Profiling")
-  set(CMAKE_CXX_FLAGS_PROFILING "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS_PROFILING}")
-  if(NOT enable-portable-build)
-    set(CMAKE_CXX_FLAGS_PROFILING "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS_PROFILING}")
-  endif(NOT enable-portable-build)
-elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
-  set(CMAKE_CXX_FLAGS_RELEASE   "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
-  if(NOT enable-portable-build)
-    set(CMAKE_CXX_FLAGS_RELEASE "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS_RELEASE}")
-  endif(NOT enable-portable-build)
-else(CMAKE_BUILD_TYPE STREQUAL "Profiling")
-  set(CMAKE_CXX_FLAGS           "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS}")
-  if(NOT enable-portable-build)
-    set(CMAKE_CXX_FLAGS "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS}")
-  endif(NOT enable-portable-build)
-endif(CMAKE_BUILD_TYPE STREQUAL "Profiling")
+# This option has been added for building conda package.
+# It circumvents the following issue: 
+# `cmake` discards Boost_INCLUDEDIRS which is equal to $PREFIX/include
+# conda add -I$PREFIX/include in
+# the `CFLAGS` and `CXXFLAGS`.
+if(USE_EXTERNAL_COMPILER_FLAGS)
+  set(CMAKE_C_FLAGS "$ENV{CFLAGS}")
+  set(CMAKE_CXX_FLAGS "${COMPILER_WARNINGS} $ENV{CXXFLAGS}")
+else(USE_EXTERNAL_COMPILER_FLAGS)
+  set(CMAKE_C_FLAGS "${COMPILER_FLAGS} ${COMPILER_CFLAGS}")
+  set(CMAKE_CXX_FLAGS "${VISIBILITY_FLAGS} ${COMPILER_WARNINGS} ${COMPILER_FLAGS} ${COMPILER_CXXFLAGS}")
+  if(CMAKE_BUILD_TYPE STREQUAL "Profiling")
+    set(CMAKE_CXX_FLAGS_PROFILING "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS_PROFILING}")
+    if(NOT enable-portable-build)
+      set(CMAKE_CXX_FLAGS_PROFILING "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS_PROFILING}")
+    endif(NOT enable-portable-build)
+  elseif(CMAKE_BUILD_TYPE STREQUAL "Release")
+    set(CMAKE_CXX_FLAGS_RELEASE   "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
+    if(NOT enable-portable-build)
+      set(CMAKE_CXX_FLAGS_RELEASE "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS_RELEASE}")
+    endif(NOT enable-portable-build)
+  else(CMAKE_BUILD_TYPE STREQUAL "Profiling")
+    set(CMAKE_CXX_FLAGS           "${OPTIMISATION_FLAGS} ${CMAKE_CXX_FLAGS}")
+    if(NOT enable-portable-build)
+      set(CMAKE_CXX_FLAGS "${OPTIMISATION_FLAGS_MARCH} ${CMAKE_CXX_FLAGS}")
+    endif(NOT enable-portable-build)
+  endif(CMAKE_BUILD_TYPE STREQUAL "Profiling")
+endif(USE_EXTERNAL_COMPILER_FLAGS)
