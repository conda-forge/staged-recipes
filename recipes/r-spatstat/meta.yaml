{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spatstat
  # Note that conda versions cannot contain -, so any -'s in the version have
  # been replaced with _'s.
  version: "1.46_1"

source:
  fn: spatstat_1.46-1.tar.gz
  url:
    - http://cran.r-project.org/src/contrib/spatstat_1.46-1.tar.gz
    - http://cran.r-project.org/src/contrib/Archive/spatstat/spatstat_1.46-1.tar.gz


  # You can add a hash for the file here, like md5 or sha1
  # md5: 49448ba4863157652311cc5ea4fea3ea
  # sha1: 3bcfbee008276084cbb37a2b453963c61176a322
  # patches:
   # List any patch files here
   # - fix.patch

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: sm, maptools, gsl, locfit, spatial, rpanel, tkrplot, RandomFields (>= 3.0.0)
requirements:
  build:
    - r-base
    - r-matrix
    - r-abind
    - r-deldir >=0.0_21
    - r-goftest
    - r-mgcv
    - r-nlme
    - r-polyclip >=1.5_0
    - r-rpart
    - r-tensor
    - posix               # [win]
    - {{native}}toolchain # [win]
    - gcc                 # [not win]

  run:
    - r-base
    - r-matrix
    - r-abind
    - r-deldir >=0.0_21
    - r-goftest
    - r-mgcv
    - r-nlme
    - r-polyclip >=1.5_0
    - r-rpart
    - r-tensor

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('spatstat')" # [not win]
    - "\"%R%\" -e \"library('spatstat')\"" # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: http://www.spatstat.org
  license: GPL (>= 2)
  summary: Comprehensive open-source toolbox for analysing Spatial Point Patterns. Focused mainly
    on two-dimensional point patterns, including multitype/marked points, in any spatial
    region. Also supports three-dimensional point patterns, space-time point patterns
    in any number of dimensions, point patterns on a linear network, and patterns of
    other geometrical objects. Supports spatial covariate data such as pixel images.  Contains
    over 2000 functions for plotting spatial data, exploratory data analysis, model-fitting,
    simulation, spatial sampling, model diagnostics, and formal inference.  Data types
    include point patterns, line segment patterns, spatial windows, pixel images, tessellations,
    and linear networks.  Exploratory methods include quadrat counts, K-functions and
    their simulation envelopes, nearest neighbour distance and empty space statistics,
    Fry plots, pair correlation function, kernel smoothed intensity, relative risk estimation
    with cross-validated bandwidth selection, mark correlation functions, segregation
    indices, mark dependence diagnostics, and kernel estimates of covariate effects.
    Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Diggle-Cressie-Loosmore-Ford,
    Dao-Genton) and tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov)
    are also supported. Parametric models can be fitted to point pattern data using
    the functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include
    Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal
    point processes. Models may involve dependence on covariates, inter-point interaction,
    cluster formation and dependence on marks. Models are fitted by maximum likelihood,
    logistic regression, minimum contrast, and composite likelihood methods.  A model
    can be fitted to a list of point patterns (replicated point pattern data) using
    the function mppm(). The model can include random effects and fixed effects depending
    on the experimental design, in addition to all the features listed above. Fitted
    point process models can be simulated, automatically. Formal hypothesis tests of
    a fitted model are supported (likelihood ratio test, analysis of deviance, Monte
    Carlo tests) along with basic tools for model selection (stepwise(), AIC()). Tools
    for validating the fitted model include simulation envelopes, residuals, residual
    plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and
    added variable plots.
  license_family: GPL3

# The original CRAN metadata for this package was:

# Package: spatstat
# Version: 1.46-1
# Nickname: Spoiler Alert
# Date: 2016-07-08
# Title: Spatial Point Pattern Analysis, Model-Fitting, Simulation, Tests
# Author: Adrian Baddeley <Adrian.Baddeley@curtin.edu.au>, Rolf Turner <r.turner@auckland.ac.nz>  and Ege Rubak <rubak@math.aau.dk>, with substantial contributions of code by  Kasper Klitgaard Berthelsen; Ottmar Cronie; Ute Hahn; Abdollah Jalilian; Marie-Colette van Lieshout; Tuomas Rajala; Dominic Schuhmacher; and  Rasmus Waagepetersen. Additional contributions  by M. Adepeju; C. Anderson;  Q.W. Ang;  S. Azaele;  M. Baddeley; C. Beale;  M. Bell; R. Bernhardt;  T. Bendtsen; A. Bevan; B. Biggerstaff; A. Bilgrau; L. Bischof; C. Biscio; R. Bivand; J.M. Blanco Moreno; F. Bonneu; J. Burgos;  S. Byers;  Y.M. Chang;  J.B. Chen;  I. Chernayavsky;  Y.C. Chin;  B. Christensen;  J.-F. Coeurjolly; R. Corria Ainslie; M. de la Cruz;  P. Dalgaard;  M. D'Antuono; S. Das; P.J. Diggle;  P. Donnelly; I. Dryden;  S. Eglen;  A. El-Gabbas; B. Fandohan; O. Flores; E.D. Ford; P. Forbes; S. Frank;  J. Franklin;  N. Funwi-Gabga; O. Garcia; A. Gault;  J. Geldmann; M. Genton; S. Ghalandarayeshi; J. Gilbey; J. Goldstick; P. Grabarnik;  C. Graf;  U. Hahn;  A. Hardegen;  M.B. Hansen;  M. Hazelton;  J. Heikkinen;  M. Hering;  M. Herrmann;  P. Hewson; K. Hingee; K. Hornik;  P. Hunziker;  J. Hywood; R. Ihaka;  A. Jammalamadaka; R. John-Chandran;  D. Johnson;  M. Khanmohammadi; R. Klaver; P. Kovesi; M. Kuhn;  J. Laake;  F. Lavancier; T. Lawrence;  R.A. Lamb;  J. Lee;  G.P. Leser;  H.T. Li; G. Limitsios; A. Lister; B. Madin; M. Maechler; J. Marcus; K. Marchikanti;  R. Mark;  J. Mateu; P. McCullagh;  U. Mehlig; S. Meyer;  X.C. Mi; L. De Middeleer; R.K. Milne;  E. Miranda; J. Moller;  V. Morera Pujol;  E. Mudrak; G.M. Nair; N. Nava; L.S. Nielsen;  F. Nunes;  J.R. Nyengaard; J. Oehlschlaegel; T. Onkelinx; S. O'Riordan; E. Parilov;  J. Picka;  N. Picard;  M. Porter; S. Protsiv; A. Raftery;  S. Rakshit;  B. Ramage; P. Ramon; X. Raynaud, M. Reiter;  I. Renner; T.O. Richardson;   B.D. Ripley;   E. Rosenbaum;  B. Rowlingson;  J. Rudokas; J. Rudge; C. Ryan;  F. Safavimanesh; A. Sarkka;  C. Schank;  K. Schladitz;  S. Schutte; B.T. Scott;  O. Semboli; F. Semecurbe; V. Shcherbakov; G.C. Shen; P. Shi; H.-J. Ship; I.-M. Sintorn;  Y. Song;  M. Spiess;  M. Stevenson;  K. Stucki;  M. Sumner;  P. Surovy;  B. Taylor;  T. Thorarinsdottir; B. Turlach;  T. Tvedebrink; K. Ummer; M. Uppala; A. van Burgel;  T. Verbeke;  M. Vihtakari; A. Villers;  F. Vinatier; S. Voss; S. Wagner; H. Wang;  H. Wendrock;  J. Wild; C. Witthoft; S. Wong; M. Woringer; M.E. Zamboni and A. Zeileis.
# Maintainer: Adrian Baddeley <Adrian.Baddeley@curtin.edu.au>
# Depends: R (>= 3.3.0), stats, graphics, grDevices, utils, methods, nlme, rpart
# Imports: mgcv, Matrix, deldir (>= 0.0-21), abind, tensor, polyclip (>= 1.5-0), goftest
# Suggests: sm, maptools, gsl, locfit, spatial, rpanel, tkrplot, RandomFields (>= 3.0.0)
# Description: Comprehensive open-source toolbox for analysing Spatial Point Patterns. Focused mainly on two-dimensional point patterns, including multitype/marked points, in any spatial region. Also supports three-dimensional point patterns, space-time point patterns in any number of dimensions, point patterns on a linear network, and patterns of other geometrical objects. Supports spatial covariate data such as pixel images.  Contains over 2000 functions for plotting spatial data, exploratory data analysis, model-fitting, simulation, spatial sampling, model diagnostics, and formal inference.  Data types include point patterns, line segment patterns, spatial windows, pixel images, tessellations, and linear networks.  Exploratory methods include quadrat counts, K-functions and their simulation envelopes, nearest neighbour distance and empty space statistics, Fry plots, pair correlation function, kernel smoothed intensity, relative risk estimation with cross-validated bandwidth selection, mark correlation functions, segregation indices, mark dependence diagnostics, and kernel estimates of covariate effects. Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Diggle-Cressie-Loosmore-Ford, Dao-Genton) and tests for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov) are also supported. Parametric models can be fitted to point pattern data using the functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal point processes. Models may involve dependence on covariates, inter-point interaction, cluster formation and dependence on marks. Models are fitted by maximum likelihood, logistic regression, minimum contrast, and composite likelihood methods.  A model can be fitted to a list of point patterns (replicated point pattern data) using the function mppm(). The model can include random effects and fixed effects depending on the experimental design, in addition to all the features listed above. Fitted point process models can be simulated, automatically. Formal hypothesis tests of a fitted model are supported (likelihood ratio test, analysis of deviance, Monte Carlo tests) along with basic tools for model selection (stepwise(), AIC()). Tools for validating the fitted model include simulation envelopes, residuals, residual plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and added variable plots.
# License: GPL (>= 2)
# URL: http://www.spatstat.org
# LazyData: true
# NeedsCompilation: yes
# ByteCompile: true
# BugReports: https://github.com/spatstat/spatstat/issues
# Packaged: 2016-07-08 09:01:51 UTC; adrian
# Repository: CRAN
# Date/Publication: 2016-07-08 17:23:44

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
