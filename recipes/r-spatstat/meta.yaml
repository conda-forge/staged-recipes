{% set version = '1.53-2' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-spatstat
  version: {{ version|replace("-", "_") }}

source:
  fn: spatstat_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/spatstat_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/spatstat/spatstat_{{ version }}.tar.gz
  sha256: 0bc6d923e1fa59a87c3c9364d3d72aff5502db57dddf23aab78f01442e4c65ad

build:
  number: 0
  script: R CMD INSTALL --build .
  skip: true  # [win32]
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - r-base
    - r-matrix
    - r-abind
    - r-deldir >=0.0_21
    - r-goftest
    - r-mgcv
    - r-nlme
    - r-polyclip >=1.5_0
    - r-rpart
    - r-spatstat.data >=1.1_0
    - r-spatstat.utils >=1.7_1
    - r-tensor
    - posix                # [win]
    - {{native}}toolchain  # [win]
    - gcc                  # [not win]

  run:
    - r-base
    - r-matrix
    - r-abind
    - r-deldir >=0.0_21
    - r-goftest
    - r-mgcv
    - r-nlme
    - r-polyclip >=1.5_0
    - r-rpart
    - r-spatstat.data >=1.1_0
    - r-spatstat.utils >=1.7_1
    - r-tensor
    - {{native}}gcc-libs   # [win]
    - libgcc               # [not win]

test:
  commands:
    - $R -e "library('spatstat')"  # [not win]
    - "\"%R%\" -e \"library('spatstat')\""  # [win]
    - conda inspect linkages -p $PREFIX r-spatstat  # [not win]
    - conda inspect objects -p $PREFIX r-spatstat  # [osx]

about:
  home: http://spatstat.org/
  license: GPL (>= 2)
  summary: Spatial Point Pattern Analysis, Model-Fitting, Simulation, Tests
  description: |
    Comprehensive open-source toolbox for analysing Spatial Point Patterns. Focused mainly
    on two-dimensional point patterns, including multitype/marked points, in any spatial
    region. Also supports three-dimensional point patterns, space-time point patterns
    in any number of dimensions, point patterns on a linear network, and patterns of
    other geometrical objects. Supports spatial covariate data such as pixel images.  Contains
    over 2000 functions for plotting spatial data, exploratory data analysis, model-fitting,
    simulation, spatial sampling, model diagnostics, and formal inference.  Data types
    include point patterns, line segment patterns, spatial windows, pixel images, tessellations,
    and linear networks.  Exploratory methods include quadrat counts, K-functions and
    their simulation envelopes, nearest neighbour distance and empty space statistics,
    Fry plots, pair correlation function, kernel smoothed intensity, relative risk estimation
    with cross-validated bandwidth selection, mark correlation functions, segregation
    indices, mark dependence diagnostics, and kernel estimates of covariate effects.
    Formal hypothesis tests of random pattern (chi-squared, Kolmogorov-Smirnov, Monte
    Carlo, Diggle-Cressie-Loosmore-Ford, Dao-Genton, two-stage Monte Carlo) and tests
    for covariate effects (Cox-Berman-Waller-Lawson, Kolmogorov-Smirnov, ANOVA) are
    also supported. Parametric models can be fitted to point pattern data using the
    functions ppm(), kppm(), slrm(), dppm() similar to glm(). Types of models include
    Poisson, Gibbs and Cox point processes, Neyman-Scott cluster processes, and determinantal
    point processes. Models may involve dependence on covariates, inter-point interaction,
    cluster formation and dependence on marks. Models are fitted by maximum likelihood,
    logistic regression, minimum contrast, and composite likelihood methods.  A model
    can be fitted to a list of point patterns (replicated point pattern data) using
    the function mppm(). The model can include random effects and fixed effects depending
    on the experimental design, in addition to all the features listed above. Fitted
    point process models can be simulated, automatically. Formal hypothesis tests of
    a fitted model are supported (likelihood ratio test, analysis of deviance, Monte
    Carlo tests) along with basic tools for model selection (stepwise(), AIC()). Tools
    for validating the fitted model include simulation envelopes, residuals, residual
    plots and Q-Q plots, leverage and influence diagnostics, partial residuals, and
    added variable plots.
  license_family: GPL3
  doc_url: https://cran.r-project.org/web/packages/spatstat/spatstat.pdf

extra:
  recipe-maintainers:
    - jsignell
