{% set name = "kiwipy" %}
{% set version = "0.2.0" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "7b7845e629718cb20f431be7b5ec7faec78bdb4d52854d76be1adef633573406" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python -m pip install --no-deps --ignore-installed .

requirements:
  host:
    - python
    - pip
    - setuptools
    - tornado
    - future

  run:
    - python
    - tornado
    - future
    - pika
    - pyyaml


test:
  imports:
    - kiwipy
    - kiwipy.rmq
  commands:
    - python -m unittest discover

  source_files:
   - test

about:
  home: https://github.com/muhrin/kiwipy
  license: GNU General Public License v3 (GPLv3)
  license_family: GPL3
  license_file: 'LICENSE'
  summary: A python remote communications library
  description: |
        kiwipy is a library that makes remote messaging using RabbitMQ (and any
        other protocol for which a backend is written) EASY. I don't know about
        you but I find RabbitMQ HARD. It's all too easy to make a configuration
        mistake which is then difficult to debug. With kiwipy, there's none of
        this, just messaging, made simple, with all the nice properties and
        guarantees of AMQP.
  doc_url: https://github.com/muhrin/kiwipy
  dev_url: https://github.com/muhrin/kiwipy

extra:
  recipe-maintainers:
    - ltalirz
    - muhrin
