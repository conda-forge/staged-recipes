

{% set version = "0.2.3.1" %}
{% set soversion = ".".join(version.split(".")[:3]) %}
{% set somajor = version.split(".")[0] %}
{% set arm_variant_type = arm_variant_type|default("sbsa") %}

package:
  name: libnvpl-lapack-split
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/nvpl/redist/nvpl_lapack/linux-sbsa/nvpl_lapack-linux-sbsa-{{ version }}-archive.tar.xz
  sha256: 25927df133c5486fd71d5976c93917c96e62275a78dffc354bcaf1b022f56f8e

build:
  number: 0
  # nvpl is only for ARM architecture
  skip: true  # [not aarch64]
  script:
    - cp -rv include $PREFIX
    - cp -rv lib $PREFIX

outputs:

  - name: libnvpl-lapack-dev
    build:
      run_exports:
        - {{ pin_subpackage("libnvpl-lapack" ~ somajor ) }}
    files:
      - include/nvpl_lapack*
      - include/nvpl_lapack*/**
      - lib/cmake/nvpl_lapack*/**
      - lib/libnvpl_lapack*.so
    requirements:
      host:
        - {{ pin_subpackage("libnvpl-lapack" ~ somajor, exact=True) }}
        - _nvpl_dev_mutex
        - libnvpl-common-dev
        - libnvpl-blas-dev
      run:
        - _nvpl_dev_mutex
        - {{ pin_compatible("libnvpl-common-dev", exact=True) }}
        - {{ pin_compatible("libnvpl-blas-dev", exact=True) }}
        - {{ pin_subpackage("libnvpl-lapack" ~ somajor, exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}
    test:
      files:
        - test
      requires:    # [build_platform == target_platform]
        - {{ compiler("c") }}  # [build_platform == target_platform]
        - {{ compiler("cxx") }}  # [build_platform == target_platform]
        - {{ stdlib("c") }}  # [build_platform == target_platform]
        - cmake   # [build_platform == target_platform]
        - ninja  # [build_platform == target_platform]
      commands:
        - cmake ${CMAKE_ARGS} -GNinja test  # [build_platform == target_platform]
        - cmake --build .  # [build_platform == target_platform]
        - test -f $PREFIX/include/nvpl_lapack.h
        - test -f $PREFIX/lib/cmake/nvpl_lapack/nvpl_lapack-config.cmake
        - test -f $PREFIX/lib/libnvpl_lapack_core.so
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_gomp.so
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_seq.so
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_gomp.so
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_seq.so

  - name: libnvpl-lapack{{ somajor }}
    build:
      run_exports:
        - {{ pin_subpackage("libnvpl-lapack" ~ somajor ) }}
    files:
      - lib/libnvpl_lapack*.so.*
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ stdlib("c") }}
        - arm-variant * {{ arm_variant_type }}
      host:
        - _nvpl_dev_mutex
        - libnvpl-common-dev
        - libnvpl-blas-dev
      run_constrained:
        - arm-variant * {{ arm_variant_type }}
    test:
      commands:
        - test -f $PREFIX/lib/libnvpl_lapack_core.so.{{ somajor }}
        - test -f $PREFIX/lib/libnvpl_lapack_core.so.{{ soversion }}
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_gomp.so.{{ somajor }}
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_gomp.so.{{ soversion }}
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_seq.so.{{ somajor }}
        - test -f $PREFIX/lib/libnvpl_lapack_ilp64_seq.so.{{ soversion }}
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_gomp.so.{{ somajor }}
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_gomp.so.{{ soversion }}
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_seq.so.{{ somajor }}
        - test -f $PREFIX/lib/libnvpl_lapack_lp64_seq.so.{{ soversion }}

about:
  home: https://developer.nvidia.com/nvpl
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/nvpl/license.html
  summary: >-
    The NVIDIA Performance Libraries (NVPL) are a collection of high
    performance mathematical libraries optimized for the NVIDIA Grace Armv9.0
    architecture.
  description: >-
    The NVIDIA Performance Libraries (NVPL) are a collection of high
    performance mathematical libraries optimized for the NVIDIA Grace Armv9.0
    architecture.

    These CPU-only libraries have no dependencies on CUDA or CTK, and are drop
    in replacements for standard C and Fortran mathematical APIs allowing HPC
    applications to achieve maximum performance on the Grace platform.
  doc_url: https://docs.nvidia.com/nvpl/

extra:
  feedstock-name: libnvpl-lapack
  recipe-maintainers:
    - conda-forge/cuda
