Consistently output "X-Binary-Size-Third-Dimension: 1" for
two-dimensional data.  Addresses failures in tests:

  cif2cbf-img2cif-canonical-cmp
  cif2cbf-img2cif-flatpacked-cmp
  makecbf-cmp
  cif2cbf-ehcn-encp-cmp

This patch needs a corresponding fix to the build system.  Could
alternatively set "X-Binary-Size-Third-Dimension: 0".
--- a/examples/img2cif.c
+++ b/examples/img2cif.c
@@ -912,12 +912,12 @@ int main (int argc, char *argv [])
   cbf_failnez (cbf_set_integerarray_wdims_fs (cbf, compression, 1,
                                  img_pixelptr (img, 0, 0), sizeof (int), 1,
                                  img_rows (img) * img_columns (img),
-                                 "little_endian",dimension[0],dimension[1],0,0 ))
+                                 "little_endian",dimension[0],dimension[1],1,0 ))
   } else {
       cbf_failnez (cbf_set_integerarray_wdims_fs (cbf, compression, 1,
                                                   img_pixelptr (img, 0, 0), sizeof (int), 1,
                                                   img_rows (img) * img_columns (img),
-                                                  "little_endian",dimension[1],dimension[0],0,0 ))
+                                                  "little_endian",dimension[1],dimension[0],1,0 ))
   }
   
 
--- a/examples/makecbf.c
+++ b/examples/makecbf.c
@@ -563,7 +563,7 @@ int main (int argc, char *argv [])
   cbf_failnez (cbf_set_integerarray_wdims_fs (cbf, CBF_PACKED|CBF_FLAT_IMAGE, 1,
                                  img_pixelptr (img, 0, 0), sizeof (int), 1,
                                  img_rows (img) * img_columns (img),
-                                 "little_endian",img_rows (img),img_columns (img),0,0 ))
+                                 "little_endian",img_rows (img),img_columns (img),1,0 ))
   
 
     /* Write the new file */
