{% set name = "doppyo" %}
{% set version = "0.0.2" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "902f0825274aded70e837d51e1b47f09f6cefc0b0b4e6893680a3e7200c746a0" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - dask >=0.17.1
    - matplotlib >=2.2.2
    - bokeh >=0.12.13
    - netcdf4 >=1.3.1
    - numpy >=1.13.3
    - pandas >=0.22.0
    - pytest >=3.5.0
    - xarray >=0.10.7
    - bottleneck >=1.2.1
    - cartopy >=0.16.0
    - scipy >=1.0.0
    - pyspharm >=1.0.9
    - windspharm >=1.6.0
  run:
    - python
    - dask >=0.17.1
    - matplotlib >=2.2.2
    - bokeh >=0.12.13
    - netcdf4 >=1.3.1
    - numpy >=1.13.3
    - pandas >=0.22.0
    - pytest >=3.5.0
    - xarray >=0.10.7
    - bottleneck >=1.2.1
    - cartopy >=0.16.0
    - scipy >=1.0.0
    - pyspharm >=1.0.9
    - windspharm >=1.6.0

test:
  imports:
    - doppyo
    - doppyo.test

about:
  home: https://github.com/csiro-dcfp/doppyo
  license: MIT License
  license_family: MIT
  license_file: ''
  summary: Diagnostics and verification package
  description: "# doppyo\n\ndoppyo is a diagnostics/verification package for climate forecast systems. It is still in the very early stages of development.\n\nCurrent functionality\n======================\n\
    \nThree modules are currently available\n\n1. ``skill`` : functions for assessing one data set relative to another (usually model output relative to observation).\n\n2. ``diagnostic`` : functions for\
    \ computing various atmospheric and oceanic diagnostics.\n\n3. ``utils`` : general support functions for the doppyo package. \n\nSome test modules are also avaliable in ``doppyo.test``. However, these\
    \ are far from complete \n\nUsage (If not using DCFP JupyterHub server)\n===========================================\n\n1. Install anaconda if you have not already done so:\n\n* Make your own directory\
    \ in '/OSM/CBR/OA\\_DCFP/apps/'\n\n``mkdir /OSM/CBR/OA_DCFP/apps/<userid>``\n\n* A recent version of the anaconda installer is available in '/OSM/CBR/OA\\_DCFP/apps/anaconda\\_installer'. Run this and\
    \ follow the prompts to install anaconda in the directory you have just created.\n\n* The anaconda installer will add the anaconda path to your .bashrc (or equivalent). You will need to source this\
    \ for the changes to be made:\n\n``source ~/.bashrc``\n\n* Check that anaconda python is now your default:\n\n``which python``\n\n2. Install doppyo:\n\n* Clone the doppyo Bitbucket repository to your\
    \ local machine. At your desired location, run:\n\n``git clone https://<userid>@bitbucket.csiro.au/scm/df/doppyo.git``\n\n* Replicate the doppyo environment locally. This will ensure that you have all\
    \ libraries/packages required to run doppyo. Within the 'requirements' folder in your cloned repository, run:  \n\n``conda env create -f doppyo_env_linux.yml``  \n\nor  \n\n``conda env create -f doppyo_env_mac.yml``\
    \  \n\ndepending on your os.  \n\nAlternatively, if updating an existing doppyo\\_env environment, run:  \n\n``conda env update --file=doppyo_env_<os>.yml``\n\n* Activate the doppyo\\_env environment:\n\
    \n``source activate doppyo_env``\n\n* Install the doppyo package. Within your cloned repository, run:\n\n``python setup.py install``\n\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
