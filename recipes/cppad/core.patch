diff --git cppad_lib/cppad_colpack.cpp cppad_lib/cppad_colpack.cpp
index dc3327053..739363292 100644
--- cppad_lib/cppad_colpack.cpp
+++ cppad_lib/cppad_colpack.cpp
@@ -17,7 +17,7 @@ in the Eclipse Public License, Version 2.0 are satisfied:
 
 # if CPPAD_HAS_COLPACK == 0
 namespace CppAD { namespace local {
-    CPPAD_LIB_EXPORT void this_routine_should_never_get_called(void)
+    void this_routine_should_never_get_called(void)
     {   CPPAD_ASSERT_UNKNOWN(false); }
 } }
 # else // CPPAD_HAS_COLPACK
@@ -52,7 +52,7 @@ the entry with index (i, adolc_pattern[i][k]) is a non-zero
 in the sparsity pattern for the matrix.
 */
 // ----------------------------------------------------------------------
-CPPAD_LIB_EXPORT void cppad_colpack_general(
+void cppad_colpack_general(
     CppAD::vector<size_t>&               color         ,
     size_t                               m             ,
     size_t                               n             ,
@@ -164,7 +164,7 @@ For i = 0 , ... , m-1, and for k = 1, ... ,adolc_pattern[i][0],
 the entry with index (i, adolc_pattern[i][k]) is
 in the sparsity pattern for the symmetric matrix.
 */
-CPPAD_LIB_EXPORT void cppad_colpack_symmetric(
+void cppad_colpack_symmetric(
     CppAD::vector<size_t>&               color         ,
     size_t                               m             ,
     const CppAD::vector<unsigned int*>&  adolc_pattern )
diff --git include/cppad/local/cppad_colpack.hpp include/cppad/local/cppad_colpack.hpp
index ee96ab5fe..e3332a804 100644
--- include/cppad/local/cppad_colpack.hpp
+++ include/cppad/local/cppad_colpack.hpp
@@ -11,9 +11,14 @@ Secondary License when the conditions for such availability set forth
 in the Eclipse Public License, Version 2.0 are satisfied:
       GNU General Public License, Version 2.0 or later.
 ---------------------------------------------------------------------------- */
-# if CPPAD_HAS_COLPACK
 
 namespace CppAD { namespace local { // BEGIN_CPPAD_LOCAL_NAMESPACE
+
+# if ! CPPAD_HAS_COLPACK
+
+CPPAD_LIB_EXPORT void this_routine_should_never_get_called(void);
+
+# else
 /*!
 \file cppad_colpack.hpp
 External interface to Colpack routines used by cppad.
@@ -59,7 +64,7 @@ it is not the case that both
 This routine tries to minimize, with respect to the choice of colors,
 the number of colors.
 */
-extern void cppad_colpack_general(
+CPPAD_LIB_EXPORT void cppad_colpack_general(
           CppAD::vector<size_t>&         color         ,
     size_t                               m             ,
     size_t                               n             ,
@@ -91,14 +96,14 @@ The properties of this coloring have not yet been determined; see
 Efficient Computation of Sparse Hessians Using Coloring
 and Automatic Differentiation (pdf/ad/gebemedhin14.pdf)
 */
-extern void cppad_colpack_symmetric(
+CPPAD_LIB_EXPORT void cppad_colpack_symmetric(
           CppAD::vector<size_t>&         color         ,
     size_t                               n             ,
     const CppAD::vector<unsigned int*>&  adolc_pattern
 );
 
-} } // END_CPPAD_LOCAL_NAMESPACE
-
 # endif
+
+} } // END_CPPAD_LOCAL_NAMESPACE
 # endif
 
