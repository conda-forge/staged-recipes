{% set name = "zfp" %}
{% set version = "0.5.5" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/LLNL/zfp/archive/{{ version }}.tar.gz
  sha256: 6a7f4934489087d9c117a4af327fd6495ea757924f4df467b9c537abf8bd86c4

build:
  number: 0

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # Fortran bindings?
    # Cuda support?
    # OpenMP?
    - cmake
    - make    # [unix]
    - ninja   # [win]
    - libgomp      # [linux]
  host:
    - libgomp      # [linux]
    - python
    - pip
    - cython
    - numpy
  run:
    - libgomp      # [linux]
    - python
    - {{ pin_compatible('numpy') }}

test:
  commands:
    - test -f $PREFIX/include/zfp.h                # [linux]
    - test -f $PREFIX/lib/libzfp.so.{{ version }}  # [linux]
    - test -f $PREFIX/lib/libzfp${SHLIB_EXT}       # [unix]
  imports:
    - zfpy

about:
  home: https://github.com/LLNL/zfp
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: zfp is a compressed format for representing multidimensional floating-point and integer arrays.

  description: |
    zfp is a compressed format for representing multidimensional floating-point
    and integer arrays. zfp provides compressed-array classes that support high
    throughput read and write random access to individual array elements. zfp
    also supports serial and parallel (OpenMP and CUDA) compression of whole
    arrays, e.g., for applications that read and write large data sets to and
    from disk.

    zfp uses lossy but optionally error-bounded compression to achieve high
    compression ratios. Bit-for-bit lossless compression is also possible
    through one of zfp's compression modes. zfp works best for 2D, 3D, and 4D
    arrays that exhibit spatial correlation, such as continuous fields from
    physics simulations, natural images, regularly sampled terrain surfaces,
    etc. zfp compression of 1D arrays is possible but generally discouraged.

    zfp is freely available as open source and is distributed under a BSD
    license. zfp is primarily written in C and C++ but also includes Python and
    Fortran bindings. zfp conforms to various language standards, including
    C89, C99, C11, C++98, C++11, and C++14, and is supported on Linux, macOS,
    and Windows.

  doc_url: https://zfp.readthedocs.io/en/release{{ version }}/?badge=release{{ version }}

extra:
  recipe-maintainers:
    - hmaarrfk
