# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
{% set name = "jruby" %}
{% set version = "9.1.13" %}
{% set sha256 = "d58439c548433adcda98e695be53e526ba940a4b9c44fb9a05d92cd495cdd47f" %}
# sha256 is the prefered checksum -- you can get it for a file with:
#  `openssl sha256 <file name>`.
# You may need the openssl package, available on conda-forge
#  `conda install openssl -c conda-forge``

package:
  name: {{ name|lower }}
  version: {{ version }}

  #source:
  #  fn: {{ name }}-{{ version }}.tar.gz
  #  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  #  sha256: {{ sha256 }}

build:
  number: 0
  skip: True  # [win]
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
#  build:
#    - python
    # When setuptools is available add the `--single-version-externally-managed --record record.txt` above.
  run:
    - java 

# test:
#   # Some package might need a `test/commands` key to check CLI.
#   # List all the packages/modules that `run_test.py` imports.
#   imports:
#     - simplejson
#     - simplejson.tests
#
about:
  home: https://github.com/jruby/jruby/
  # Remember to specify the license variants for BSD, Apache, GPL, and LGLP.
  # Prefer the short version, e.g: GPL-2.0 instead of GNU General Public License version 2.0
  # See https://opensource.org/licenses/alphabetical
  #license: MIT
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  #license_family: MIT
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See http://conda.pydata.org/docs/building/meta-yaml.html#license-file
  license_file: LICENSE
  summary: 'JRuby, an implementation of Ruby on the JVM'

  # The remaining entries in this section are optional, but recommended
  description: |
    JRuby, an implementation of Ruby on the JVM
  doc_url: http://www.jruby.org/
  dev_url: https://github.com/jruby/jruby 

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - abhi18av