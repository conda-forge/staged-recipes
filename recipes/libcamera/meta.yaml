{% set libcamera_version = "0.4.0" %}
{% set libcamera_rpi_version = "0.4.0+rpt20250213" %}
{% set rpi_url_safe_version = libcamera_rpi_version | urlencode %}
{% set build = 0 %}

{% if variant == "upstream" %}
  # install upstream variant by dafault
  {% set build = build + 100 %}
{% endif %}

package:
  name: libcamera
  version: {{ libcamera_version }}

source:
{% if variant == "upstream" %}
  # libcamera does not offer tar balls
  git_url: https://git.libcamera.org/libcamera/libcamera.git
  git_rev: v{{ libcamera_version }}
{% elif variant == "rpi_fork" %}
  # In conversations with upstream
  # https://github.com/raspberrypi/libcamera/issues/251
  # We found that they attempt to maintain ABI compatibility
  # Thus we build Raspberry-Pi specific modifications as as a variant instead of a separate package
  url: https://github.com/raspberrypi/libcamera/releases/download/v{{ rpi_url_safe_version }}/libcamera-{{ rpi_url_safe_version }}.tar.xz
  sha256: 764b9b2ab16dbc4e90cd858cd2019be76e087e093bbdd08048d87d0a704f8e28
{% endif %}
  patches:
    - memfd_symbols.patch

build:
  number: {{ build }}
  skip: true  # [not linux]
  {% if variant == "rpi_fork" %}
  skip: true  # [not aarch64]
  {% endif %}
  string: "py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ variant }}"

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - qt6-main                               # [build_platform != target_platform]
    - cmake
    - ninja
    - meson
    # Needed for some build processes???
    - ply
    - pyyaml
    - jinja2
    - pkg-config
    - {{ compiler('cxx') }}
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
  host:
    - libgl-devel
    - python
    - pybind11
    - jinja2
    - libudev
    - libudev1
    - gstreamer
    - libevent
    - libdrm
    - libtiff
    - qt6-main
    - libdrm
    - libjpeg-turbo
    - yaml
    - libunwind
    - sdl2
    - openssl
    - libboost-devel
    - pyyaml
    - ply
  run:
    - python
test:
  commands:
    - test -f $PREFIX/lib/libcamera.so
    - test -f $PREFIX/include/libcamera/libcamera/libcamera.h

outputs:
  - name: libcamera
    test:
      commands:
        - cam -l
  - name: libcamera-rpi
    build:
      skip: true   # [variant == "upstream"]
      string: "py{{ CONDA_PY }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ variant }}"
    requirements:
      # Add python as build/host dependency to get the full python matrix out of this.
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
      run:
        - python
        # I wish we could pin exact... but I think with the python build matrix
        # It makes things complicated.
        # - libcamera {{ libcamera_version }} *_{{ PKG_BUILDNUM }}_{{ variant }}
        - {{ pin_subpackage('libcamera', exact=True) }}
    test:
      commands:
        - libcamerify --help


about:
  home: https://libcamera.org/index.html
  summary: An open source camera stack and framework for Linux, Android, and ChromeOS
  license: >
    LGPL-2.1-or-later
    AND BSD-2-Clause
    AND BSD-3-Clause
    AND MIT
    AND Apache-2.0
    AND CC0-1.0
    AND CC-BY-SA-4.0
    AND CC-BY-4.0
  license_file: LICENSES/
  doc_url: https://libcamera.org/introduction.html
  dev_url: https://git.libcamera.org/libcamera/libcamera.git/

extra:
  recipe-maintainers:
    - carlodri
