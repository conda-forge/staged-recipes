{% set name = "txtorcon" %}
{% set version = "0.19.3" %}
{% set sha256 = "f73396667909a3c7a98f4dd865edf4ed6a2518ee5a935d92e18b8a479ec244fd" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python
    - setuptools
  run:
    - python
    - twisted >=15.5.0
    - ipaddress >=1.0.16  # [py2k]
    - zope.interface >=3.6.1
    - incremental
    - automat
    - pyopenssl >=16.0.0
    - geoip

test:
  requires:
    - mock
  source_files:
    - test/
  imports:
    - txtorcon
  commands:
    - cd tests & python -m unittest

about:
  home: https://github.com/meejah/txtorcon
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: 'txtorcon is an implementation of the control-spec for Tor using
  the Twisted networking library for Python.'

  description: |
    This is useful for writing utilities to control or make use of Tor in
    event-based Python programs. If your Twisted program supports endpoints
    (like twistd does) your server or client can make use of Tor immediately,
    with no code changes. Start your own Tor or connect to one and get live
    stream, circuit, relay updates; read and change config; monitor events;
    build circuits; create onion services; etcetera (ReadTheDocs).
  doc_url: https://txtorcon.readthedocs.io/en/latest/
  dev_url: https://github.com/meejah/txtorcon

extra:
  recipe-maintainers:
    - CJ-Wright
