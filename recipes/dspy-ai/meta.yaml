{% set name = "dspy-ai" %}
{% set version = "2.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/dspy-ai-{{ version }}.tar.gz
  sha256: d646ec015270b70bd51916346c01680923ccfa386c9e5474caac6d4366148678

build:
  number: 0
  noarch: python
  script: |
    ## Ensure inclusion of requirements.txt
    {% set reqfile = "requirements.txt" %}
    {% set reqsource = name ~ ".egg-info/requires.txt" %}
    {% set pyproject_toml = "pyprpoject.toml" %}
    # IF {{ reqfile }} is NOT PRESENT, COPY {{ reqfile }} from {{ reqsource }}
    - echo -e "\n>>> ENSURE INCLUSION OF '{{ reqfile }}' <<<\n\n"
    #- if [ ! -f {{ reqfile }} ] && [ -f {{ reqsource }} ]; then cp {{ reqsource }} {{ reqfile }}; fi  # [not win]
    # IF {{ reqfile }} is NOT PRESENT, CREATE {{ reqfile }} from {{ pyproject_toml }}
    - if [ ! -f {{ reqfile }} ] && [ -f {{ pyproject_toml }} ]; then \
      {{ PYTHON }} -m pip install toml && \
      {{ PYTHON }} -c '\
      import toml; \
      conf = toml.loads(open("pyproject.toml", "r").read()); \
      print("\n".join(conf.get("project", {}).get("dependencies", []))) \
      ' > {{ reqfile }}; fi  # [not win]
    ## Run final installation script 
    - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  host:
    - python >=3.9,<3.12
    - setuptools >=40.8.0
    - wheel
    - poetry-core
    - pip
    - toml
  run:
    - python >=3.9,<3.12
    - backoff >=2.2.1,<2.3.dev0
    - joblib >=1.3.2,<1.4.dev0
    - openai >=0.28.1,<2.0.0
    - pandas
    - regex
    - ujson
    - tqdm
    - datasets >=2.14.6,<2.15.dev0,<3.0.0
    - requests
    - optuna
    - pydantic ==2.5.0
  run_constrained:
    - chromadb >=0.4.14,<0.5.0
    - fastembed >=0.1.0,<0.2.0
    - marqo *
    - qdrant-client >=1.6.2,<2.0.0
    - pinecone-client >=2.2.4,<3.0.0
    - weaviate-client >=3.26.1,<4.0.0
    - sphinx >=4.3.0
    - furo >=2023.3.27
    - docutils <0.17
    - m2r2 *
    - myst-parser *
    - myst-nb *
    - sphinx-autobuild *
    - sphinx_rtd_theme *
    - autodoc_pydantic *
    - sphinx-reredirects >=0.1.2,<0.2.0
    - sphinx-automodapi 0.16.0

test:
  imports:
    - dspy_ai
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/stanfordnlp/dsp
  summary: "DSPy: Programming, *not prompting* Foundation Models"
  license: MIT
  license_file: LICENSE
  description: |
    DSPy (pronounced as `D`-`S`-`Pie` similar to how to pronounce SciPy as *sai-pie*) is a framework for 
    algorithmically optimizing LM prompts and weights, especially when LMs are used one or more times 
    within a pipeline. 

    PyPI: [https://pypi.org/project/{{ name | lower }}/](https://pypi.org/project/{{ name | lower }}/)
    ---
    :fire: The conda-forge recipe was generated with [Conda-Forger App](https://sugatoray-conda-forger.streamlit.app/).

  dev_url: https://github.com/stanfordnlp/dspy
  doc_url: https://dspy-docs.vercel.app/

extra:
  recipe-maintainers:
    - sugatoray
