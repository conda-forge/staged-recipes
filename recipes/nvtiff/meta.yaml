{% set name = "libnvtiff" %}
{% set version = "0.4.0.62" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}     # [aarch64 and arm_variant_type == "sbsa"]
{% set platform = "linux-aarch64" %}  # [aarch64 and arm_variant_type == "tegra"]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64 and arm_variant_type == "sbsa"]
{% set target_name = "aarch64-linux" %}  # [aarch64 and arm_variant_type == "tegra"]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]
{% set cuda_compiler_version = cuda_compiler_version | default("None") %}
{% set cuda_major = cuda_compiler_version.split(".")[0] %}


package:
  name: libnvtiff-split
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/nvtiff/redist/libnvtiff/{{ platform }}/libnvtiff-{{ platform }}-{{ version }}_cuda{{ cuda_major }}-archive.{{ extension }}
{% if cuda_major == "11" %}
  sha256: 8a206bb5b6b6e277e7366b8f10eec44320c5c7422117d83e4bf80bbf800bed1e  # [linux64]
  sha256: c8904df056d8e365566cf1ee67e6dc554be2d030458e8d3c8c94240cdd9351c9  # [aarch64 and arm_variant_type == "sbsa"]
  sha256: aeb6f73952294a1def649bd9e7a3203430b20f923d3e8623cda2ce13b8a42743  # [win]
  sha256: 178945699ccda8ce1ac6e161782ab994bdf7f5cfaa27d705fcd3931805bca21a  # [aarch64 and arm_variant_type == "tegra"]
{% endif %}
{% if cuda_major == "12" %}
  sha256: 5f76b01eddfec0c2823eaa3aae1cf4709e695e8dbdfd22b2c54493ede2dabd4c  # [linux64]
  sha256: e66c275c2bcf69b82a0da69d29d70e754a22c8f32bb6cf75b34e4a2efd7640cb  # [aarch64 and arm_variant_type == "sbsa"]
  sha256: 352703d4d227253af4512c21b840e813b548831f485a5b9cb4e2195844d006e3  # [win]
  sha256: 2a7cc95a2a3ae56093a0becc7f87b9726253728443840fccacb35f9fd974d4cc  # [aarch64 and arm_variant_type == "tegra"]
{% endif %}

build:
  number: 0
  skip: true  # [osx or ppc64le]
  skip: true  # [cuda_compiler_version in (None, "None", "11.8")]

outputs:

  - name: libnvtiff{{ version.split(".")[0] }}
    build:
      run_exports:
        # FIXME: Pin to patch version until 1.0
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], max_pin="x.x.x") }}
    files:
      - lib/libnvtiff.so.*            # [linux]
      - Library\bin\nvtiff*.dll       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cuda") }}
        - {{ stdlib("c") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_compiler_version }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/libnvtiff.so.{{ version.split(".")[0] }}                            # [linux]
        - test -f $PREFIX/lib/libnvtiff.so.{{ version }}                                          # [linux]
        - if not exist %LIBRARY_BIN%\nvtiff_{{ version.split(".")[0] }}.dll exit 1              # [win]

  - name: libnvtiff-dev
    build:
      run_exports:
        # FIXME: Pin to patch version until 1.0
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], max_pin="x.x.x") }}
    files:
      - lib/libnvtiff.so                                  # [linux]
      # - lib/pkgconfig/nvtiff*.pc                          # [linux]
      - include/nvtiff*                                   # [linux]
      - Library\include                                   # [win]
      - Library\lib\nvtiff.lib                            # [win]
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_compiler_version }}
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], exact=True) }}
      run:
        - {{ pin_subpackage("libnvtiff" ~ version.split(".")[0], exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -L $PREFIX/lib/libnvtiff.so                                    # [linux]
        # - test -f $PREFIX/lib/pkgconfig/nvtiff*.pc                            # [linux]
        - test -f $PREFIX/include/nvtiff_version.h                            # [linux]
        - test -f $PREFIX/include/nvtiff.h                                    # [linux]
        - if not exist %LIBRARY_INC%\nvtiff_version.h exit 1                  # [win]
        - if not exist %LIBRARY_INC%\nvtiff.h exit 1                          # [win]
        - if not exist %LIBRARY_LIB%\nvtiff.lib exit 1                        # [win]

  - name: libnvtiff-static
    build:
      skip: True  # [not linux]
    files:
      - lib/libnvtiff_static.a  # [linux]
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_compiler_version }}
      run:
        - {{ pin_subpackage("libnvtiff-dev", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/lib/libnvtiff_static.a  # [linux]

about:
  home: https://docs.nvidia.com/cuda/nvtiff/
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: nvTIFF native runtime libraries
  description: |
    nvTIFF native runtime libraries
  doc_url: https://docs.nvidia.com/cuda/nvtiff/

extra:
  recipe-maintainers:
    - conda-forge/cuda
