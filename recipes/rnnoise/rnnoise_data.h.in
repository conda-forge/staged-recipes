#ifndef RNNOISE_DATA_H
#define RNNOISE_DATA_H

/* Minimal placeholder header for RNNoise model data */
/* This allows compilation when no custom model data is available */

#include "nnet.h"

/* Required size constants */
#define CONV1_STATE_SIZE 32
#define CONV2_STATE_SIZE 32
#define GRU1_STATE_SIZE 128
#define GRU2_STATE_SIZE 128
#define GRU3_STATE_SIZE 128
#define CONV1_IN_SIZE 42

/* Complete RNNoise structure definition */
typedef struct RNNoise {
    DenseLayer conv1;
    DenseLayer conv2;
    GRULayer gru1_input;
    GRULayer gru1_recurrent;
    GRULayer gru2_input;
    GRULayer gru2_recurrent;
    GRULayer gru3_input;
    GRULayer gru3_recurrent;
    DenseLayer dense_out;
    DenseLayer vad_dense;
} RNNoise;

/* Function declarations */
int init_rnnoise(RNNoise *model, const WeightArray *arrays);

/* Model instance */
extern const RNNoise rnnoise_model_orig;

/* Empty arrays - RNNoise will use built-in defaults */
extern const WeightArray rnnoise_arrays[];
extern const int rnnoise_arrays_size;

#endif /* RNNOISE_DATA_H */
