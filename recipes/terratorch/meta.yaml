{% set name = "terratorch" %}
{% set version = "1.1" %}
{% set python_min = "3.11" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/terratorch-{{ version }}.tar.gz
  sha256: 0aaf58103c6eea7401befe167d730a2659d8fe7f54e357b651cf4bae9724e0fb

build:
  number: 0
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv 
  entry_points:
    - terratorch = terratorch.__main__:main
  #skip: true  # [win]

requirements:
  host:
    - python {{ python_min }}
    - setuptools
    - pip
  run:
    - python >={{ python_min }}
    - pytorch >2.0
    - torchvision
    - rioxarray
    - albumentations ==1.4.10
    - albucore ==0.0.16
    - rasterio
    - torchmetrics
    - geopandas
    - lightly
    - jsonargparse <=4.35.0
    - h5py
    - hdf5plugin
    - numba
    - mlflow
    - lightning
    - segmentation-models-pytorch <=0.4
    - jsonargparse
    - torchgeo >=0.7.0
    - einops
    - timm >=1.0.15
    - pycocotools
    - huggingface_hub
    - tifffile
    - python-box
    - wandb
    - termcolor
    - numba
    - hdf5plugin
    - h5netcdf
    - pytest-sugar
test:
  imports:
    - terratorch
    - terratorch.models
    - terratorch.models.backbones
    - terratorch.datamodules
    - terratorch.datasets
    - terratorch.samplers
  commands:
    - pip check
    - terratorch --help
  requires:
    - pip
    - python {{ python_min }}

about:
  home: https://github.com/IBM/terratorch
  summary: TerraTorch - A model training toolkit for geospatial tasks
  doc_url: https://ibm.github.io/terratorch/
  dev_url: https://github.com/IBM/terratorch
  license: Apache-2.0
  license_file: LICENSE
  description: | 
    The purpose of this package is to build a flexible fine-tuning framework for Geospatial Foundation Models (GFMs)
    based on TorchGeo and Lightning which can be employed at different abstraction levels. It supports models from the Prithvi,
    TerraMind, and Granite series as well as models from TorchGeo and timm.

    This library provides

    1. Ease-of-use and all the functionality from Lightning and TorchGeo.
    2. A modular model factory that combines any backbone with different decoders for full flexibility.
    3. Ready-to-use tasks for image segmentation, pixelwise regression, classification, and more.
    4. Multiple abstraction levels and inference pipelines to power enterprise applications.

extra:
  recipe-maintainers:
    - Joao-L-S-Almeida
    - romeokienzler
