{% set name = "libmobility" %}
{% set version = "0.8.0" %}

{% set cuda_compiler_version = cuda_compiler_version | default("None") %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/stochasticHydroTools/libMobility/archive/refs/tags/{{ version }}.tar.gz
    sha256: 5948c98aec0f9433b37c14935f9c7c503bd2744252a8e89af72d2999fe841020
  - url: https://github.com/RaulPPelaez/UAMMD/archive/refs/tags/v2.8.0.tar.gz
    sha256: 95f7d7a6d66c43b2b8e4ac9f93b1e7ed3299f7ae989ddfc921fbe9dbbc4591b5
    folder: uammd-src
  - url: https://github.com/stochasticHydroTools/LanczosAlgorithm/archive/refs/tags/v1.0.1.tar.gz
    sha256: 9142307e4b927563c52de70cedbb4e0ae5d88adfc6cd28b22b81eb065a340caf
    folder: lanczos-src
build:
  skip: true  # [win or not (cuda_compiler_version or "").startswith("12")]
  # Debugging skips
  # skip: true  # [py != 312]
  number: 0
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  rpaths:
    - lib/
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux64]
  ignore_run_exports_from:
    - libcusolver-dev
    - libcurand-dev

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - make
    - cmake >=3.25.2
    - numpy                                  # [build_platform != target_platform]
    - nomkl                                  # [build_platform != target_platform]
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
  host:
    - python
    - numpy
    - cuda-version {{ cuda_compiler_version }}
    - cuda-cudart-dev
    - libcublas-dev
    - libcufft-dev
    - libcurand-dev
    - libcusolver-dev
    - libblas
    - libcblas  # has header files for libblas
    - liblapacke
    - nanobind
  run:
    - python

test:
  requires:
    - pytest
    - scipy
    # Prove that netlib-linked BLAS works with MKL
    - libblas * *mkl  # [x86 or x86_64]
  imports:
    - libMobility
  source_files:
    - tests
  commands:
    - pytest -vs -k SelfMobility tests/test_*py

about:
  home: https://github.com/stochasticHydroTools/libmobility
  license: MIT
  license_file: LICENSE
  summary: Compute the action of the hydrodynamic mobility (at the RPY/FCM level) of a group of particles (in different geometries) with forces acting on them. Requires a CUDA compatible GPU.

extra:
  recipe-maintainers:
    - rykerfish
    - brennansprinkle
    - RaulPPelaez
