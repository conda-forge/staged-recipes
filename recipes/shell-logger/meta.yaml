{% set name = "shell-logger" %}
{% set version = "1.0.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  sha256: e1ae3c59a0ceaa7401d56c0583c1aa3d608f6e323a260272d1f322474c549b54
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}-sandialabs/shell_logger_sandialabs-{{ version }}.tar.gz

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - pip
    - poetry-core
    - python >=3.8
  run:
    - python >=3.8

test:
  commands:
    - pip check
  imports:
    - shell_logger
  requires:
    - pip

about:
  description: |
    The shell-logger Python package allows you to interact with the shell,
    while logging various metadata, statistics, and trace information.  Any
    time you're tempted to write your own wrapper around things like
    subprocess.Popen() or subprocess.run(), consider using
    shell_logger.ShellLogger.log() instead.  If you're familiar with the Unix
    script command, this is similar in principle, but with substantially more
    functionality.  If you're familiar with Python's logging module, the
    motivation is similar, but this intends to capture what's happening in the
    shell rather than in Python itself.
  dev_url: https://github.com/sandialabs/shell-logger
  doc_url: https://shell-logger.readthedocs.io/
  home: https://github.com/sandialabs/shell-logger
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.md
  summary: |
    A Python package that allows you to interact with the shell, while logging
    various metadata, statistics, and trace information.
extra:
  recipe-maintainers:
    - jmgate
