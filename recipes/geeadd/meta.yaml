{% set name = "geeadd" %}
{% set version = "0.4.1" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "51461dae6ff7ffe3854519ef5abed715d3730a1580e9e8a9e14c4bb773e1bc93" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  entry_points:
    - geeadd=geeadd.geeadd:main
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - earthengine_api >=0.1.217
    - requests >=2.22.0
    - logzero >=1.5.0
    - beautifulsoup4 >=4.9.0
    - gitpython >=3.1.1
  run:
    - python
    - earthengine_api >=0.1.217
    - requests >=2.22.0
    - logzero >=1.5.0
    - beautifulsoup4 >=4.9.0
    - gitpython >=3.1.1

test:
  imports:
    - geeadd
  commands:
    - geeadd --help

about:
  home: https://github.com/samapriya/gee_asset_manager_addon
  license: Apache Software License
  license_family: APACHE
  license_file: ''
  summary: Google Earth Engine Batch Assets Manager with Addons
  description: "# Google Earth Engine Batch Asset Manager with Addons\n\n[![PyPI version](https://badge.fury.io/py/geeadd.svg)](https://badge.fury.io/py/geeadd)\n![Build Status](https://img.shields.io/badge/dynamic/json.svg?label=downloads&url=https%3A%2F%2Fpypistats.org%2Fapi%2Fpackages%2Fgeeadd%2Frecent%3Fperiod%3Dmonth&query=%24.data.last_month&colorB=blue&suffix=%2fmonth)\n\
    [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3474295.svg)](https://doi.org/10.5281/zenodo.3474295)\n[![Can I Use Python 3?](https://caniusepython3.com/project/geeadd.svg)](https://caniusepython3.com/project/geeadd)\n\
    \n\nGoogle Earth Engine Batch Asset Manager with Addons is an extension of the one developed by Lukasz [here](https://github.com/tracek/gee_asset_manager) and additional tools were added to include\
    \ functionality for moving assets, conversion of objects to fusion table, cleaning folders, querying tasks. The ambition is apart from helping user with batch actions on assets along with interacting\
    \ and extending capabilities of existing GEE CLI. It is developed case by case basis to include more features in the future as it becomes available or as need arises.\n\nIf you use this tool to download\
    \ data for your research, and find this tool useful, star and cite it as below\n\n```\nSamapriya Roy. (2019, October 6). samapriya/gee_asset_manager_addon: GEE Asset Manager with Addons (Version 0.3.3).\
    \ Zenodo.\nhttp://doi.org/10.5281/zenodo.3474295\n```\n\n\n## Table of contents\n* [Installation](#installation)\n* [Getting started](#getting-started)\n* [Uploading](#uploading)\n* [Usage examples](#usage-examples)\n\
    \    * [quota](#quota)\n    * [search](#search)\n    * [App to Script](#app-to-script)\n    * [Earth Engine Asset Report](#earth-engine-asset-report)\n    * [Asset Size](#asset-size)\n    * [Task Query](#task-query)\n\
    \    * [Cancel tasks](#cancel-tasks)\n    * [Assets Copy](#assets-copy)\n    * [Assets Move](#assets-move)\n    * [Assets Access](#assets-access)\n    * [Delete](#delete)\n    * [Delete Metadata](#delete-metadata)\n\
    \n## Installation\nWe assume Earth Engine Python API is installed and EE authorised as desribed [here](https://developers.google.com/earth-engine/python_install). From v0.3.4 onwards geeadd will only\
    \ run on Python 3. Also with the new changes to the Earth Engine API library, the tool was completely modified to work with earthengine-api v0.1.127 and higher. Authenticate your earth engine client\
    \ by using the following in your command line or terminal setup.\n\n```\nearthengine authenticate\n```\n\nQuick installation **```pip install geeadd```** or **```pip install geeadd --user```**\n\nTo\
    \ install using github:\n```\ngit clone https://github.com/samapriya/gee_asset_manager_addon\ncd gee_asset_manager_addon && pip install -r requirements.txt\npython setup.py install\n```\n\nThe advantage\
    \ of having it installed is being able to execute geeadd as any command line tool. I recommend installation within virtual environment. To install run\n```\npython setup.py develop or python setup.py\
    \ install\n\nIn a linux distribution\nsudo python setup.py develop or sudo python setup.py install\n```\n\n\n## Getting started\n\nAs usual, to print help:\n\n![gee_main](https://user-images.githubusercontent.com/6677629/80054068-5fa4b700-84ec-11ea-93a2-f758bb76205a.png)\n\
    \nTo obtain help for a specific functionality, simply call it with _help_ switch, e.g.: `geeadd copy -h`.\n\n\n## Usage examples\n\n### quota\nThis tool is the very basic of tools in the toolbox which\
    \ gives you your current quota. This gives you the total used and remaining quota in all your legacy folders or user root folders. It requires no additional arguments just that your earthengine api\
    \ is enabled.\n\n```\n> geeadd quota -h\nusage: geeadd quota [-h]\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n### search\nThe search tool was added since v0.3.4 to\
    \ enable users to search inside the Google Earth Engine catalog for images matching specific keywords and looks for matching images using names, ids , tags and so on. Try for example\n\n```geeadd search\
    \ --keywords \"fire\"```\n\n```\n> geeadd search -h\nusage: geeadd search [-h] --keywords KEYWORDS\n\noptional arguments:\n  -h, --help           show this help message and exit\n\nRequired named arguments.:\n\
    \  --keywords KEYWORDS  Keywords to search for can be id, provider, tag and so\n                       on\n```\n\n### App to Script\nThis tool writes out or prints the underlying earthengine code for\
    \ any public earthengine app. The tool has an option to export the code into a javascript file that you can then paste into Google Earth Engine code editor.\n\n```\n> geeadd app2script -h\nusage: geeadd\
    \ app2script [-h] --url URL [--outfile OUTFILE]\n\noptional arguments:\n  -h, --help         show this help message and exit\n\nRequired named arguments.:\n  --url URL          Earthengine app url\n\
    \nOptional named arguments:\n  --outfile OUTFILE  Write the script out to a .js file: Open in any text\n                     editor\n```\n\nSimple setup can be\n\n```\ngeeadd app2script --url \"https://gena.users.earthengine.app/view/urban-lights\"\
    \n```\n\nor write to a javascript file which you can then open with any text editor and paste in earthengine code editor\n\n```\ngeeadd app2script --url \"https://gena.users.earthengine.app/view/urban-lights\"\
    \ --outfile \"Full path to javascript.js\"\n```\n\n### Earth Engine Asset Report\nThis tool recursively goes through all your assets(Includes Images, ImageCollection,Table,) and generates a report containing\
    \ the following fields\n[Type,Asset Type, Path,Number of Assets,size(MB),unit,owner,readers,writers]. This tool creates a detailed report and may take sometime to complete.\n\n```\n> geeadd ee_report\
    \ -h\nusage: geeadd ee_report [-h] --outfile OUTFILE\n\noptional arguments:\n  -h, --help         show this help message and exit\n\nRequired named arguments.:\n  --outfile OUTFILE  This it the location\
    \ of your report csv file\n```\n\nA simple setup is the following\n``` geeadd --outfile \"C:\\johndoe\\report.csv\"```\n\n### Asset Size\nThis tool allows you to query the size of any Earth Engine asset[Images,\
    \ Image Collections, Tables and Folders] and prints out the number of assets and total asset size in non-byte encoding meaning KB, MB, GB, TB depending on size.\n\n```\n> geeadd assetsize -h\nusage:\
    \ geeadd assetsize [-h] --asset ASSET\n\noptional arguments:\n  -h, --help     show this help message and exit\n\nRequired named arguments.:\n  --asset ASSET  Earth Engine Asset for which to get size\
    \ properties\n```\n\n### Task Query\nThis script counts all currently running, cancelled, ready and failed tasks and requires no arguments.\n\n```\n> geeadd tasks -h\nusage: geeadd tasks [-h]\n\noptional\
    \ arguments:\n  -h, --help  show this help message and exit\n```\n\n### Cancel tasks\nThis is a simple tool to cancel tasks with specific controls. This allows you to cancel all tasks, all running tasks,\
    \ all ready tasks or just a single task with a task id.\n\n```\n> geeadd cancel -h\nusage: geeadd cancel [-h] --tasks TASKS\n\noptional arguments:\n  -h, --help     show this help message and exit\n\
    \nRequired named arguments.:\n  --tasks TASKS  You can provide tasks as running or ready or all or even a\n                 single task id\n```\n\n### Assets Copy\nThis script allows us to recursively\
    \ copy entire folders, collections, images or tables. If you have read acess to assets from another user this will also allow you to copy assets from their assets.\n\n```\ngeeadd copy -h\nusage: geeadd\
    \ copy [-h] [--initial INITIAL] [--final FINAL]\n\noptional arguments:\n  -h, --help         show this help message and exit\n\nRequired named arguments.:\n  --initial INITIAL  Existing path of assets\n\
    \  --final FINAL      New path for assets\n```\n\n### Assets Move\nThis script allows us to recursively move assets from one collection to the other.\n\n```\n> geeadd move -h\nusage: geeadd move [-h]\
    \ [--initial INITIAL] [--final FINAL]\n\noptional arguments:\n  -h, --help         show this help message and exit\n\nRequired named arguments.:\n  --initial INITIAL  Existing path of assets\n  --final\
    \ FINAL      New path for assets\n```\n\n### Assets Access\nThis tool allows you to set asset acess for either folder , collection or image recursively meaning you can add collection access properties\
    \ for multiple assets at the same time.\n\n```\n> geeadd access -h\nusage: geeadd access [-h] --asset ASSET --user USER --role ROLE\n\noptional arguments:\n  -h, --help     show this help message and\
    \ exit\n\nRequired named arguments.:\n  --asset ASSET  This is the path to the earth engine asset whose permission\n                 you are changing folder/collection/image\n  --user USER    \"user:person@example.com\"\
    \ or \"group:team@example.com\" or\n                 \"serviceAccount:account@gserviceaccount.com\", try using\n                 \"allUsers\" to make it public\n  --role ROLE    Choose between reader,\
    \ writer or delete\n```\n\n### Delete\nThe delete is recursive, meaning it will delete also all children assets: images, collections and folders. Use with caution!\n\n```\n> geeadd delete -h\nusage:\
    \ geeadd delete [-h] --id ID\n\noptional arguments:\n  -h, --help  show this help message and exit\n\nRequired named arguments.:\n  --id ID     Full path to asset for deletion. Recursively removes all\n\
    \              folders, collections and images.\n```\n\n### Delete metadata\nThis tool allows you to delete a specific property across a metadata. This is useful to reset any property for an ingested\
    \ collection.\n\n```\n> geeadd delete_metadata -h\nusage: geeadd delete_metadata [-h] --asset ASSET --property PROPERTY\n\noptional arguments:\n  -h, --help           show this help message and exit\n\
    \nRequired named arguments.:\n  --asset ASSET        This is the path to the earth engine asset whose\n                       permission you are changing collection/image\n  --property PROPERTY  Metadata\
    \ name that you want to delete\n```\n\n### Changelog\n\n### v0.4.1\n- Made enhancement [Issue 9](https://github.com/samapriya/gee_asset_manager_addon/issues/9).\n- Search tool now return earth engine\
    \ asset snippet and start and end dates as JSON object.\n- Removed pretty table dependency.\n\n### v0.4.0\n- Improved quota tools to get all quota and asset counts.\n- Added a search tool to search\
    \ GEE catalog using keywords.\n- Improved parsing for app to script tool.\n- Detailed asset root for all root folders and recursively\n- Cancel tasks now allows you to choose, running, ready or specific\
    \ task ids.\n- Assets copy and move now allows you to copy entire folders, collectiona and assets recursively\n- Updated assets access tool\n- Delete metadata allows you to delete metadata for existing\
    \ collection.\n- Overall general improvements and optimization.\n\n#### v0.3.3\n- General improvements\n- Added tool to get underlying code from earthengine app\n\n#### v0.3.1\n- Updated list and asset\
    \ size functions\n- Updated function to generate earthengine asset report\n- General optimization and improvements to distribution\n- Better error handling\n\n#### v0.3.0\n- Removed upload function\n\
      - Upload handles by [geeup](https://github.com/samapriya/geeup)\n- General optimization and improvements to distribution\n- Better error handling\n\n#### v0.2.8\n- Uses poster for streaming upload more\
    \ stable with memory issues and large files\n- Poster dependency limits use to Py 2.7 will fix in the new version\n\n#### v0.2.6\n- Major improvement to move, batch copy, and task reporting\n- Major\
    \ improvements to access tool to allow users read/write permission to entire Folder/collection.\n\n#### v0.2.5\n- Handles bandnames during upload thanks to Lukasz for original upload code\n- Removed\
    \ manifest option, that can be handled by seperate tool (ppipe)\n\n#### v0.2.3\n- Removing the initialization loop error\n\n#### v0.2.2\n- Added improvement to earthengine authorization\n\n#### v0.2.1\n\
      - Added capability to handle PlanetScope 4Band Surface Reflectance Metadata Type\n- General Improvements\n\n#### v0.2.0\n- Tool improvements and enhancements\n\n#### v0.1.9\n- New tool EE_Report was\
    \ added\n\n#### v0.1.8\n- Fixed issues with install\n- Dependencies now part of setup.py\n- Updated Parser and general improvements\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
