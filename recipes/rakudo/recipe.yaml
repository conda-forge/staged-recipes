context:
  name: "rakudo"
  version: "2025.06"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/${{ name }}/${{ name }}/releases/download/${{ version }}/${{ name }}-${{ version }}.tar.gz
  sha256: 202164a266f43091fde1f8cb22fdc45d9cfa03e9961aee708ba92b6d29087a72
  patches:
    - fix-null-chars.patch
    - fix-ignore-errors.patch
    - remove-all-conditionals.patch
    - fix-nqp-libdir-whitespace.patch

build:
  number: 0
  skip: windows or osx
  script:
    # Clean environment variables to remove null characters and excessive whitespace
    - export BUILD_PREFIX="$(printf '%s' "$BUILD_PREFIX" | tr -d '\0' | sed 's/[[:space:]]*$//')"
    - export PREFIX="$(printf '%s' "$PREFIX" | tr -d '\0' | sed 's/[[:space:]]*$//')"


    # Complains about MoarVM, NQP and Rakudo not being in the same directory, so we ignore errors.
    - perl Configure.pl --backends=moar --prefix="${{ PREFIX }}" --with-nqp="$(which nqp)" --no-silent-build --ignore-errors --relocatable
    - make -j${CPU_COUNT}
    - make install

requirements:
  build:
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - perl
    - make
    - nqp
  host:
    - nqp

  run_exports:
    - ${{ pin_subpackage("rakudo", exact=True) }}

# Not reproducible, complains that it cannot find executable. Compiles
# only when environment is manually loaded.
tests:
  - script:
      - raku -e 'say("Hello from Raku")'
      - out=$(raku -e 'say 40+2'); test "$out" = "42"
      - rakudo-debug --version
      - rakudo-debug-m --version
      - perl6 --version
      - perl6-debug --version
      - perl6-m --version
      - perl6-debug-m --version
      - rakudo-m --version
      - raku --version
      - rakudo --version

about:
  homepage: https://rakudo.org/
  license: Artistic-2.0
  license_file: LICENSE
  summary: A Raku Programming Language compiler for the MoarVM, JVM and Javascript virtual machines.
  description: |
    Rakudo is currently the most developed implementation of the Raku language; though there have been other partial implementations in the past. The Rakudo compiler has moar, jvm and js backends. Note that each backend has a slightly different set of features. For historical compilers see https://www.raku.org/compilers/.
  repository: https://github.com/rakudo/rakudo
  documentation: https://rakudo.org/docs

extra:
  recipe-maintainers:
    - remimimimimi
