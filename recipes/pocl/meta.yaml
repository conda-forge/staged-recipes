{% set name = "pocl" %}
{% set version = "0.13" %}
{% set sha256 = "a17f37d8f26819c0c8efc6de2b57f67a0c8a81514fc9cd5005434e49d67499f9" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: http://portablecl.org/downloads/{{ name }}-{{ version }}.tar.gz
  sha256: {{ sha256 }}

  patches:
  # Put binary paths built in pocl into a separate compilation unit
  # so that conda can successfully change them. (If they're not in
  # a separate compilation unit, the compiler has a habit of evaluating
  # strlen() and such at compile time.)
  - paths-in-separate-compilation-unit.patch

  # http://stackoverflow.com/a/39190281
  # https://llvm.org/bugs/show_bug.cgi?id=29162
  - work-around-skylake-codegen.patch

  # Disable unneeded macro workaround
  - fix-macros.patch

  # https://github.com/pocl/pocl/issues/419
  - 0001-Fix-clEnqueueFillBuffer-memory-leak.patch

build:
  number: 4
  skip: True  # [not (linux and py35)]

requirements:
  build:
    - cmake
    - ocl-icd  # [linux]
    - libhwloc
    - libtool
    - pkg-config
    - llvmdev ==3.8.1
    - clangdev ==3.8.1
    - libcxx ==3.8.1
  run:
    - ocl-icd  # [linux]
    - clangdev ==3.8.1
    - libhwloc
    - libtool

test:
  # Some package might need a `test/commands` key to check CLI.
  commands:
    - test -f $PREFIX/etc/OpenCL/vendors/pocl.icd  # [unix]

about:
  home: http://portablecl.org/
  license: MIT
  license_file: LICENSE
  summary: 'Portable Computing Language -- a CPU OpenCL implementation'
  dev_url: https://github.com/pocl/pocl

extra:
  recipe-maintainers:
    - inducer
    - mattwala
