context:
  version: "0.48.0"

package:
  name: xan
  version: ${{ version }}

source:
  url: https://github.com/medialab/xan/archive/refs/tags/${{ version }}.tar.gz
  sha256: 6b59b653b36a42c57a24eea48a977a0302d6e03e11058996cb3ec86fc6f3405f

build:
  number: 0
  script:
    - if: unix
      then:
        - cargo install --no-track --locked --root ${PREFIX} --path .
        - cargo-bundle-licenses --format yaml --output ${SRC_DIR}/THIRDPARTY.yml
    - if: win
      then:
        - cargo install --no-track --locked --root %PREFIX% --path .
        - if errorlevel 1 exit 1
        - cargo-bundle-licenses --format yaml --output %SRC_DIR%/THIRDPARTY.yml
        - if errorlevel 1 exit 1

requirements:
  build:
    - ${{ compiler('rust') }}
    - ${{ stdlib('c') }}
    - ${{ compiler('c') }}
    - cargo-bundle-licenses

tests:
  - script:
      - xan --help

about:
  homepage: https://github.com/medialab/xan
  repository: https://github.com/medialab/xan
  documentation: https://github.com/medialab/xan
  summary: The CSV magician
  description: |
    xan is a command line tool that can be used to process CSV files directly
    from the shell. It has been written in Rust to be as fast as possible, use
    as little memory as possible, and can easily handle very large CSV files
    (Gigabytes). It is also able to leverage parallelism (through multithreading)
    to make some tasks complete as fast as your computer can allow. It can easily
    preview, filter, slice, aggregate, sort, join CSV files, and exposes a large
    collection of composable commands that can be chained together to perform a
    wide variety of typical tasks. xan also leverages its own expression language
    so you can perform complex tasks that cannot be done by relying on the
    simplest commands. This minimalistic language has been tailored for CSV data
    and is faster than evaluating typical dynamically-typed languages such as
    Python, Lua, JavaScript etc.
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
    - CONDA_BUILD_LICENSE.txt

extra:
  recipe-maintainers:
    - apcamargo