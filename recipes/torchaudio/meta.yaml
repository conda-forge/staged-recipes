{% set name = "audio" %}{% set version = "0.10.0" %}
{% set build_variant = environ.get('CONDA_BUILD_VARIANT', 'cpu') %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/pytorch/audio/archive/v0.10.0.tar.gz
  sha256: 9d0413434eefd2a483bf4006440c02940d15e597ab75703aa3ae2c6d5297e7ad

build:
  number: 0
  script: build.sh
  script: bld.bat
  
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}

  host:
    - python
    - setuptools
    - cmake
    - ninja
    - numpy
    - pytorch-mutex 1.0 {{ build_variant }}  # [not osx ]
    {{ environ.get('CONDA_PYTORCH_BUILD_CONSTRAINT', 'pytorch') }}
    {{ environ.get('CONDA_EXTRA_BUILD_CONSTRAINT', '') }}
    {{ environ.get('CONDA_CUDATOOLKIT_CONSTRAINT', '') }}

  run:
    - python
    - numpy
    - pytorch-mutex 1.0 {{ build_variant }}  # [not osx ]
    {{ environ.get('CONDA_PYTORCH_CONSTRAINT', 'pytorch') }}
    {{ environ.get('CONDA_CUDATOOLKIT_CONSTRAINT', '') }}

  {% if build_variant == 'cpu' %}
  run_constrained:
    - cpuonly
  {% elif not osx %}
  run_constrained:
     - cpuonly <0
  {% endif %}

test:
  imports:
    - torchaudio
    - torchaudio.datasets
    - torchaudio.kaldi_io
    - torchaudio.sox_effects
    - torchaudio.transforms

  source_files:
    - test

  requires:
    - pytest
    # Ideally we would test this, but conda doesn't provide librosa
    # - librosa >=0.4.3
    - scipy
    - pytorch-mutex 1.0 {{ build_variant }}  # [not osx ]

about:
  home: https://github.com/pytorch/audio
  license: BSD-2-Clause
  license_file: LICENSE
  summary: 'simple audio I/O for pytorch'

extra:
  recipe-maintainers:
    - ngam
