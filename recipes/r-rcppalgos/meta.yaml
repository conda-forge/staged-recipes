{% set version = '2.4.1' %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-rcppalgos
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/RcppAlgos_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/RcppAlgos/RcppAlgos_{{ version }}.tar.gz
  sha256: ba72decb95fd3b0d9b9c9b44fe03ed2dcedbdd5d8a9d2a1d56ff22ff94d82769

build:
  merge_build_host: True  # [win]
  skip: True  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-rcpp
    - r-rcppthread
    - r-gmp
    - gmp
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-rcpp
    - r-rcppthread
    - r-gmp
    - gmp

test:
  commands:
    - $R -e "library('RcppAlgos')"           # [not win]
    - "\"%R%\" -e \"library('RcppAlgos')\""  # [win]

about:
  home: https://github.com/jwood000/RcppAlgos, https://gmplib.org/, https://github.com/kimwalisch/primesieve,
    http://libdivide.com, https://github.com/kimwalisch/primecount, http://ridiculousfish.com/,
    http://sweet.ua.pt/tos/software/prime_sieve.html
  license: GPL-2.0-only
  summary: "Provides optimized functions and flexible combinatorial iterators implemented in
    C++ with 'Rcpp' for solving problems in combinatorics and computational mathematics.
    Utilizes parallel programming via 'RcppThread' for maximal performance. Also makes
    use of the RMatrix class from the 'RcppParallel' library. There are combination/permutation
    functions with constraint parameters that allow for generation of all results of
    a vector meeting specific criteria (e.g. generating integer partitions/compositions
    or finding all combinations such that the sum is between two bounds). Capable of
    generating specific combinations/permutations (e.g. retrieve only the nth lexicographical
    result) which sets up nicely for parallelization as well as random sampling. Gmp
    support permits exploration where the total number of results is large (e.g. comboSample(10000,
    500, n = 4)). Additionally, there are several high performance number theoretic
    functions that are useful for problems common in computational mathematics. Some
    of these functions make use of the fast integer division library 'libdivide'. The
    primeSieve function is based on the segmented sieve of Eratosthenes implementation
    by Kim Walisch. It is also efficient for large numbers by using the cache friendly
    improvements originally developed by Tom\xE1s Oliveira. Finally, there is a prime
    counting function that implements Legendre's formula based on the work of Kim Walisch."
  license_family: GPL2
  license_file:
    - '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-2'

extra:
  recipe-maintainers:
    - conda-forge/r

# Package: RcppAlgos
# Version: 2.4.1
# Title: High Performance Tools for Combinatorics and Computational Mathematics
# Description: Provides optimized functions and flexible combinatorial iterators implemented in C++ with 'Rcpp' for solving problems in combinatorics and computational mathematics. Utilizes parallel programming via 'RcppThread' for maximal performance. Also makes use of the RMatrix class from the 'RcppParallel' library. There are combination/permutation functions with constraint parameters that allow for generation of all results of a vector meeting specific criteria (e.g. generating integer partitions/compositions or finding all combinations such that the sum is between two bounds). Capable of generating specific combinations/permutations (e.g. retrieve only the nth lexicographical result) which sets up nicely for parallelization as well as random sampling. Gmp support permits exploration where the total number of results is large (e.g. comboSample(10000, 500, n = 4)). Additionally, there are several high performance number theoretic functions that are useful for problems common in computational mathematics. Some of these functions make use of the fast integer division library 'libdivide'. The primeSieve function is based on the segmented sieve of Eratosthenes implementation by Kim Walisch. It is also efficient for large numbers by using the cache friendly improvements originally developed by Tomas Oliveira. Finally, there is a prime counting function that implements Legendre's formula based on the work of Kim Walisch.
# URL: https://github.com/jwood000/RcppAlgos, https://gmplib.org/, https://github.com/kimwalisch/primesieve, http://libdivide.com, https://github.com/kimwalisch/primecount, http://ridiculousfish.com/, http://sweet.ua.pt/tos/software/prime_sieve.html
# BugReports: https://github.com/jwood000/RcppAlgos/issues
# Imports: gmp, Rcpp, methods
# LinkingTo: Rcpp, RcppThread
# Suggests: testthat, numbers, microbenchmark, knitr
# License: GPL (>= 2)
# LazyData: TRUE
# SystemRequirements: C++11, gmp (>= 4.2.3)
# VignetteBuilder: knitr
# NeedsCompilation: yes
# Author: Joseph Wood
# Maintainer: Joseph Wood <jwood000@gmail.com>
# Encoding: UTF-8
# RoxygenNote: 6.1.1
# Packaged: 2020-03-23 17:58:42 UTC; josephwood
# Repository: CRAN
# Date/Publication: 2020-03-24 07:10:04 UTC
