{% set name = "parso" %}
{% set version = "0.1.1" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "5815f3fe254e5665f3c5d6f54f086c2502035cb631a91341591b5a564203cffb" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - setuptools
  run:
    - python

test:
  imports:
    - parso
    - parso.pgen2
    - parso.python

about:
  home: https://github.com/davidhalter/parso
  license: MIT
  license_family: MIT
  license_file: ''
  summary: A Python Parser
  description: "###################################################################\nparso - A Python Parser\n###################################################################\n\n.. image:: https://secure.travis-ci.org/davidhalter/parso.png?branch=master\n\
    \    :target: http://travis-ci.org/davidhalter/parso\n    :alt: Travis-CI build status\n\n.. image:: https://coveralls.io/repos/davidhalter/parso/badge.png?branch=master\n    :target: https://coveralls.io/r/davidhalter/parso\n\
    \    :alt: Coverage Status\n\n.. image:: https://raw.githubusercontent.com/davidhalter/parso/master/docs/_static/logo_characters.png\n\nParso is a Python parser that supports error recovery and round-trip\
    \ parsing\nfor different Python versions (in multiple Python versions). Parso is also able\nto list multiple syntax errors in your python file.\n\nParso has been battle-tested by jedi_. It was pulled\
    \ out of jedi to be useful\nfor other projects as well.\n\nParso consists of a small API to parse Python and analyse the syntax tree.\n\nA simple example:\n\n.. code-block:: python\n\n    >>> import\
    \ parso\n    >>> module = parso.parse('hello + 1', version=\"3.6\")\n    >>> expr = module.children[0]\n    >>> expr\n    PythonNode(arith_expr, [<Name: hello@1,0>, <Operator: +>, <Number: 1>])\n  \
    \  >>> print(expr.get_code())\n    hello + 1\n    >>> name = expr.children[0]\n    >>> name\n    <Name: hello@1,0>\n    >>> name.end_pos\n    (1, 5)\n    >>> expr.end_pos\n    (1, 9)\n\nTo list multiple\
    \ issues:\n\n.. code-block:: python\n\n    >>> grammar = parso.load_grammar()\n    >>> module = grammar.parse('foo +\\nbar\\ncontinue')\n    >>> error1, error2 = grammar.iter_errors(module)\n    >>>\
    \ error1.message\n    'SyntaxError: invalid syntax'\n    >>> error2.message\n    \"SyntaxError: 'continue' not properly in loop\"\n\nResources\n=========\n\n- `Testing <http://parso.readthedocs.io/en/latest/docs/development.html#testing>`_\n\
      - `PyPI <https://pypi.python.org/pypi/parso>`_\n- `Docs <https://parso.readthedocs.org/en/latest/>`_\n- Uses `semantic versioning <http://semver.org/>`_\n\nInstallation\n============\n\n    pip install\
    \ parso\n\nFuture\n======\n\n- There will be better support for refactoring and comments. Stay tuned.\n- There's a WIP PEP8 validator. It's however not in a good shape, yet.\n\nKnown Issues\n============\n\
    \n- `async`/`await` are already used as keywords in Python3.6.\n- `from __future__ import print_function` is not ignored.\n\n\nAcknowledgements\n================\n\n- Guido van Rossum (@gvanrossum)\
    \ for creating the parser generator pgen2\n  (originally used in lib2to3).\n- `Salome Schneider <https://www.crepes-schnaegg.ch/cr%C3%AApes-schn%C3%A4gg/kunst-f%C3%BCrs-cr%C3%AApes-mobil/>`_\n  for\
    \ the extremely awesome parso logo.\n\n\n.. _jedi: https://github.com/davidhalter/jedi\n\n\n.. :changelog:\n\nChangelog\n---------\n\n\n0.1.1 (2017-11-05)\n+++++++++++++++++++\n\n- Fixed a few bugs\
    \ in the caching layer\n- Added support for Python 3.7\n\n0.1.0 (2017-09-04)\n+++++++++++++++++++\n\n- Pulling the library out of Jedi. Some APIs will definitely change.\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers:
    - iron0012
