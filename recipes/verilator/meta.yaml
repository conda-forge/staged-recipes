{% set name = "verilator" %}
{% set version = "4.028" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: cb13e4f54920e6e35ef51a96476d0547d2a60fdc0c61198df4bcd4d29c246680
  patches:
    - patches/0001-Use-usr-bin-env-perl-in-lieu-of-usr-bin-perl.patch

build:
  number: 0
  skip: True  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - autoconf
    - make
    - bison
    - python
    - perl
  host:
    - zlib
    - flex  # need to link against it for target
  run:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - make
    - python
    - perl

test:
  source_files:
    - examples/make_hello_c
  commands:
    - verilator --version
    - cd examples/make_hello_c && make clean default

about:
  home: https://veripool.org/wiki/verilator
  license: GPL-3.0-only OR Artistic-2.0
  license_file: 
    - LICENSE
    - Artistic
  summary: 'The fastest Verilog HDL simulator'

  description: |
      Welcome to Verilator, the fastest Verilog HDL simulator.
        • Accepts synthesizable Verilog or SystemVerilog
        • Performs lint code-quality checks
        • Compiles into multithreaded C++, or SystemC
        • Creates XML to front-end your own tools
      Fast
        • Outperforms many commercial simulators
        • Single- and multi-threaded output models
      Widely Used
        • Wide industry and academic deployment
        • Out-of-the-box support from Arm, and RISC-V vendor IP
      Community Driven & Openly Licensed
        • Guided by the CHIPS Alliance and Linux Foundation
        • Open, and free as in both speech and beer
        • More simulation for your verification budget
      Commercial Support Available
        • Commercial support contracts
        • Design support contracts
        • Enhancement contracts
  doc_url: https://www.veripool.org/projects/verilator/wiki/Documentation
  dev_url: https://github.com/verilator/verilator

extra:
  recipe-maintainers:
    - timsnyder
