# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "trisbm" %}
{% set version = "0.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  url: https://github.com/fvalle1/trisbm/archive/refs/tags/{{ version }}.tar.gz
  # and otherwise fall back to archive: 
  sha256: 99e069b23967300aa3b36f7e9ce29776adcfb4e6b085bec57d5c1fbc2f9e1d0e

build:
   # noarch: python
  skip: true #[win]
  number: 0
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - numpy
    - boost-cpp
    - boost
    - expat
    - scipy >=1.0
    - gmp
    - cgal-cpp 5.0*
    - sparsehash 2.0*
    - cairomm
    - pycairo
    - glib
    - graph-tool
    - matplotlib
    - pandas
    - cloudpickle
  run:
    - python
    - llvm-openmp  # [osx]
    - boost-cpp
    - boost
    - expat
    - scipy >=1.0
    - {{ pin_compatible('numpy') }}
    - gmp
    - sparsehash >=2.0
    - cairomm
    - pycairo
    - gdk-pixbuf
    - librsvg
    - gtk3
    - pygobject
    - matplotlib-base
    - zstandard
    - matplotlib
    - pandas
    - cloudpickle
    - graph-tool

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - trisbm
  commands:
     python3 -c "from trisbm import trisbm; model=trisbm()"

about:
  home: https://github.com/fvalle1/trisbm
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: MIT
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: MIT
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE.txt
  summary: 'Simple, fast, extensible JSON encoder/decoder for Python'
  # The remaining entries in this section are optional, but recommended.
  description: |
    Package to run tripartite Stocastich Block Modeling.
  doc_url: https://fvalle1.github.io/trisbm/
  dev_url: https://github.com/fvalle1/trisbm

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - fvalle1