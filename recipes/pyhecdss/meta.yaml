{% set name = "pyhecdss" %}
{% set version = "1.4.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://github.com/pyhecdss/pyhecdss/releases/download/{{ version }}/pyhecdss-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  #https://github.com/CADWRDeltaModeling/pyhecdss/archive/refs/tags/1.4.0.tar.gz
  url: https://github.com/CADWRDeltaModeling/pyhecdss/archive/refs/tags/1.4.0.tar.gz
  # sha from this command >>> curl -sL https://github.com/CADWRDeltaModeling/pyhecdss/archive/refs/tags/1.4.0.tar.gz | openssl sha256
  sha256: 4b0a49f67ba12fe91a3e3e61c8369c4649b92f02fa48f631f78b4056d5d8495e
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - swig >=4
  host:
    - python
    - pip
    - numpy >=1.21
    - pandas >=0.23

  run:
    - python
    - numpy >=1.21
    - pandas >=0.23

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - pyhecdss
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pip
    - pytest

  commands:
    - pip check

about:
  home: https://github.com/pyhecdss/pyhecdss
  summary: 'Python 3 interface to the HECLIB for 64 bit using SWIG. Primarily to provide access to HEC-DSS format'
  description: |
    Python 3 interface to the HECLIB for 64 bit using SWIG. Primarily to provide access to HEC-DSS format
  license: MIT
  license_family: MIT
  license_file: LICENSE
  # The doc_url and dev_url are optional.
  doc_url: https://cadwrdeltamodeling.github.io/pyhecdss/
  dev_url: https://github.com/CADWRDeltaModeling/pyhecdss

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - dwr-psandhu
