@PACKAGE_INIT@

# SpeexDSPConfig.cmake - CMake configuration file for SpeexDSP
# This file provides configuration for finding and using SpeexDSP in other CMake projects

include(CMakeFindDependencyMacro)

# Information about this installation
set(SpeexDSP_VERSION "@PROJECT_VERSION@")
set(SpeexDSP_VERSION_MAJOR "@PROJECT_VERSION_MAJOR@")
set(SpeexDSP_VERSION_MINOR "@PROJECT_VERSION_MINOR@")
set(SpeexDSP_VERSION_PATCH "@PROJECT_VERSION_PATCH@")

# Build configuration
set(SpeexDSP_SHARED_LIBS @BUILD_SHARED_LIBS@)
set(SpeexDSP_FIXED_POINT @ENABLE_FIXED_POINT@)
set(SpeexDSP_FLOAT_API @ENABLE_FLOAT_API@)
set(SpeexDSP_SSE @ENABLE_SSE@)
set(SpeexDSP_NEON @ENABLE_NEON@)

# Check if we're using the same build type as when SpeexDSP was built
set(_speexdsp_build_type "@CMAKE_BUILD_TYPE@")

# Find required system libraries based on platform
if(WIN32)
    find_dependency(winmm REQUIRED)
elseif(UNIX AND NOT APPLE)
    find_library(MATH_LIBRARY m)
    if(MATH_LIBRARY)
        set(SpeexDSP_SYSTEM_LIBS ${MATH_LIBRARY})
    endif()
endif()

# Set the include directories
set_and_check(SpeexDSP_INCLUDE_DIR "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")
set_and_check(SpeexDSP_INCLUDE_DIRS "@PACKAGE_CMAKE_INSTALL_INCLUDEDIR@")

# Set the library directories
set_and_check(SpeexDSP_LIBRARY_DIR "@PACKAGE_CMAKE_INSTALL_LIBDIR@")
set_and_check(SpeexDSP_LIBRARY_DIRS "@PACKAGE_CMAKE_INSTALL_LIBDIR@")

# Include the target exports
include("${CMAKE_CURRENT_LIST_DIR}/SpeexDSPTargets.cmake")

# Set the libraries variable
set(SpeexDSP_LIBRARIES SpeexDSP::speexdsp)
set(SpeexDSP_LIBRARY SpeexDSP::speexdsp)

# Legacy variables for compatibility
set(SPEEXDSP_FOUND TRUE)
set(SPEEXDSP_INCLUDE_DIR ${SpeexDSP_INCLUDE_DIR})
set(SPEEXDSP_INCLUDE_DIRS ${SpeexDSP_INCLUDE_DIRS})
set(SPEEXDSP_LIBRARIES ${SpeexDSP_LIBRARIES})
set(SPEEXDSP_LIBRARY ${SpeexDSP_LIBRARY})
set(SPEEXDSP_VERSION ${SpeexDSP_VERSION})

# Provide a summary of what was found
if(NOT SpeexDSP_FIND_QUIETLY)
    message(STATUS "Found SpeexDSP: ${SpeexDSP_VERSION}")
    message(STATUS "  Include dirs: ${SpeexDSP_INCLUDE_DIRS}")
    message(STATUS "  Libraries: ${SpeexDSP_LIBRARIES}")
    if(SpeexDSP_FIXED_POINT)
        message(STATUS "  Using fixed-point arithmetic")
    else()
        message(STATUS "  Using floating-point arithmetic")
    endif()
    if(SpeexDSP_SSE)
        message(STATUS "  SSE optimizations enabled")
    endif()
    if(SpeexDSP_NEON)
        message(STATUS "  NEON optimizations enabled")
    endif()
endif()

check_required_components(SpeexDSP)
