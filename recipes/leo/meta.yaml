{% set name = "leo" %}
#{% set version = "3.8.2" %}
{% set version = "conda" %}
{% set root = "../../../.." %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  #url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive: 
  # url: https://github.com/simplejson/simplejson/archive/{{ version }}.tar.gz
  url: "https://github.com/leo-editor/leo-editor/archive/{{ version }}.tar.gz" 
  sha256: 77b1415117842e86107d95ca5b0e1afae2c8d92059f40b446b41db4e1051443b

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  script: "{{ PYTHON }} -m pip install . -vv"
  skip: True  # [py<36]
  
  entry_points:
    - leo = leo.core.runLeo:run
    - leo-c = leo.core.runLeo:run_console
    - leo-console = leo.core.runLeo:run_console
  skip_compile_pyc:
     - "*/leo/plugins/test/*.py"  # mainly to avoid syntax error plugin test
  
requirements:
  build:
    - semantic_version

  host:
    - python
    - pip
  run:
    - python

test:
  imports:
    - leo

app:
    entry: Leo Editor
    summary: "Leo is an Outliner, Editor, and Personal Information Manager written in 100% Python."
    icon: LeoApp.ico

about:
  home: "https://leoeditor.com"
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: "Leo is an Outliner, Editor, and Personal Information Manager written in 100% Python."
  dev_url: https://github.com/leo-editor/leo-editor/

extra:
  recipe-maintainers:
    - maphew
