{% set version = "3.0.2209" %}

package:
  name: parsec
  version: {{ version }}

source:
  url: https://github.com/ICLDisco/parsec/archive/refs/tags/parsec-{{ version }}.tar.gz
  sha256: 67d383d076991484cb2a265f56420abdea7cc1f329c63ac65a3e96fbfb6cc295

build:
  number: 0
  run_exports:
    - {{ pin_subpackage('parsec', max_pin='x.x') }}
  requirements:
    build:
      - {{ stdlib('c') }}                 # [unix]
      - {{ compiler('c') }}               # [unix]
      - {{ compiler('cxx') }}             # [unix]
      - cmake
      - ninja

    host:
      - papi
      - libhwloc

    test:
      commands:
        # no test so far
about:
  home: https://github.com/ICLDisco/parsec
  summary: 'PaRSEC: the Parallel Runtime Scheduler and Execution Controller for micro-tasks on distributed heterogeneous systems.'
  license: BSD 3-Clause
  license_file: LICENSE.txt
  description: |
    PaRSEC is a generic framework for architecture aware scheduling and management of 
    micro-tasks on distributed many-core heterogeneous architectures. Applications are 
    expressed as a Direct Acyclic Graph of tasks with labeled edges designating data dependencies. 
    PaRSEC assigns computation threads to the cores, overlaps communications and computations 
    between nodes as well as between host and accelerators (like GPUs). It achieves these features 
    by using a dynamic, fully-distributed scheduler based on architectural features such as NUMA 
    nodes and GPU awareness, as well as algorithmic features such as data reuse.
    Several high level languages are proposed to expose the DAG from the applications. 
    You can either build the DAG as you go, by using a mechanism called dynamic task 
    discovery (DTD), or use the Parameterized Task Graph language (PTG) to expose a 
    compact problem-size independent format that can be queried on-demand to discover 
    data dependencies in a totally distributed fashion.
    The framework includes libraries, a runtime system, and development tools to help 
    application developers tackle the difficult task of porting their applications to 
    highly heterogeneous and diverse environment.
  doc_url: https://github.com/icldisco/parsec/wiki
  dev_url: https://github.com/ICLDisco/parsec
extra:
  recipe-maintainers:
    - looooo
