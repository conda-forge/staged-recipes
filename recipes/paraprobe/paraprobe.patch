diff --git a/code/paraprobe-autoreporter/src/python/__init__.py b/code/paraprobe-autoreporter/src/python/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-autoreporter/src/python/paraprobe_autoreporter.py b/code/paraprobe-autoreporter/src/python/paraprobe_autoreporter.py
index 0efd8f5..7391ba3 100644
--- a/code/paraprobe-autoreporter/src/python/paraprobe_autoreporter.py
+++ b/code/paraprobe-autoreporter/src/python/paraprobe_autoreporter.py
@@ -4,9 +4,9 @@
 convenience wrapper to simply access to the guru interface of autoreporter
 """
 
-from wizard.ranger_report import AutoReporterRanger
-from wizard.surfacer_report import AutoReporterSurfacer
-from wizard.distancer_report import AutoReporterDistancer
-from wizard.tessellator_report import AutoReporterTessellator
-from wizard.nanochem_report import AutoReporterNanochem
+from paraprobe_autoreporter.wizard.ranger_report import AutoReporterRanger
+from paraprobe_autoreporter.wizard.surfacer_report import AutoReporterSurfacer
+from paraprobe_autoreporter.wizard.distancer_report import AutoReporterDistancer
+from paraprobe_autoreporter.wizard.tessellator_report import AutoReporterTessellator
+from paraprobe_autoreporter.wizard.nanochem_report import AutoReporterNanochem
 # from wizard.intersector_report import AutoReporterIntersector
\ No newline at end of file
diff --git a/code/paraprobe-autoreporter/src/python/utils/thermodynamicphases.py b/code/paraprobe-autoreporter/src/python/utils/thermodynamicphases.py
index 962c960..1f59ae5 100644
--- a/code/paraprobe-autoreporter/src/python/utils/thermodynamicphases.py
+++ b/code/paraprobe-autoreporter/src/python/utils/thermodynamicphases.py
@@ -5,7 +5,7 @@ definitions for distinguishing thermodynamic phases
 """
 
 import numpy as np
-import utils.numerics as nums
+import paraprobe_autoreporter.utils.numerics as nums
 
 UNKNOWNPHASE=0
 GAMMAPRIME=1
diff --git a/code/paraprobe-autoreporter/src/python/wizard/distancer_report.py b/code/paraprobe-autoreporter/src/python/wizard/distancer_report.py
index 82b0592..6fe4afd 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/distancer_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/distancer_report.py
@@ -9,9 +9,9 @@ import numpy as np
 
 import h5py
 
-import metadata.h5distancer as nx
+import paraprobe_autoreporter.metadata.h5distancer as nx
 
-import wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
+import paraprobe_autoreporter.wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
 
 
 class AutoReporterDistancer():
diff --git a/code/paraprobe-autoreporter/src/python/wizard/intersector_report.py b/code/paraprobe-autoreporter/src/python/wizard/intersector_report.py
index 1e99520..20ec8d6 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/intersector_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/intersector_report.py
@@ -13,9 +13,9 @@ import numpy as np
 
 import h5py
 
-import metadata.h5nanochem as nx_chm
+import paraprobe_autoreporter.metadata.h5nanochem as nx_chm
 
-import metadata.h5intersector as nx_isct
+import paraprobe_autoreporter.metadata.h5intersector as nx_isct
 
 # import wizard.plotting.autoreporter.scatter_plot_property_set_over_value_set as mysct
 
diff --git a/code/paraprobe-autoreporter/src/python/wizard/nanochem_report.py b/code/paraprobe-autoreporter/src/python/wizard/nanochem_report.py
index 58704b0..b18406f 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/nanochem_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/nanochem_report.py
@@ -15,13 +15,13 @@ from ase.data import chemical_symbols
 
 from ase.data import atomic_numbers
 
-import metadata.h5nanochem as nx
+import paraprobe_autoreporter.metadata.h5nanochem as nx
 
-import wizard.plotting.autoreporter.scatter_plot_property_set_over_value_set as mysct
+import paraprobe_autoreporter.wizard.plotting.autoreporter.scatter_plot_property_set_over_value_set as mysct
 
-import wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
+import paraprobe_autoreporter.wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
 
-import wizard.plotting.autoreporter.composition_plots as mycmp
+import paraprobe_autoreporter.wizard.plotting.autoreporter.composition_plots as mycmp
 
 
 def bisection(array, value):
diff --git a/code/paraprobe-autoreporter/src/python/wizard/ranger_report.py b/code/paraprobe-autoreporter/src/python/wizard/ranger_report.py
index 7c8cfe2..1d69baf 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/ranger_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/ranger_report.py
@@ -9,11 +9,11 @@ import numpy as np
 
 import h5py
 
-import metadata.h5ranger as nx
+import paraprobe_autoreporter.metadata.h5ranger as nx
 
 # import utils.corporate_design
 
-from thirdparty.mandatory.nomad.aptfim_io_utils import NxIon
+from paraprobe_autoreporter.wizard.thirdparty.mandatory.nomad.aptfim_io_utils import NxIon
 
 
 class AutoReporterRanger():
diff --git a/code/paraprobe-autoreporter/src/python/wizard/surfacer_report.py b/code/paraprobe-autoreporter/src/python/wizard/surfacer_report.py
index 7538f35..61a6077 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/surfacer_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/surfacer_report.py
@@ -9,7 +9,7 @@ import numpy as np
 
 import h5py
 
-import metadata.h5surfacer as nx
+import paraprobe_autoreporter.metadata.h5surfacer as nx
 
 
 class AutoReporterSurfacer():
diff --git a/code/paraprobe-autoreporter/src/python/wizard/tessellator_report.py b/code/paraprobe-autoreporter/src/python/wizard/tessellator_report.py
index c744426..e6c3589 100644
--- a/code/paraprobe-autoreporter/src/python/wizard/tessellator_report.py
+++ b/code/paraprobe-autoreporter/src/python/wizard/tessellator_report.py
@@ -9,9 +9,9 @@ import numpy as np
 
 import h5py
 
-import metadata.h5tessellator as nx
+import paraprobe_autoreporter.metadata.h5tessellator as nx
 
-import wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
+import paraprobe_autoreporter.wizard.plotting.autoreporter.line_plot_property_set_for_fixed_value as mycdf
 
 
 class AutoReporterTessellator():
diff --git a/code/paraprobe-autoreporter/src/python/wizard/thirdparty/__init__.py b/code/paraprobe-autoreporter/src/python/wizard/thirdparty/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/__init__.py b/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/systeminfo/__init__.py b/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/systeminfo/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/xdmf/__init__.py b/code/paraprobe-autoreporter/src/python/wizard/thirdparty/mandatory/xdmf/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-parmsetup/src/python/__init__.py b/code/paraprobe-parmsetup/src/python/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-parmsetup/src/python/nexus/__init__.py b/code/paraprobe-parmsetup/src/python/nexus/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_distancer.py b/code/paraprobe-parmsetup/src/python/nexus/nx_distancer.py
index 04a2643..cb88949 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_distancer.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_distancer.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 distancer_template = {}
 
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_intersector.py b/code/paraprobe-parmsetup/src/python/nexus/nx_intersector.py
index fcd4ef2..8cece50 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_intersector.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_intersector.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 intersector_template = {}
 
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_nanochem.py b/code/paraprobe-parmsetup/src/python/nexus/nx_nanochem.py
index 183b881..65328d2 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_nanochem.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_nanochem.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 nanochem_template = {}
 
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_ranger.py b/code/paraprobe-parmsetup/src/python/nexus/nx_ranger.py
index 59a7f69..b105124 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_ranger.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_ranger.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 ranger_template = {
     "/ENTRY[entry]/PROCESS[process]/dataset/dataset_name_mass_to_charge": NodeInfo(),
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_surfacer.py b/code/paraprobe-parmsetup/src/python/nexus/nx_surfacer.py
index 3bdfc39..1f940f9 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_surfacer.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_surfacer.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 surfacer_template = {}
 """
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_tessellator.py b/code/paraprobe-parmsetup/src/python/nexus/nx_tessellator.py
index 5730ca0..1872738 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_tessellator.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_tessellator.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 tessellator_template = {}
 
diff --git a/code/paraprobe-parmsetup/src/python/nexus/nx_transcoder.py b/code/paraprobe-parmsetup/src/python/nexus/nx_transcoder.py
index 0c39688..0c35028 100644
--- a/code/paraprobe-parmsetup/src/python/nexus/nx_transcoder.py
+++ b/code/paraprobe-parmsetup/src/python/nexus/nx_transcoder.py
@@ -2,7 +2,7 @@
 
 import numpy as np
 
-from utils.nexus import specific_nxdl_path, NodeInfo
+from paraprobe_parmsetup.utils.nexus import specific_nxdl_path, NodeInfo
 
 
 transcoder_template = {
diff --git a/code/paraprobe-parmsetup/src/python/paraprobe_parmsetup.py b/code/paraprobe-parmsetup/src/python/paraprobe_parmsetup.py
index 37aa4ab..fb880cf 100644
--- a/code/paraprobe-parmsetup/src/python/paraprobe_parmsetup.py
+++ b/code/paraprobe-parmsetup/src/python/paraprobe_parmsetup.py
@@ -4,14 +4,14 @@
 convenience wrapper to simply access to the guru interface of paraprobe
 """
 
-from tools.transcoder_guru import ParmsetupTranscoder
-from tools.ranger_guru import ParmsetupRanger
-from tools.surfacer_guru import ParmsetupSurfacer
-from tools.distancer_guru import ParmsetupDistancer
-from tools.tessellator_guru import ParmsetupTessellator
-from tools.nanochem_guru import ParmsetupNanochem
-from tools.intersector_guru import ParmsetupIntersector
+from paraprobe_parmsetup.tools.transcoder_guru import ParmsetupTranscoder
+from paraprobe_parmsetup.tools.ranger_guru import ParmsetupRanger
+from paraprobe_parmsetup.tools.surfacer_guru import ParmsetupSurfacer
+from paraprobe_parmsetup.tools.distancer_guru import ParmsetupDistancer
+from paraprobe_parmsetup.tools.tessellator_guru import ParmsetupTessellator
+from paraprobe_parmsetup.tools.nanochem_guru import ParmsetupNanochem
+from paraprobe_parmsetup.tools.intersector_guru import ParmsetupIntersector
 
-from utils.primscontinuum import RoiRotatedCuboid
-from utils.primscontinuum import RoiRotatedCylinder
-from utils.primscontinuum import RoiSphere
+from paraprobe_parmsetup.utils.primscontinuum import RoiRotatedCuboid
+from paraprobe_parmsetup.utils.primscontinuum import RoiRotatedCylinder
+from paraprobe_parmsetup.utils.primscontinuum import RoiSphere
diff --git a/code/paraprobe-parmsetup/src/python/tools/__init__.py b/code/paraprobe-parmsetup/src/python/tools/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-parmsetup/src/python/tools/distancer_guru.py b/code/paraprobe-parmsetup/src/python/tools/distancer_guru.py
index dc34904..b104570 100644
--- a/code/paraprobe-parmsetup/src/python/tools/distancer_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/distancer_guru.py
@@ -9,17 +9,17 @@ import numpy as np
 
 import datetime
 
-from utils.numerics import TOOLS_IN_TOOLBOX, EPSILON
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX, EPSILON
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_distancer import distancer_template
+from paraprobe_parmsetup.nexus.nx_distancer import distancer_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupDistancer(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/tools/intersector_guru.py b/code/paraprobe-parmsetup/src/python/tools/intersector_guru.py
index e42ad02..cfa11bd 100644
--- a/code/paraprobe-parmsetup/src/python/tools/intersector_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/intersector_guru.py
@@ -12,18 +12,18 @@ import datetime
 from ase.data import atomic_numbers
 from ase.data import chemical_symbols
 
-from utils.numerics import TOOLS_IN_TOOLBOX, EPSILON, \
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX, EPSILON, \
     MAX_NUMBER_OF_ATOMS_PER_MOLECULAR_ION
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_intersector import intersector_template
+from paraprobe_parmsetup.nexus.nx_intersector import intersector_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupIntersector(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/tools/nanochem_guru.py b/code/paraprobe-parmsetup/src/python/tools/nanochem_guru.py
index e3f637e..6e3ef67 100644
--- a/code/paraprobe-parmsetup/src/python/tools/nanochem_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/nanochem_guru.py
@@ -12,20 +12,20 @@ import datetime
 from ase.data import atomic_numbers
 from ase.data import chemical_symbols
 
-from utils.numerics import TOOLS_IN_TOOLBOX, EPSILON, \
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX, EPSILON, \
     MAX_NUMBER_OF_ATOMS_PER_MOLECULAR_ION
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_nanochem import nanochem_template
+from paraprobe_parmsetup.nexus.nx_nanochem import nanochem_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
-from utils.primscontinuum import \
+from paraprobe_parmsetup.utils.primscontinuum import \
     RoiRotatedCuboid, RoiRotatedCylinder, RoiSphere
 
 
diff --git a/code/paraprobe-parmsetup/src/python/tools/ranger_guru.py b/code/paraprobe-parmsetup/src/python/tools/ranger_guru.py
index 0157e5e..c65a2cf 100644
--- a/code/paraprobe-parmsetup/src/python/tools/ranger_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/ranger_guru.py
@@ -9,17 +9,17 @@ import numpy as np
 
 import datetime
 
-from utils.numerics import TOOLS_IN_TOOLBOX
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_ranger import ranger_template
+from paraprobe_parmsetup.nexus.nx_ranger import ranger_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupRanger(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/tools/spatstat.py b/code/paraprobe-parmsetup/src/python/tools/spatstat.py
index a47e59e..ff29c9c 100644
--- a/code/paraprobe-parmsetup/src/python/tools/spatstat.py
+++ b/code/paraprobe-parmsetup/src/python/tools/spatstat.py
@@ -7,10 +7,10 @@ Python class to be used in Jupyter notebooks for creating HDF5 configuration fil
 #import sys, glob, h5py
 #from pathlib import Path
 
-import utils.numerics as nums
-from utils.primscontinuum import roi_rotated_cuboid, roi_rotated_cylinder, roi_rotated_sphere
-from utils.confignode import config_node
-from utils.supertool import paraprobe_base
+import paraprobe_parmsetup.utils.numerics as nums
+from paraprobe_parmsetup.utils.primscontinuum import roi_rotated_cuboid, roi_rotated_cylinder, roi_rotated_sphere
+from paraprobe_parmsetup.utils.confignode import config_node
+from paraprobe_parmsetup.utils.supertool import paraprobe_base
 
 import numpy as np
 import h5py
diff --git a/code/paraprobe-parmsetup/src/python/tools/surfacer_guru.py b/code/paraprobe-parmsetup/src/python/tools/surfacer_guru.py
index b8c6312..379d49e 100644
--- a/code/paraprobe-parmsetup/src/python/tools/surfacer_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/surfacer_guru.py
@@ -9,17 +9,17 @@ import numpy as np
 
 import datetime
 
-from utils.numerics import TOOLS_IN_TOOLBOX, EPSILON
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX, EPSILON
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_surfacer import surfacer_template
+from paraprobe_parmsetup.nexus.nx_surfacer import surfacer_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupSurfacer(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/tools/tessellator_guru.py b/code/paraprobe-parmsetup/src/python/tools/tessellator_guru.py
index 86ed1b1..10f20bd 100644
--- a/code/paraprobe-parmsetup/src/python/tools/tessellator_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/tessellator_guru.py
@@ -9,17 +9,17 @@ import numpy as np
 
 import datetime
 
-from utils.numerics import TOOLS_IN_TOOLBOX
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_tessellator import tessellator_template
+from paraprobe_parmsetup.nexus.nx_tessellator import tessellator_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupTessellator(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/tools/transcoder_guru.py b/code/paraprobe-parmsetup/src/python/tools/transcoder_guru.py
index f9e89d7..aa09c4e 100644
--- a/code/paraprobe-parmsetup/src/python/tools/transcoder_guru.py
+++ b/code/paraprobe-parmsetup/src/python/tools/transcoder_guru.py
@@ -9,17 +9,17 @@ import numpy as np
 
 import datetime
 
-from utils.numerics import TOOLS_IN_TOOLBOX
+from paraprobe_parmsetup.utils.numerics import TOOLS_IN_TOOLBOX
 
-from utils.hashing import get_file_hashvalue
+from paraprobe_parmsetup.utils.hashing import get_file_hashvalue
 
-from utils.gitinfo import get_repo_last_commit
+from paraprobe_parmsetup.utils.gitinfo import get_repo_last_commit
 
-from utils.nodeinfo import NodeInfo
+from paraprobe_parmsetup.utils.nodeinfo import NodeInfo
 
-from nexus.nx_transcoder import transcoder_template
+from paraprobe_parmsetup.nexus.nx_transcoder import transcoder_template
 
-from utils.supertool import ParmsetupBase
+from paraprobe_parmsetup.utils.supertool import ParmsetupBase
 
 
 class ParmsetupTranscoder(ParmsetupBase):
diff --git a/code/paraprobe-parmsetup/src/python/utils/felfergroup.py b/code/paraprobe-parmsetup/src/python/utils/felfergroup.py
index b8d0eb9..0f58a34 100644
--- a/code/paraprobe-parmsetup/src/python/utils/felfergroup.py
+++ b/code/paraprobe-parmsetup/src/python/utils/felfergroup.py
@@ -50,9 +50,9 @@ tmp = iontype.replace('+', '').replace('-', '').split(' ')
 tmp.pop()
 ivec = []
 for isotope in tmp:
-    neutron =  # if regex prefixed numbers?
+    #neutron =  # if regex prefixed numbers?
     neutron = 0  # else
-    chemical_symbol = # strip these
+    #chemical_symbol = # strip these
     proton = atomic_numbers[chemical_symbol]
     ivec.append(hash_isotope(proton, neutron))
 del tmp
diff --git a/code/paraprobe-ranger/CMakeLists.txt b/code/paraprobe-ranger/CMakeLists.txt
index 864e8aa..caa0926 100755
--- a/code/paraprobe-ranger/CMakeLists.txt
+++ b/code/paraprobe-ranger/CMakeLists.txt
@@ -11,16 +11,8 @@ project(${MYPROJECTNAME} LANGUAGES CXX)
 set(CMAKE_BUILD_DIR "build")
 
 
-#pull general information about external libraries and paths related to paraprobe
-include("../PARAPROBE.Dependencies.cmake")
-message([STATUS] "MYPROJECTPATH: ${MYPROJECTPATH}")
-message([STATUS] "MYUTILSPATH: ${MYUTILSPATH}")
-message([STATUS] "MYHDF5PATH: ${MYHDFPATH}")
-message([STATUS] "MYVOROXXPATH: ${MYVOROXXPATH}")
+message([STATUS] "CONDA_PATH: ${CONDA_PREFIX}")
 
-#compose a tool-specific path
-set(MYTOOLPATH "${MYPROJECTPATH}/code/paraprobe-ranger/")
-message([STATUS] "MYTOOLPATH: ${MYTOOLPATH}")
 
 set(EMPLOY_GNUCOMPILER ON)
 message([STATUS] "MYCCC_COMPILER: __${CMAKE_C_COMPILER}__")
@@ -44,36 +36,44 @@ endif()
 ##here advanced users might want/need to make modifications if they use non default places for thirdparty libraries#############
 ################################################################################################################################
 #HDF5 local installation for advanced I/O, collecting metadata and bundle analysis results together
-include_directories("${MYHDFPATH}/include")
-link_directories("${MYHDFPATH}/lib")
-set(MYHDFLINKFLAGS "-L${MYHDFPATH}/lib/ ${MYHDFPATH}/lib/libhdf5_hl.a ${MYHDFPATH}/lib/libhdf5.a ${MYHDFPATH}/lib/libz.a ${MYHDFPATH}/lib/libsz.a ${MYHDFPATH}/lib/libaec.a -ldl")
+#include_directories("${MYHDFPATH}/include")
+#link_directories("${MYHDFPATH}/lib")
 
+include_directories("${CONDA_PREFIX}/include/voro++")
 
-set(Boost_INCLUDE_DIR "${MYBOOSTPATH}")
+set(MYHDFLINKFLAGS "-L${CONDA_PREFIX}/lib/ ${CONDA_PREFIX}/lib/libhdf5_hl.so ${CONDA_PREFIX}/lib/libhdf5.so ${CONDA_PREFIX}/lib/libz.a ${CONDA_PREFIX}/lib/libsz.a ${CONDA_PREFIX}/lib/libaec.a -ldl")
+
+
+#set(Boost_INCLUDE_DIR "${MYBOOSTPATH}")
 #include_directories("${MYCGALPATH}")
-set(CGAL_DIR "${MYCGALPATH}")
-include_directories("${MYEIGENPATH}")
-include_directories("${MYVOROXXPATH}/src")
+#set(CGAL_DIR "${MYCGALPATH}")
+#include_directories("${MYEIGENPATH}")
+#include_directories("${MYVOROXXPATH}/src")
+find_package(CGAL QUIET)
+find_package(Eigen)
+find_package(Boost)
+link_directories(${Boost_LIBRARY_DIR})
+
 
 #GMP and MPFR is included and found alongside the CGAL library
 #connect with ExternalLibraries.cmake via MYCGALHOME and MYEIGENHOME
-find_package(CGAL QUIET)
-if( CGAL_FOUND )
-	include( ${CGAL_USE_FILE} )
-	if (EMPLOY_MYEIGEN)
-		find_package(Eigen3 3.1.0 REQUIRED) #(3.1.0 or greater)
-		include(CGAL_Eigen3_support)
-		if(NOT TARGET CGAL::Eigen3_support)
-			message(STATUS "This project requires the Eigen library, and will not be compiled.")
-			return()
-		endif()
-	endif()
-endif()
+#find_package(CGAL QUIET)
+#if( CGAL_FOUND )
+#	include( ${CGAL_USE_FILE} )
+#	if (EMPLOY_MYEIGEN)
+#		find_package(Eigen3 3.1.0 REQUIRED) #(3.1.0 or greater)
+#		include(CGAL_Eigen3_support)
+#		if(NOT TARGET CGAL::Eigen3_support)
+#			message(STATUS "This project requires the Eigen library, and will not be compiled.")
+#			return()
+#		endif()
+#	endif()
+#endif()
 
 #connect with ExternalLibraries.cmake via MYBOOSTHOME
 #include_directories(${Boost_INCLUDE_DIR})
-link_directories(${Boost_LIBRARY_DIR})
-find_package(Boost)
+#link_directories(${Boost_LIBRARY_DIR})
+#find_package(Boost)
 
 #setting up compiler-specifics
 if(EMPLOY_GNUCOMPILER)
@@ -96,38 +96,42 @@ if(EMPLOY_PARALLELISM_MPI)
 endif()
 
 #specific paths of dependencies for this tool
-set(MYTOOLSRCPATH "${MYTOOLPATH}/src/cxx")
+set(MYTOOLSRCPATH "src/cxx")
+set(MYEXTPATH "../code/thirdparty/mandatory/hdf5cxxwrapper/src/cxx")
+set(MYVOROSRCPATH "../../voro++/src")
+set(COMPILEPATH "../compiled_code")
+
 
 #list firstly the precompiled shared aka utils, secondly the tool-specific components, lastly the tool-specific main
 add_executable(${MYPROJECTNAME}
-	${MYUTILSPATH}/../../${MYPROJECTPATH}code/thirdparty/mandatory/hdf5cxxwrapper/src/cxx/hdf5_wrapper_cxx_sequ_core.cpp.o
-	${MYUTILSPATH}/../../${MYPROJECTPATH}code/thirdparty/mandatory/hdf5cxxwrapper/src/cxx/hdf5_wrapper_cxx_structs.cpp.o
-	${MYUTILSPATH}/CONFIG_Shared.cpp.o
-	${MYUTILSPATH}/PARAPROBE_CiteMe.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Verbose.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Profiling.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Math.cpp.o
-	${MYUTILSPATH}/PARAPROBE_PrimsContinuum.cpp.o
-	${MYUTILSPATH}/PARAPROBE_PrimsDiscrete.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Geometry.cpp.o
-	${MYUTILSPATH}/PARAPROBE_UserStructs.cpp.o
-	${MYUTILSPATH}/PARAPROBE_UserStructsSorting.cpp.o
-	${MYUTILSPATH}/PARAPROBE_MPIStructs.cpp.o
-	${MYUTILSPATH}/PARAPROBE_PeriodicTable.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Crystallography.cpp.o
-	${MYUTILSPATH}/PARAPROBE_OriMath.cpp.o
-	${MYUTILSPATH}/PARAPROBE_Histogram2D.cpp.o
-	${MYUTILSPATH}/PARAPROBE_TwoPointStats3D.cpp.o
-	${MYUTILSPATH}/PARAPROBE_ROIs.cpp.o
-	${MYUTILSPATH}/PARAPROBE_AABBTree.cpp.o
-	${MYUTILSPATH}/PARAPROBE_KDTree.cpp.o
-	${MYUTILSPATH}/PARAPROBE_VolumeBinning.cpp.o
-	${MYUTILSPATH}/PARAPROBE_IonCloudMemory.cpp.o
-	${MYUTILSPATH}/PARAPROBE_HDF5BaseHdl.cpp.o
-	${MYUTILSPATH}/PARAPROBE_XDMFBaseHdl.cpp.o
-	${MYUTILSPATH}/PARAPROBE_TriangleSoupHdl.cpp.o
-	${MYUTILSPATH}/PARAPROBE_ToolsBaseHdl.cpp.o
-	${MYUTILSPATH}/PARAPROBE_ConfigBaseHDF5.cpp.o
+	${COMPILEPATH}/hdf5_wrapper_cxx_sequ_core.cpp.o
+	${COMPILEPATH}/hdf5_wrapper_cxx_structs.cpp.o
+	${COMPILEPATH}/CONFIG_Shared.cpp.o
+	${COMPILEPATH}/PARAPROBE_CiteMe.cpp.o
+	${COMPILEPATH}/PARAPROBE_Verbose.cpp.o
+	${COMPILEPATH}/PARAPROBE_Profiling.cpp.o
+	${COMPILEPATH}/PARAPROBE_Math.cpp.o
+	${COMPILEPATH}/PARAPROBE_PrimsContinuum.cpp.o
+	${COMPILEPATH}/PARAPROBE_PrimsDiscrete.cpp.o
+	${COMPILEPATH}/PARAPROBE_Geometry.cpp.o
+	${COMPILEPATH}/PARAPROBE_UserStructs.cpp.o
+	${COMPILEPATH}/PARAPROBE_UserStructsSorting.cpp.o
+	${COMPILEPATH}/PARAPROBE_MPIStructs.cpp.o
+	${COMPILEPATH}/PARAPROBE_PeriodicTable.cpp.o
+	${COMPILEPATH}/PARAPROBE_Crystallography.cpp.o
+	${COMPILEPATH}/PARAPROBE_OriMath.cpp.o
+	${COMPILEPATH}/PARAPROBE_Histogram2D.cpp.o
+	${COMPILEPATH}/PARAPROBE_TwoPointStats3D.cpp.o
+	${COMPILEPATH}/PARAPROBE_ROIs.cpp.o
+	${COMPILEPATH}/PARAPROBE_AABBTree.cpp.o
+	${COMPILEPATH}/PARAPROBE_KDTree.cpp.o
+	${COMPILEPATH}/PARAPROBE_VolumeBinning.cpp.o
+	${COMPILEPATH}/PARAPROBE_IonCloudMemory.cpp.o
+	${COMPILEPATH}/PARAPROBE_HDF5BaseHdl.cpp.o
+	${COMPILEPATH}/PARAPROBE_XDMFBaseHdl.cpp.o
+	${COMPILEPATH}/PARAPROBE_TriangleSoupHdl.cpp.o
+	${COMPILEPATH}/PARAPROBE_ToolsBaseHdl.cpp.o
+	${COMPILEPATH}/PARAPROBE_ConfigBaseHDF5.cpp.o
 
 	${MYTOOLSRCPATH}/CONFIG_Ranger.cpp
 	${MYTOOLSRCPATH}/PARAPROBE_RangerStructs.cpp
diff --git a/code/paraprobe-transcoder/src/python/__init__.py b/code/paraprobe-transcoder/src/python/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-transcoder/src/python/paraprobe_transcoder.py b/code/paraprobe-transcoder/src/python/paraprobe_transcoder.py
index f2baff3..be9d9ac 100644
--- a/code/paraprobe-transcoder/src/python/paraprobe_transcoder.py
+++ b/code/paraprobe-transcoder/src/python/paraprobe_transcoder.py
@@ -23,20 +23,20 @@ import h5py
 #print(nomad_source)
 #sys.path.append(nomad_source)
 
-from thirdparty.mandatory.nomad.aptfim_io_apt6_reader import ReadAptFileFormat
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_apt6_reader import ReadAptFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_pos_reader import ReadPosFileFormat
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_pos_reader import ReadPosFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_epos_reader import ReadEposFileFormat
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_epos_reader import ReadEposFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_rrng_reader import ReadRrngFileFormat
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_rrng_reader import ReadRrngFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_rng_reader import ReadRngFileFormat
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_rng_reader import ReadRngFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_matlab_fig_reader \
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_matlab_fig_reader \
     import ReadMatlabFigFileFormat
 
-from thirdparty.mandatory.nomad.aptfim_io_utils \
+from paraprobe_transcoder.thirdparty.mandatory.nomad.aptfim_io_utils \
     import NxField, MAX_NUMBER_OF_ATOMS_PER_ION
 
 # ##MK import from parmsetup
diff --git a/code/paraprobe-transcoder/src/python/thirdparty/__init__.py b/code/paraprobe-transcoder/src/python/thirdparty/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-transcoder/src/python/thirdparty/mandatory/__init__.py b/code/paraprobe-transcoder/src/python/thirdparty/mandatory/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-transcoder/src/python/thirdparty/mandatory/systeminfo/__init__.py b/code/paraprobe-transcoder/src/python/thirdparty/mandatory/systeminfo/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-transcoder/src/python/thirdparty/mandatory/xdmf/__init__.py b/code/paraprobe-transcoder/src/python/thirdparty/mandatory/xdmf/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/code/paraprobe-utils/CMakeLists.txt b/code/paraprobe-utils/CMakeLists.txt
index 5cae136..2cecd0d 100755
--- a/code/paraprobe-utils/CMakeLists.txt
+++ b/code/paraprobe-utils/CMakeLists.txt
@@ -1,10 +1,5 @@
 cmake_minimum_required(VERSION 3.18.4)
 
-################################################################################################################################
-##DEVELOPER SECTION#############################################################################################################
-##in this section software developers need to make changes when debugging#######################################################
-################################################################################################################################ 
-
 #please name your project accordingly
 set(MYPROJECTNAME "paraprobe_utils")
 message([STATUS] "Projectname is ${MYPROJECTNAME}")
@@ -12,22 +7,13 @@ project(${MYPROJECTNAME} LANGUAGES CXX)
 set(CMAKE_BUILD_DIR "build")
 
 #pull general information about external libraries and paths related to paraprobe
-include("../PARAPROBE.Dependencies.cmake")
-message([STATUS] "MYPROJECTPATH: ${MYPROJECTPATH}")
-message([STATUS] "MYUTILSPATH: ${MYUTILSPATH}")
-message([STATUS] "MYHDF5PATH: ${MYHDFPATH}")
-message([STATUS] "MYBOOSTPATH: ${MYBOOSTPATH}")
-message([STATUS] "MYCGALPATH: ${MYCGALPATH}")
-message([STATUS] "MYEIGENPATH: ${MYEIGENPATH}")
-message([STATUS] "MYVOROXXPATH: ${MYVOROXXPATH}")
+message([STATUS] "CONDA_PATH: ${CONDA_PREFIX}")
 
 
 set(EMPLOY_GNUCOMPILER ON)
 message([STATUS] "MYCCC_COMPILER: __${CMAKE_C_COMPILER}__")
 message([STATUS] "MYCXX_COMPILER: __${CMAKE_CXX_COMPILER}__")
 
-#define which parallelization layers are used
-set(EMPLOY_PARALLELISM_CUDA OFF)
 
 #choose optimization level
 ##-O0 nothing, debug purposes, -O1 moderate optimization, -O2 -O3 for production level up to aggressive architecture specific non-portable optimization
@@ -38,45 +24,18 @@ if(EMPLOY_GNUCOMPILER)
 	message([STATUS] "We utilize optimization level ${MYOPTLEVEL}")													
 endif()
 
-################################################################################################################################
-##END OF INTERACTION FOR NON PRO USERS##########################################################################################
-##here advanced users might want/need to make modifications if they use non default places for thirdparty libraries#############
-################################################################################################################################
-#HDF5 local installation for advanced I/O, collecting metadata and bundle analysis results together
-include_directories("${MYHDFPATH}/include")
-link_directories("${MYHDFPATH}/lib")
-set(MYHDFLINKFLAGS "-L${MYHDFPATH}/lib/ ${MYHDFPATH}/lib/libhdf5_hl.a ${MYHDFPATH}/lib/libhdf5.a ${MYHDFPATH}/lib/libz.a ${MYHDFPATH}/lib/libsz.a ${MYHDFPATH}/lib/libaec.a -ldl")
-
-set(Boost_INCLUDE_DIR "${MYBOOSTPATH}")
-#include_directories("${MYCGALPATH}")
-set(CGAL_DIR "${MYCGALPATH}")
-set(EIGEN3_INCLUDE_DIR "${MYEIGENPATH}")
-include_directories("${MYEIGENPATH}")
-include_directories("${MYVOROXXPATH}/src")
+set(MYHDFLINKFLAGS "-L${CONDA_PREFIX}/lib/ ${CONDA_PREFIX}/lib/libhdf5_hl.so ${CONDA_PREFIX}/lib/libhdf5.so ${CONDA_PREFIX}/lib/libz.a ${CONDA_PREFIX}/lib/libsz.a ${CONDA_PREFIX}/lib/libaec.a -ldl")
+
+include_directories("${CONDA_PREFIX}/include")
 
 #GMP and MPFR is included and found alongside the CGAL library
 #connect with ExternalLibraries.cmake via MYCGALHOME
 find_package(CGAL QUIET)
-if( CGAL_FOUND )
-	include( ${CGAL_USE_FILE} )
-	find_package(Eigen3 3.1.0 REQUIRED) #(3.1.0 or greater)
-	include(CGAL_Eigen3_support)
-	if(NOT TARGET CGAL::Eigen3_support)
-		message(STATUS "This project requires the Eigen library, and will not be compiled.")
-		return()
-	endif()
-else()
-	message([FATAL_ERROR] "CGAL is required, employ it!")															
-endif()
-
-#connect with ExternalLibraries.cmake via MYBOOSTHOME
-#include_directories(${Boost_INCLUDE_DIR})
-#include_directories(${MYBOOSTPATH})
-
-link_directories(${Boost_LIBRARY_DIR})
+find_package(Eigen)
 find_package(Boost)
+link_directories(${Boost_LIBRARY_DIR})
 
-include_directories("${MYVOROXXPATH}/src")
+#include_directories("${MYVOROXXPATH}/src")
 
 #automatically assign project name and compiler flags
 
@@ -101,12 +60,12 @@ if(EMPLOY_PARALLELISM_MPI)
 endif()
 
 #specific paths of dependencies for this tool
-set(MYTOOLSRCPATH "${MYPROJECTPATH}/code/paraprobe-utils/src/cxx")
-set(MYVOROSRCPATH "${MYVOROXXPATH}/src")
+set(MYTOOLSRCPATH "src/cxx")
+set(MYVOROSRCPATH "../../voro++/src")
 
 add_library(paraprobe-utils OBJECT
-	${MYPROJECTPATH}/code/thirdparty/mandatory/hdf5cxxwrapper/src/cxx/hdf5_wrapper_cxx_structs.cpp
-	${MYPROJECTPATH}/code/thirdparty/mandatory/hdf5cxxwrapper/src/cxx/hdf5_wrapper_cxx_sequ_core.cpp
+	${MYTOOLSRCPATH}/hdf5_wrapper_cxx_structs.cpp
+	${MYTOOLSRCPATH}/hdf5_wrapper_cxx_sequ_core.cpp
 	${MYTOOLSRCPATH}/PARAPROBE_CoordinateSystem.cpp
 	${MYTOOLSRCPATH}/CONFIG_Shared.cpp
 	${MYTOOLSRCPATH}/PARAPROBE_CiteMe.cpp
@@ -155,5 +114,5 @@ add_library(paraprobe-utils OBJECT
 	#${MYVOROSRCPATH}/voro++.cc
 	${MYVOROSRCPATH}/wall.cc
 )
-
+#link to library instead of cpp files
 #nothing to link because utilities are compiled into object files only
