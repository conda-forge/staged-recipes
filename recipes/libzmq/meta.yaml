{% set name = "libzmq" %}
{% set version = "4.3.5" %}

{% set so_version = "5.2.5" %}
{% set so_major_version = so_version.split('.')[0] %}
{% set dll_version = version.replace(".", "_") %}
package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/zeromq/libzmq/archive/refs/tags/v4.3.5.tar.gz
  sha256: 6c972d1e6a91a0ecd79c3236f04cf0126f2f4dfbbad407d72b4606a7ba93f9c6

build:
  number: 0
  ignore_run_exports:
    - VCRUNTIME140.dll  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake
    - ninja
    - pkg-config
  host:
    - gnutls  # [unix]

test:
  source_files:
    - build-release/platform.hpp
    - external
    - include
    - src
    - tests
  requires:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake
    - ninja
  commands:
    # Installation tests
    - test -f $PREFIX/bin/local_lat  # [unix]
    - test -f $PREFIX/bin/remote_lat  # [unix]
    - test -f $PREFIX/bin/local_thr  # [unix]
    - test -f $PREFIX/bin/remote_thr  # [unix]
    - test -f $PREFIX/bin/inproc_lat  # [unix]
    - test -f $PREFIX/bin/inproc_thr  # [unix]
    - test -f $PREFIX/bin/proxy_thr  # [unix]
    - test -f $PREFIX/lib/libzmq.so.{{ so_version }}  # [linux]
    - test -f $PREFIX/lib/libzmq.so.{{ so_major_version }}  # [linux]
    - test -f $PREFIX/lib/libzmq{{ SHLIB_EXT }}  # [unix]
    - test -f $PREFIX/lib/libzmq.{{ so_major_version }}.dylib  # [osx]
    - test -f $PREFIX/lib/cmake/ZeroMQ/ZeroMQTargets.cmake  # [unix]
    - test -f $PREFIX/lib/cmake/ZeroMQ/ZeroMQTargets-release.cmake  # [unix]
    - test -f $PREFIX/lib/cmake/ZeroMQ/ZeroMQConfig.cmake  # [unix]
    - test -f $PREFIX/lib/cmake/ZeroMQ/ZeroMQConfigVersion.cmake  # [unix]
    - test -f $PREFIX/lib/pkgconfig/libzmq.pc  # [unix]
    - test -f $PREFIX/include/zmq.h  # [unix]
    - test -f $PREFIX/include/zmq_utils.h  # [unix]
    - test -f $PREFIX/share/zmq/AUTHORS.txt  # [unix]
    - test -f $PREFIX/share/zmq/LICENSE.txt  # [unix]
    - test -f $PREFIX/share/zmq/NEWS.txt  # [unix]

    - if not exist %PREFIX%\\bin\\local_lat.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\remote_lat.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\local_thr.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\remote_thr.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\inproc_lat.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\inproc_thr.exe exit 1  # [win]
    - if not exist %PREFIX%\\bin\\proxy_thr.exe exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\libzmq.dll exit 1  # [win]
    - if not exist %LIBRARY_BIN%\\libzmq-mt-{{ dll_version }}.dll exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\libzmq-mt-{{ dll_version }}.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\ZeroMQ\\ZeroMQTargets.cmake exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\ZeroMQ\\ZeroMQTargets-release.cmake exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\ZeroMQ\\ZeroMQConfig.cmake exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\cmake\\ZeroMQ\\ZeroMQConfigVersion.cmake exit 1  # [win]
    - if not exist %LIBRARY_LIB%\\pkgconfig\\libzmq.pc exit 1  # [win]
    - if not exist %LIBRARY_INC%\\zmq.h exit 1  # [win]
    - if not exist %LIBRARY_INC%\\zmq_utils.h exit 1  # [win]
    - if not exist %PREFIX%\\share\\zmq\\AUTHORS.txt exit 1  # [win]
    - if not exist %PREFIX%\\share\\zmq\\LICENSE.txt exit 1  # [win]
    - if not exist %PREFIX%\\share\\zmq\\NEWS.txt exit 1  # [win]

    # # Not installing vcruntime (ENABLE_CPACK=OFF)
    # - if exist %PREFIX%\\bin\\msvcp140.dll exit 1  # [win]
    # - echo Installation tests pass  # [win]

    # Testsuite
    - cp build-release/platform.hpp $SRC_DIR/src  # [unix]
    - sed -i -E 's@\binclude_directories\((.*)\)@include_directories(\1 "${ZeroMQ_SOURCE_DIR}/../external/unity")@' $SRC_DIR/tests/CMakeLists.txt  # [linux]
    - sed -i -E 's@target_link_libraries\(testutil libzmq@target_link_libraries\(testutil zmq@' $SRC_DIR/tests/CMakeLists.txt  # [linux]
    - sed -i '' -E 's@\binclude_directories\((.*)\)@include_directories(\1 "${ZeroMQ_SOURCE_DIR}/../external/unity")@' $SRC_DIR/tests/CMakeLists.txt  # [osx]
    - sed -i '' -E 's@target_link_libraries\(testutil libzmq@target_link_libraries\(testutil zmq@' $SRC_DIR/tests/CMakeLists.txt  # [osx]

    # - cp build-release\\platform.hpp $SRC_DIR\\src  # [win]
    # - powershell -Command "(Get-Content $env:SRC_DIR/tests/CMakeLists.txt) -replace '\binclude_directories\((.*)\)', 'include_directories($1 \"${ZeroMQ_SOURCE_DIR}/../external/unity\")' | Set-Content $env:SRC_DIR/tests/CMakeLists.txt"  # [win]
    # - powershell -Command "(Get-Content $env:SRC_DIR/tests/CMakeLists.txt) -replace 'target_link_libraries\(testutil libzmq', 'target_link_libraries(testutil zmq' | Set-Content $env:SRC_DIR/tests/CMakeLists.txt"  # [win]
    # - powershell -Command "New-Item -ItemType Directory -Force -Path build-test"  # [win]

    # - mkdir build-test
    # - cd build-test
    # - cmake $SRC_DIR/tests -Wno-dev -D BUILD_SHARED=ON -D CMAKE_PREFIX_PATH=$SRC_DIR/external/unity -D ZeroMQ_SOURCE_DIR=$SRC_DIR/build-release -D ZeroMQ_BINARY_DIR=${PREFIX} -G Ninja
    # - cmake --build . --config Release
    # - ctest -C Release --output-on-failure

about:
  home: https://github.com/zeromq/libzm
  summary: 'The ZeroMQ lightweight messaging kernel'
  description: |
    The ZeroMQ lightweight messaging kernel is a library which extends the standard
    socket interfaces with features traditionally provided by specialised messaging
    middleware products. ZeroMQ sockets provide an abstraction of asynchronous message
    queues, multiple messaging patterns, message filtering (subscriptions), seamless
    access to multiple transport protocols and more.
  license: MPL-2.0
  license_file: LICENSE
  doc_url: https://zeromq.org/

extra:
  recipe-maintainers:
    - MementoRC
