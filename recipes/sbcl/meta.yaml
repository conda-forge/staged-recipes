{% set name = "sbcl" %}
{% set version = "2.4.4" %}

{% set glibc_min_version = "2.28" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - folder: bootstrapping
    # requires GLIBC 2.34
    # url: https://prdownloads.sourceforge.net/sbcl/sbcl-2.4.3-x86-64-linux-binary.tar.bz2  # [linux]
    # sha256: 4ffbb6949108878be7a44a5e6d7a4e92b8aba581f7e39f74a3d9352a1d4f4646  # [linux]
    url: https://prdownloads.sourceforge.net/sbcl/sbcl-2.2.11-x86-64-linux-binary.tar.bz2  # [linux]
    sha256: 477a885b260c8cf8c794e0c9af0769303706f11e51367dad48e5b402ad0a9493  # [linux]
  - url: https://prdownloads.sourceforge.net/sbcl/sbcl-2.2.9-x86-64-darwin-binary.tar.bz2  # [osx and x86_64]
    sha256: 6f504b9282c83842c0601600f5e0663209b53b133125ec3334ff7a0bd0037ca6  # [osx and x86_64]
  - url: https://prdownloads.sourceforge.net/sbcl/sbcl-2.4.0-arm64-darwin-binary.tar.bz2  # [osx and arm64]
    sha256: 1d01fac2d9748f769c9246a0a11a2c011d7843337f8f06ca144f5a500e10c117  # [osx and arm64]
  - url: https://prdownloads.sourceforge.net/sbcl/sbcl-2.4.3-x86-64-windows-binary.msi  # [win]
    sha256: 2a100f59aa9e9bb39031e40d884a4c3e94005a830feaadfe8616bbac28f172ab  # [win]

  - url: https://downloads.sourceforge.net/project/sbcl/sbcl/{{ version }}/sbcl-{{ version }}-source.tar.bz2
    sha256: 8a932627b3f1d8e9618f1cdc225edcb002456804697e2c87d140683764a106d5
    folder: sbcl-from-source
    patches:
      - 0001-add-patchelf-sbcl.patch
      - 0002-add-patchelf-reloc-test.patch

build:
  number: 0
  skip: true  # [not linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - make
    - patchelf  # [linux]
    - zstd
  host:
    - zstd

test:
  source_files:
    - sbcl-from-source/tests
  commands:
    - test -f ${PREFIX}/etc/conda/activate.d/sbcl-activate.sh  # [unix]
    - test -f ${PREFIX}/etc/conda/deactivate.d/sbcl-deactivate.sh  # [unix]
    - if not exist %PREFIX%\\etc\\conda\\activate.d\\sbcl-activate.bat exit 1  # [win]
    - if not exist %PREFIX%\\etc\\conda\\deactivate.d\\sbcl-deactivate.bat exit 1  # [win]

    - test -f ${PREFIX}/bin/sbcl  # [unix]
    - test -f ${PREFIX}/lib/sbcl/contrib/asdf.fasl  # [unix]
    - test -f ${PREFIX}/lib/sbcl/contrib/uiop.fasl  # [unix]
    - if not exist %PREFIX%\\bin\\sbcl.exe exit 1  # [win]
    - if not exist %PREFIX%\\lib\\sbcl\\contrib\\asdf.fasl exit 1  # [win]
    - if not exist %PREFIX%\\lib\\sbcl\\contrib\\uiop.fasl exit 1  # [win]

    {% set contribs = [
      "sb-aclrepl", "sb-bsd-sockets", "sb-capstone", "sb-cltl2", "sb-concurrency", "sb-cover",
      "sb-executable", "sb-gmp", "sb-grovel", "sb-introspect", "sb-md5", "sb-mpfr", "sb-perf",
      "sb-posix", "sb-queue", "sb-rotate-byte", "sb-rt", "sb-simd", "sb-simple-streams", "sb-sprof",
    ] %}
    {% for contrib in contribs %}
    - test -f ${PREFIX}/lib/sbcl/contrib/{{ contrib }}.asd  # [unix]
    - test -f ${PREFIX}/lib/sbcl/contrib/{{ contrib }}.fasl  # [unix]
    - if not exist %PREFIX%\\lib\\sbcl\\contrib\\{{ contrib }}.asd exit 1  # [win]
    - if not exist %PREFIX%\\lib\\sbcl\\contrib\\{{ contrib }}.fasl exit 1  # [win]
    {% endfor %}

    - test -f ${PREFIX}/lib/sbcl/sbcl.core  # [unix]
    - test -f ${PREFIX}/lib/sbcl/sbcl.mk  # [unix]
    - test -f ${PREFIX}/share/doc/sbcl/BUGS  # [unix]
    - test -f ${PREFIX}/share/doc/sbcl/COPYING  # [unix]
    - test -f ${PREFIX}/share/doc/sbcl/CREDITS  # [unix]
    - test -f ${PREFIX}/share/doc/sbcl/NEWS  # [unix]
    - test -f ${PREFIX}/share/man/man1/sbcl.1  # [unix]
    - if not exist %PREFIX%\\lib\\sbcl\\sbcl.core exit 1  # [win]
    - if not exist %PREFIX%\\lib\\sbcl\\sbcl.mk exit 1  # [win]
    - if not exist %PREFIX%\\share\\doc\\sbcl\\BUGS exit 1  # [win]
    - if not exist %PREFIX%\\share\\doc\\sbcl\\COPYING exit 1  # [win]
    - if not exist %PREFIX%\\share\\doc\\sbcl\\CREDITS exit 1  # [win]
    - if not exist %PREFIX%\\share\\doc\\sbcl\\NEWS exit 1  # [win]
    - if not exist %PREFIX%\\share\\man\\man1\\sbcl.1 exit 1  # [win]

    # Empty due to TeX requirements unmet on conda-forge
    - test -d ${PREFIX}/share/info  # [unix]
    - test -d ${PREFIX}/share/doc/sbcl/html  # [unix]
    - if not exist %PREFIX%\\share\\info exit 1  # [win]
    - if not exist %PREFIX%\\share\\doc\\sbcl\\html exit 1  # [win]

    # Remove failing test - TEMPORARY
    - rm -rf sbcl-from-source/tests/elfcore.test.sh
    - rm -rf sbcl-from-source/tests/futex-wait.test.sh
    - cd sbcl-from-source/tests && sh run-tests.sh

about:
  home: https://www.sbcl.org/
  summary: 'Steel Bank Common Lisp (SBCL) is a high performance Common Lisp compiler.'
  description: |
    Steel Bank Common Lisp (SBCL) is a high performance Common Lisp compiler.
    It is open source / free software, with a permissive license. In addition
    to the compiler and runtime system for ANSI Common Lisp, it provides an
    interactive environment including a debugger, a statistical profiler, a
    code coverage tool, and many other extensions.
  license: MIT
  license_file:
    - COPYING
  doc_url: https://www.sbcl.org/manual/index.html

extra:
  recipe-maintainers:
    - MementoRC
