{% set version = '1.1.0' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-randomcolor
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/randomcoloR_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/randomcoloR/randomcoloR_{{ version }}.tar.gz
  sha256: 0ffe3c3dbcd37c5eb966724a0cd101cc50940c2b44537a1a38c4f5e3f2eb396a

build:
  merge_build_host: True  # [win]
  # If this is a new build for the same version, increment the build number.
  number: 0

  # This is required to make R link correctly on Linux.
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{posix}}zip               # [win]

  host:
    - r-base
    - r-rtsne
    - r-v8
    - r-cluster
    - r-colorspace
    - r-scales
    - r-stringr

  run:
    - r-base
    - r-rtsne
    - r-v8
    - r-cluster
    - r-colorspace
    - r-scales
    - r-stringr

test:
  commands:
    # You can put additional test commands to be run here.
    - $R -e "library('randomcoloR')"           # [not win]
    - "\"%R%\" -e \"library('randomcoloR')\""  # [win]

  # You can also put a file called run_test.py, run_test.sh, or run_test.bat
  # in the recipe that will be run at test time.

  # requires:
    # Put any additional test requirements here.

about:
  home: https://CRAN.R-project.org/package=randomcoloR
  license: CC0
  summary: Simple methods to generate attractive random colors. The random colors are from a
    wrapper of 'randomColor.js' <https://github.com/davidmerfield/randomColor>. In addition,
    it also generates optimally distinct colors based on k-means (inspired by 'IWantHue'
    <https://github.com/medialab/iwanthue>).
  license_family: CC

extra:
  recipe-maintainers:
    - valscherz

# The original CRAN metadata for this package was:

# Package: randomcoloR
# Type: Package
# Title: Generate Attractive Random Colors
# Version: 1.1.0
# Date: 2017-12-06
# Author: Ron Ammar
# Maintainer: Ron Ammar <ron.ammar@gmail.com>
# Description: Simple methods to generate attractive random colors. The random colors are from a wrapper of 'randomColor.js' <https://github.com/davidmerfield/randomColor>. In addition, it also generates optimally distinct colors based on k-means (inspired by 'IWantHue' <https://github.com/medialab/iwanthue>).
# License: CC0
# BugReports: https://github.com/ronammar/randomcoloR/issues
# LazyData: TRUE
# RoxygenNote: 6.0.1
# Imports: colorspace, stringr, V8, stats, methods, scales, Rtsne, grDevices, cluster
# NeedsCompilation: no
# Packaged: 2017-12-07 17:11:31 UTC; ammarr
# Repository: CRAN
# Date/Publication: 2017-12-08 00:09:10 UTC

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
