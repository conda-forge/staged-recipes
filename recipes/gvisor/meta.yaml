{% set provider = "gvisor" %}
{% set goname = "github.com/google/"+provider.lower() %}
{% set version = "20200127.0" %}

{% set name = goname.split('/')[-1] %}
{% set pkg_src = ('src/'+goname).replace("/",os.sep) %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - folder: {{ pkg_src }}
    url: https://github.com/google/{{ provider }}/archive/release-{{ version }}.tar.gz
    sha256: 30b4480fe6f33ab34a732932db1888be32f03b78a92cd9284bf7c57e4254ecc6

build:
  number: 0
  skip: True  # [osx and win]
  script:
#    - pushd {{ pkg_src }}
#    - export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/usr/local/lib64:/usr/lib64
#    - export LD_PRELOAD=/opt/miniconda3/lib/libstdc++.so.6.0.25
#    - export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu to the LD_LIBRARY_PATH
#    - export CXXFLAGS="-static-libstdc++"
#    - export BAZEL_LINKOPTS="-static-libgcc:-static-libstdc++:-l%:libstdc++.a:-lm:-Wl,--disable-new-dtags"
#    - bazel build runsc
    - echo "module runsc" > go.mod
    - export GO111MODULE=on
    - go get gvisor.dev/gvisor/runsc@go
    - export CGO_ENABLED=0
    - export GO111MODULE=on
#    - pushd {{ pkg_src }}/runsc
    - go install gvisor.dev/gvisor/runsc

requirements:
  build:
    - {{ compiler('cxx') }}
    - go-nocgo
    - bazel
    - git
  host:
    - python
    - pip
  run:
    - python

test:
  requires:
    - bazel
  commands:
    - bazel test //...

about:
  home: https://gvisor.dev
  license: Apache-2.0
  license_file: LICENSE
  summary: Container Runtime Sandbox
  doc_url: https://gvisor.dev/docs
  dev_url: https://github.com/google/gvisor

extra:
  recipe-maintainers:
    - mwilson8
    - rluria14
    - sodre
